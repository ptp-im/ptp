// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PTP.Auth.proto

#include "PTP.Auth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_PTP_2eCommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PTP_2eCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo;
}  // namespace protobuf_PTP_2eCommon_2eproto
namespace PTP {
namespace Auth {
class AuthCaptchaReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthCaptchaReq>
      _instance;
} _AuthCaptchaReq_default_instance_;
class AuthCaptchaResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthCaptchaRes>
      _instance;
} _AuthCaptchaRes_default_instance_;
class AuthLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthLoginReq>
      _instance;
} _AuthLoginReq_default_instance_;
class AuthLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthLoginRes>
      _instance;
} _AuthLoginRes_default_instance_;
class AuthLogoutReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthLogoutReq>
      _instance;
} _AuthLogoutReq_default_instance_;
class AuthLogoutResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthLogoutRes>
      _instance;
} _AuthLogoutRes_default_instance_;
}  // namespace Auth
}  // namespace PTP
namespace protobuf_PTP_2eAuth_2eproto {
static void InitDefaultsAuthCaptchaReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Auth::_AuthCaptchaReq_default_instance_;
    new (ptr) ::PTP::Auth::AuthCaptchaReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Auth::AuthCaptchaReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthCaptchaReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthCaptchaReq}, {}};

static void InitDefaultsAuthCaptchaRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Auth::_AuthCaptchaRes_default_instance_;
    new (ptr) ::PTP::Auth::AuthCaptchaRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Auth::AuthCaptchaRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthCaptchaRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthCaptchaRes}, {}};

static void InitDefaultsAuthLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Auth::_AuthLoginReq_default_instance_;
    new (ptr) ::PTP::Auth::AuthLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Auth::AuthLoginReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthLoginReq}, {}};

static void InitDefaultsAuthLoginRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Auth::_AuthLoginRes_default_instance_;
    new (ptr) ::PTP::Auth::AuthLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Auth::AuthLoginRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AuthLoginRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAuthLoginRes}, {
      &protobuf_PTP_2eCommon_2eproto::scc_info_UserInfo.base,}};

static void InitDefaultsAuthLogoutReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Auth::_AuthLogoutReq_default_instance_;
    new (ptr) ::PTP::Auth::AuthLogoutReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Auth::AuthLogoutReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthLogoutReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthLogoutReq}, {}};

static void InitDefaultsAuthLogoutRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Auth::_AuthLogoutRes_default_instance_;
    new (ptr) ::PTP::Auth::AuthLogoutRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Auth::AuthLogoutRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthLogoutRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthLogoutRes}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AuthCaptchaReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthCaptchaRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthLoginRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthLogoutReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthLogoutRes.base);
}

}  // namespace protobuf_PTP_2eAuth_2eproto
namespace PTP {
namespace Auth {

// ===================================================================

void AuthCaptchaReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthCaptchaReq::AuthCaptchaReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eAuth_2eproto::scc_info_AuthCaptchaReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Auth.AuthCaptchaReq)
}
AuthCaptchaReq::AuthCaptchaReq(const AuthCaptchaReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PTP.Auth.AuthCaptchaReq)
}

void AuthCaptchaReq::SharedCtor() {
}

AuthCaptchaReq::~AuthCaptchaReq() {
  // @@protoc_insertion_point(destructor:PTP.Auth.AuthCaptchaReq)
  SharedDtor();
}

void AuthCaptchaReq::SharedDtor() {
}

void AuthCaptchaReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthCaptchaReq& AuthCaptchaReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eAuth_2eproto::scc_info_AuthCaptchaReq.base);
  return *internal_default_instance();
}


void AuthCaptchaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Auth.AuthCaptchaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthCaptchaReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Auth.AuthCaptchaReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Auth.AuthCaptchaReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Auth.AuthCaptchaReq)
  return false;
#undef DO_
}

void AuthCaptchaReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Auth.AuthCaptchaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Auth.AuthCaptchaReq)
}

size_t AuthCaptchaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Auth.AuthCaptchaReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthCaptchaReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AuthCaptchaReq*>(&from));
}

void AuthCaptchaReq::MergeFrom(const AuthCaptchaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Auth.AuthCaptchaReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AuthCaptchaReq::CopyFrom(const AuthCaptchaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Auth.AuthCaptchaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthCaptchaReq::IsInitialized() const {
  return true;
}

void AuthCaptchaReq::Swap(AuthCaptchaReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthCaptchaReq::InternalSwap(AuthCaptchaReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AuthCaptchaReq::GetTypeName() const {
  return "PTP.Auth.AuthCaptchaReq";
}


// ===================================================================

void AuthCaptchaRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthCaptchaRes::kCaptchaFieldNumber;
const int AuthCaptchaRes::kAddressFieldNumber;
const int AuthCaptchaRes::kIvFieldNumber;
const int AuthCaptchaRes::kAadFieldNumber;
const int AuthCaptchaRes::kSignFieldNumber;
const int AuthCaptchaRes::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthCaptchaRes::AuthCaptchaRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eAuth_2eproto::scc_info_AuthCaptchaRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Auth.AuthCaptchaRes)
}
AuthCaptchaRes::AuthCaptchaRes(const AuthCaptchaRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_captcha()) {
    captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captcha_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  iv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iv()) {
    iv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iv_);
  }
  aad_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_aad()) {
    aad_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aad_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign()) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:PTP.Auth.AuthCaptchaRes)
}

void AuthCaptchaRes::SharedCtor() {
  captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aad_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

AuthCaptchaRes::~AuthCaptchaRes() {
  // @@protoc_insertion_point(destructor:PTP.Auth.AuthCaptchaRes)
  SharedDtor();
}

void AuthCaptchaRes::SharedDtor() {
  captcha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aad_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthCaptchaRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthCaptchaRes& AuthCaptchaRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eAuth_2eproto::scc_info_AuthCaptchaRes.base);
  return *internal_default_instance();
}


void AuthCaptchaRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Auth.AuthCaptchaRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      captcha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      address_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      iv_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      aad_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      sign_.ClearNonDefaultToEmptyNoArena();
    }
  }
  error_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthCaptchaRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Auth.AuthCaptchaRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string captcha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_captcha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes iv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_iv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes aad = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_aad()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes sign = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ERR error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(48u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Auth.AuthCaptchaRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Auth.AuthCaptchaRes)
  return false;
#undef DO_
}

void AuthCaptchaRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Auth.AuthCaptchaRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string captcha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->captcha(), output);
  }

  // required bytes address = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->address(), output);
  }

  // required bytes iv = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->iv(), output);
  }

  // required bytes aad = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->aad(), output);
  }

  // required bytes sign = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->sign(), output);
  }

  // required .PTP.Common.ERR error = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->error(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Auth.AuthCaptchaRes)
}

size_t AuthCaptchaRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Auth.AuthCaptchaRes)
  size_t total_size = 0;

  if (has_captcha()) {
    // required string captcha = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->captcha());
  }

  if (has_address()) {
    // required bytes address = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  if (has_iv()) {
    // required bytes iv = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->iv());
  }

  if (has_aad()) {
    // required bytes aad = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->aad());
  }

  if (has_sign()) {
    // required bytes sign = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());
  }

  if (has_error()) {
    // required .PTP.Common.ERR error = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
size_t AuthCaptchaRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Auth.AuthCaptchaRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string captcha = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->captcha());

    // required bytes address = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());

    // required bytes iv = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->iv());

    // required bytes aad = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->aad());

    // required bytes sign = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());

    // required .PTP.Common.ERR error = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthCaptchaRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AuthCaptchaRes*>(&from));
}

void AuthCaptchaRes::MergeFrom(const AuthCaptchaRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Auth.AuthCaptchaRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_captcha();
      captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captcha_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_iv();
      iv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iv_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_aad();
      aad_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aad_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_sign();
      sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
    }
    if (cached_has_bits & 0x00000020u) {
      error_ = from.error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthCaptchaRes::CopyFrom(const AuthCaptchaRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Auth.AuthCaptchaRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthCaptchaRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void AuthCaptchaRes::Swap(AuthCaptchaRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthCaptchaRes::InternalSwap(AuthCaptchaRes* other) {
  using std::swap;
  captcha_.Swap(&other->captcha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  iv_.Swap(&other->iv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  aad_.Swap(&other->aad_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AuthCaptchaRes::GetTypeName() const {
  return "PTP.Auth.AuthCaptchaRes";
}


// ===================================================================

void AuthLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthLoginReq::kAddressFieldNumber;
const int AuthLoginReq::kCaptchaFieldNumber;
const int AuthLoginReq::kClientTypeFieldNumber;
const int AuthLoginReq::kClientVersionFieldNumber;
const int AuthLoginReq::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthLoginReq::AuthLoginReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eAuth_2eproto::scc_info_AuthLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Auth.AuthLoginReq)
}
AuthLoginReq::AuthLoginReq(const AuthLoginReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_captcha()) {
    captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captcha_);
  }
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_client_version()) {
    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign()) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  client_type_ = from.client_type_;
  // @@protoc_insertion_point(copy_constructor:PTP.Auth.AuthLoginReq)
}

void AuthLoginReq::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_type_ = 1;
}

AuthLoginReq::~AuthLoginReq() {
  // @@protoc_insertion_point(destructor:PTP.Auth.AuthLoginReq)
  SharedDtor();
}

void AuthLoginReq::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captcha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthLoginReq& AuthLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eAuth_2eproto::scc_info_AuthLoginReq.base);
  return *internal_default_instance();
}


void AuthLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Auth.AuthLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      address_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      captcha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      client_version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      sign_.ClearNonDefaultToEmptyNoArena();
    }
    client_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Auth.AuthLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string captcha = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_captcha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ClientType client_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ClientType_IsValid(value)) {
            set_client_type(static_cast< ::PTP::Common::ClientType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string client_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes sign = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Auth.AuthLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Auth.AuthLoginReq)
  return false;
#undef DO_
}

void AuthLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Auth.AuthLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // required string captcha = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->captcha(), output);
  }

  // required .PTP.Common.ClientType client_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->client_type(), output);
  }

  // optional string client_version = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_version(), output);
  }

  // required bytes sign = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->sign(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Auth.AuthLoginReq)
}

size_t AuthLoginReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Auth.AuthLoginReq)
  size_t total_size = 0;

  if (has_address()) {
    // required string address = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  if (has_captcha()) {
    // required string captcha = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->captcha());
  }

  if (has_sign()) {
    // required bytes sign = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());
  }

  if (has_client_type()) {
    // required .PTP.Common.ClientType client_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->client_type());
  }

  return total_size;
}
size_t AuthLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Auth.AuthLoginReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x0000001b) ^ 0x0000001b) == 0) {  // All required fields are present.
    // required string address = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());

    // required string captcha = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->captcha());

    // required bytes sign = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());

    // required .PTP.Common.ClientType client_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->client_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string client_version = 5;
  if (has_client_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthLoginReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AuthLoginReq*>(&from));
}

void AuthLoginReq::MergeFrom(const AuthLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Auth.AuthLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_captcha();
      captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captcha_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_client_version();
      client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_sign();
      sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
    }
    if (cached_has_bits & 0x00000010u) {
      client_type_ = from.client_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthLoginReq::CopyFrom(const AuthLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Auth.AuthLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;
  return true;
}

void AuthLoginReq::Swap(AuthLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthLoginReq::InternalSwap(AuthLoginReq* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  captcha_.Swap(&other->captcha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_version_.Swap(&other->client_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_type_, other->client_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AuthLoginReq::GetTypeName() const {
  return "PTP.Auth.AuthLoginReq";
}


// ===================================================================

void AuthLoginRes::InitAsDefaultInstance() {
  ::PTP::Auth::_AuthLoginRes_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::PTP::Common::UserInfo*>(
      ::PTP::Common::UserInfo::internal_default_instance());
}
void AuthLoginRes::clear_user_info() {
  if (user_info_ != NULL) user_info_->Clear();
  clear_has_user_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthLoginRes::kErrorFieldNumber;
const int AuthLoginRes::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthLoginRes::AuthLoginRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eAuth_2eproto::scc_info_AuthLoginRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Auth.AuthLoginRes)
}
AuthLoginRes::AuthLoginRes(const AuthLoginRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_info()) {
    user_info_ = new ::PTP::Common::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:PTP.Auth.AuthLoginRes)
}

void AuthLoginRes::SharedCtor() {
  ::memset(&user_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&user_info_)) + sizeof(error_));
}

AuthLoginRes::~AuthLoginRes() {
  // @@protoc_insertion_point(destructor:PTP.Auth.AuthLoginRes)
  SharedDtor();
}

void AuthLoginRes::SharedDtor() {
  if (this != internal_default_instance()) delete user_info_;
}

void AuthLoginRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthLoginRes& AuthLoginRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eAuth_2eproto::scc_info_AuthLoginRes.base);
  return *internal_default_instance();
}


void AuthLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Auth.AuthLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(user_info_ != NULL);
    user_info_->Clear();
  }
  error_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Auth.AuthLoginRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.ERR error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PTP.Common.UserInfo user_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Auth.AuthLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Auth.AuthLoginRes)
  return false;
#undef DO_
}

void AuthLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Auth.AuthLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.ERR error = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  // optional .PTP.Common.UserInfo user_info = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_user_info(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Auth.AuthLoginRes)
}

size_t AuthLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Auth.AuthLoginRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .PTP.Common.ERR error = 2;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }
  // optional .PTP.Common.UserInfo user_info = 5;
  if (has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthLoginRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AuthLoginRes*>(&from));
}

void AuthLoginRes::MergeFrom(const AuthLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Auth.AuthLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_user_info()->::PTP::Common::UserInfo::MergeFrom(from.user_info());
    }
    if (cached_has_bits & 0x00000002u) {
      error_ = from.error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthLoginRes::CopyFrom(const AuthLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Auth.AuthLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthLoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_user_info()) {
    if (!this->user_info_->IsInitialized()) return false;
  }
  return true;
}

void AuthLoginRes::Swap(AuthLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthLoginRes::InternalSwap(AuthLoginRes* other) {
  using std::swap;
  swap(user_info_, other->user_info_);
  swap(error_, other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AuthLoginRes::GetTypeName() const {
  return "PTP.Auth.AuthLoginRes";
}


// ===================================================================

void AuthLogoutReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthLogoutReq::AuthLogoutReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eAuth_2eproto::scc_info_AuthLogoutReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Auth.AuthLogoutReq)
}
AuthLogoutReq::AuthLogoutReq(const AuthLogoutReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PTP.Auth.AuthLogoutReq)
}

void AuthLogoutReq::SharedCtor() {
}

AuthLogoutReq::~AuthLogoutReq() {
  // @@protoc_insertion_point(destructor:PTP.Auth.AuthLogoutReq)
  SharedDtor();
}

void AuthLogoutReq::SharedDtor() {
}

void AuthLogoutReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthLogoutReq& AuthLogoutReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eAuth_2eproto::scc_info_AuthLogoutReq.base);
  return *internal_default_instance();
}


void AuthLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Auth.AuthLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Auth.AuthLogoutReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Auth.AuthLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Auth.AuthLogoutReq)
  return false;
#undef DO_
}

void AuthLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Auth.AuthLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Auth.AuthLogoutReq)
}

size_t AuthLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Auth.AuthLogoutReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthLogoutReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AuthLogoutReq*>(&from));
}

void AuthLogoutReq::MergeFrom(const AuthLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Auth.AuthLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AuthLogoutReq::CopyFrom(const AuthLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Auth.AuthLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthLogoutReq::IsInitialized() const {
  return true;
}

void AuthLogoutReq::Swap(AuthLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthLogoutReq::InternalSwap(AuthLogoutReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AuthLogoutReq::GetTypeName() const {
  return "PTP.Auth.AuthLogoutReq";
}


// ===================================================================

void AuthLogoutRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthLogoutRes::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthLogoutRes::AuthLogoutRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eAuth_2eproto::scc_info_AuthLogoutRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Auth.AuthLogoutRes)
}
AuthLogoutRes::AuthLogoutRes(const AuthLogoutRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:PTP.Auth.AuthLogoutRes)
}

void AuthLogoutRes::SharedCtor() {
  error_ = 0;
}

AuthLogoutRes::~AuthLogoutRes() {
  // @@protoc_insertion_point(destructor:PTP.Auth.AuthLogoutRes)
  SharedDtor();
}

void AuthLogoutRes::SharedDtor() {
}

void AuthLogoutRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthLogoutRes& AuthLogoutRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eAuth_2eproto::scc_info_AuthLogoutRes.base);
  return *internal_default_instance();
}


void AuthLogoutRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Auth.AuthLogoutRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthLogoutRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Auth.AuthLogoutRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.ERR error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Auth.AuthLogoutRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Auth.AuthLogoutRes)
  return false;
#undef DO_
}

void AuthLogoutRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Auth.AuthLogoutRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.ERR error = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Auth.AuthLogoutRes)
}

size_t AuthLogoutRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Auth.AuthLogoutRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .PTP.Common.ERR error = 3;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthLogoutRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AuthLogoutRes*>(&from));
}

void AuthLogoutRes::MergeFrom(const AuthLogoutRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Auth.AuthLogoutRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    set_error(from.error());
  }
}

void AuthLogoutRes::CopyFrom(const AuthLogoutRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Auth.AuthLogoutRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthLogoutRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void AuthLogoutRes::Swap(AuthLogoutRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthLogoutRes::InternalSwap(AuthLogoutRes* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string AuthLogoutRes::GetTypeName() const {
  return "PTP.Auth.AuthLogoutRes";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Auth
}  // namespace PTP
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Auth::AuthCaptchaReq* Arena::CreateMaybeMessage< ::PTP::Auth::AuthCaptchaReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Auth::AuthCaptchaReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Auth::AuthCaptchaRes* Arena::CreateMaybeMessage< ::PTP::Auth::AuthCaptchaRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Auth::AuthCaptchaRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Auth::AuthLoginReq* Arena::CreateMaybeMessage< ::PTP::Auth::AuthLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Auth::AuthLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Auth::AuthLoginRes* Arena::CreateMaybeMessage< ::PTP::Auth::AuthLoginRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Auth::AuthLoginRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Auth::AuthLogoutReq* Arena::CreateMaybeMessage< ::PTP::Auth::AuthLogoutReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Auth::AuthLogoutReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Auth::AuthLogoutRes* Arena::CreateMaybeMessage< ::PTP::Auth::AuthLogoutRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Auth::AuthLogoutRes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
