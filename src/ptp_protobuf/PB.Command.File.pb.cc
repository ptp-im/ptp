// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PB.Command.File.proto

#include "PB.Command.File.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace PB {
namespace Command {
class FileUploadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileUploadRequest>
      _instance;
} _FileUploadRequest_default_instance_;
class FileUploadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileUploadResponse>
      _instance;
} _FileUploadResponse_default_instance_;
class FileDownloadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileDownloadRequest>
      _instance;
} _FileDownloadRequest_default_instance_;
class FileDownloadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileDownloadResponse>
      _instance;
} _FileDownloadResponse_default_instance_;
}  // namespace Command
}  // namespace PB
namespace protobuf_PB_2eCommand_2eFile_2eproto {
static void InitDefaultsFileUploadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::Command::_FileUploadRequest_default_instance_;
    new (ptr) ::PB::Command::FileUploadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::Command::FileUploadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileUploadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileUploadRequest}, {}};

static void InitDefaultsFileUploadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::Command::_FileUploadResponse_default_instance_;
    new (ptr) ::PB::Command::FileUploadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::Command::FileUploadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileUploadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileUploadResponse}, {}};

static void InitDefaultsFileDownloadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::Command::_FileDownloadRequest_default_instance_;
    new (ptr) ::PB::Command::FileDownloadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::Command::FileDownloadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileDownloadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileDownloadRequest}, {}};

static void InitDefaultsFileDownloadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::Command::_FileDownloadResponse_default_instance_;
    new (ptr) ::PB::Command::FileDownloadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::Command::FileDownloadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileDownloadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileDownloadResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FileUploadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileUploadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileDownloadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileDownloadResponse.base);
}

}  // namespace protobuf_PB_2eCommand_2eFile_2eproto
namespace PB {
namespace Command {

// ===================================================================

void FileUploadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileUploadRequest::kFileIdFieldNumber;
const int FileUploadRequest::kFilePartFieldNumber;
const int FileUploadRequest::kFileTotalPartsFieldNumber;
const int FileUploadRequest::kFileDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileUploadRequest::FileUploadRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PB_2eCommand_2eFile_2eproto::scc_info_FileUploadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.Command.FileUploadRequest)
}
FileUploadRequest::FileUploadRequest(const FileUploadRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_id()) {
    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  file_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_data()) {
    file_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_data_);
  }
  ::memcpy(&file_part_, &from.file_part_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_total_parts_) -
    reinterpret_cast<char*>(&file_part_)) + sizeof(file_total_parts_));
  // @@protoc_insertion_point(copy_constructor:PB.Command.FileUploadRequest)
}

void FileUploadRequest::SharedCtor() {
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_part_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_total_parts_) -
      reinterpret_cast<char*>(&file_part_)) + sizeof(file_total_parts_));
}

FileUploadRequest::~FileUploadRequest() {
  // @@protoc_insertion_point(destructor:PB.Command.FileUploadRequest)
  SharedDtor();
}

void FileUploadRequest::SharedDtor() {
  file_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileUploadRequest& FileUploadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PB_2eCommand_2eFile_2eproto::scc_info_FileUploadRequest.base);
  return *internal_default_instance();
}


void FileUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.Command.FileUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      file_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      file_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&file_part_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_total_parts_) -
        reinterpret_cast<char*>(&file_part_)) + sizeof(file_total_parts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileUploadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PB.Command.FileUploadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 file_part = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_part();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_part_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 file_total_parts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_file_total_parts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_total_parts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes file_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_file_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.Command.FileUploadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.Command.FileUploadRequest)
  return false;
#undef DO_
}

void FileUploadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.Command.FileUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_id(), output);
  }

  // required uint32 file_part = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->file_part(), output);
  }

  // required uint32 file_total_parts = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->file_total_parts(), output);
  }

  // required bytes file_data = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->file_data(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PB.Command.FileUploadRequest)
}

size_t FileUploadRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PB.Command.FileUploadRequest)
  size_t total_size = 0;

  if (has_file_id()) {
    // required string file_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_id());
  }

  if (has_file_data()) {
    // required bytes file_data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file_data());
  }

  if (has_file_part()) {
    // required uint32 file_part = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_part());
  }

  if (has_file_total_parts()) {
    // required uint32 file_total_parts = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_total_parts());
  }

  return total_size;
}
size_t FileUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.Command.FileUploadRequest)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string file_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_id());

    // required bytes file_data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file_data());

    // required uint32 file_part = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_part());

    // required uint32 file_total_parts = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_total_parts());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileUploadRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FileUploadRequest*>(&from));
}

void FileUploadRequest::MergeFrom(const FileUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.Command.FileUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_id();
      file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_file_data();
      file_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      file_part_ = from.file_part_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_total_parts_ = from.file_total_parts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileUploadRequest::CopyFrom(const FileUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.Command.FileUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUploadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void FileUploadRequest::Swap(FileUploadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileUploadRequest::InternalSwap(FileUploadRequest* other) {
  using std::swap;
  file_id_.Swap(&other->file_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_data_.Swap(&other->file_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_part_, other->file_part_);
  swap(file_total_parts_, other->file_total_parts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FileUploadRequest::GetTypeName() const {
  return "PB.Command.FileUploadRequest";
}


// ===================================================================

void FileUploadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileUploadResponse::kErrorFieldNumber;
const int FileUploadResponse::kFilePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileUploadResponse::FileUploadResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PB_2eCommand_2eFile_2eproto::scc_info_FileUploadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.Command.FileUploadResponse)
}
FileUploadResponse::FileUploadResponse(const FileUploadResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_path()) {
    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:PB.Command.FileUploadResponse)
}

void FileUploadResponse::SharedCtor() {
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

FileUploadResponse::~FileUploadResponse() {
  // @@protoc_insertion_point(destructor:PB.Command.FileUploadResponse)
  SharedDtor();
}

void FileUploadResponse::SharedDtor() {
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileUploadResponse& FileUploadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PB_2eCommand_2eFile_2eproto::scc_info_FileUploadResponse.base);
  return *internal_default_instance();
}


void FileUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.Command.FileUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_path_.ClearNonDefaultToEmptyNoArena();
  }
  error_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileUploadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PB.Command.FileUploadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string file_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PB.ERR error = 1280;
      case 1280: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 10240 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PB::ERR_IsValid(value)) {
            set_error(static_cast< ::PB::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(10240u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.Command.FileUploadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.Command.FileUploadResponse)
  return false;
#undef DO_
}

void FileUploadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.Command.FileUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string file_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_path(), output);
  }

  // required .PB.ERR error = 1280;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1280, this->error(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PB.Command.FileUploadResponse)
}

size_t FileUploadResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PB.Command.FileUploadResponse)
  size_t total_size = 0;

  if (has_file_path()) {
    // required string file_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  if (has_error()) {
    // required .PB.ERR error = 1280;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
size_t FileUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.Command.FileUploadResponse)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string file_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());

    // required .PB.ERR error = 1280;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileUploadResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FileUploadResponse*>(&from));
}

void FileUploadResponse::MergeFrom(const FileUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.Command.FileUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_path();
      file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      error_ = from.error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileUploadResponse::CopyFrom(const FileUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.Command.FileUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUploadResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void FileUploadResponse::Swap(FileUploadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileUploadResponse::InternalSwap(FileUploadResponse* other) {
  using std::swap;
  file_path_.Swap(&other->file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FileUploadResponse::GetTypeName() const {
  return "PB.Command.FileUploadResponse";
}


// ===================================================================

void FileDownloadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileDownloadRequest::kFilePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileDownloadRequest::FileDownloadRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PB_2eCommand_2eFile_2eproto::scc_info_FileDownloadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.Command.FileDownloadRequest)
}
FileDownloadRequest::FileDownloadRequest(const FileDownloadRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_path()) {
    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  // @@protoc_insertion_point(copy_constructor:PB.Command.FileDownloadRequest)
}

void FileDownloadRequest::SharedCtor() {
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FileDownloadRequest::~FileDownloadRequest() {
  // @@protoc_insertion_point(destructor:PB.Command.FileDownloadRequest)
  SharedDtor();
}

void FileDownloadRequest::SharedDtor() {
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileDownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileDownloadRequest& FileDownloadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PB_2eCommand_2eFile_2eproto::scc_info_FileDownloadRequest.base);
  return *internal_default_instance();
}


void FileDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.Command.FileDownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_path_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileDownloadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PB.Command.FileDownloadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string file_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.Command.FileDownloadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.Command.FileDownloadRequest)
  return false;
#undef DO_
}

void FileDownloadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.Command.FileDownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string file_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_path(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PB.Command.FileDownloadRequest)
}

size_t FileDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.Command.FileDownloadRequest)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required string file_path = 1;
  if (has_file_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileDownloadRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FileDownloadRequest*>(&from));
}

void FileDownloadRequest::MergeFrom(const FileDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.Command.FileDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_file_path()) {
    set_has_file_path();
    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
}

void FileDownloadRequest::CopyFrom(const FileDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.Command.FileDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownloadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void FileDownloadRequest::Swap(FileDownloadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileDownloadRequest::InternalSwap(FileDownloadRequest* other) {
  using std::swap;
  file_path_.Swap(&other->file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FileDownloadRequest::GetTypeName() const {
  return "PB.Command.FileDownloadRequest";
}


// ===================================================================

void FileDownloadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileDownloadResponse::kErrorFieldNumber;
const int FileDownloadResponse::kFileDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileDownloadResponse::FileDownloadResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PB_2eCommand_2eFile_2eproto::scc_info_FileDownloadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.Command.FileDownloadResponse)
}
FileDownloadResponse::FileDownloadResponse(const FileDownloadResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_data()) {
    file_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_data_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:PB.Command.FileDownloadResponse)
}

void FileDownloadResponse::SharedCtor() {
  file_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

FileDownloadResponse::~FileDownloadResponse() {
  // @@protoc_insertion_point(destructor:PB.Command.FileDownloadResponse)
  SharedDtor();
}

void FileDownloadResponse::SharedDtor() {
  file_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileDownloadResponse& FileDownloadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PB_2eCommand_2eFile_2eproto::scc_info_FileDownloadResponse.base);
  return *internal_default_instance();
}


void FileDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.Command.FileDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_data_.ClearNonDefaultToEmptyNoArena();
  }
  error_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileDownloadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PB.Command.FileDownloadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes file_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_file_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PB.ERR error = 1280;
      case 1280: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 10240 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PB::ERR_IsValid(value)) {
            set_error(static_cast< ::PB::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(10240u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.Command.FileDownloadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.Command.FileDownloadResponse)
  return false;
#undef DO_
}

void FileDownloadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.Command.FileDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes file_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->file_data(), output);
  }

  // required .PB.ERR error = 1280;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1280, this->error(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PB.Command.FileDownloadResponse)
}

size_t FileDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.Command.FileDownloadResponse)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .PB.ERR error = 1280;
  if (has_error()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }
  // optional bytes file_data = 1;
  if (has_file_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileDownloadResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FileDownloadResponse*>(&from));
}

void FileDownloadResponse::MergeFrom(const FileDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.Command.FileDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_data();
      file_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      error_ = from.error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileDownloadResponse::CopyFrom(const FileDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.Command.FileDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownloadResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void FileDownloadResponse::Swap(FileDownloadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileDownloadResponse::InternalSwap(FileDownloadResponse* other) {
  using std::swap;
  file_data_.Swap(&other->file_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FileDownloadResponse::GetTypeName() const {
  return "PB.Command.FileDownloadResponse";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Command
}  // namespace PB
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PB::Command::FileUploadRequest* Arena::CreateMaybeMessage< ::PB::Command::FileUploadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::PB::Command::FileUploadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PB::Command::FileUploadResponse* Arena::CreateMaybeMessage< ::PB::Command::FileUploadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::PB::Command::FileUploadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PB::Command::FileDownloadRequest* Arena::CreateMaybeMessage< ::PB::Command::FileDownloadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::PB::Command::FileDownloadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PB::Command::FileDownloadResponse* Arena::CreateMaybeMessage< ::PB::Command::FileDownloadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::PB::Command::FileDownloadResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
