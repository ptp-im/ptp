// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PB.Command.Other.proto

#include "PB.Command.Other.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace PB {
namespace Command {
class HeartBeatNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartBeatNotify>
      _instance;
} _HeartBeatNotify_default_instance_;
}  // namespace Command
}  // namespace PB
namespace protobuf_PB_2eCommand_2eOther_2eproto {
static void InitDefaultsHeartBeatNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::Command::_HeartBeatNotify_default_instance_;
    new (ptr) ::PB::Command::HeartBeatNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::Command::HeartBeatNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartBeatNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartBeatNotify}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HeartBeatNotify.base);
}

}  // namespace protobuf_PB_2eCommand_2eOther_2eproto
namespace PB {
namespace Command {

// ===================================================================

void HeartBeatNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartBeatNotify::HeartBeatNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PB_2eCommand_2eOther_2eproto::scc_info_HeartBeatNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.Command.HeartBeatNotify)
}
HeartBeatNotify::HeartBeatNotify(const HeartBeatNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PB.Command.HeartBeatNotify)
}

void HeartBeatNotify::SharedCtor() {
}

HeartBeatNotify::~HeartBeatNotify() {
  // @@protoc_insertion_point(destructor:PB.Command.HeartBeatNotify)
  SharedDtor();
}

void HeartBeatNotify::SharedDtor() {
}

void HeartBeatNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartBeatNotify& HeartBeatNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PB_2eCommand_2eOther_2eproto::scc_info_HeartBeatNotify.base);
  return *internal_default_instance();
}


void HeartBeatNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.Command.HeartBeatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HeartBeatNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PB.Command.HeartBeatNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:PB.Command.HeartBeatNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.Command.HeartBeatNotify)
  return false;
#undef DO_
}

void HeartBeatNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.Command.HeartBeatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PB.Command.HeartBeatNotify)
}

size_t HeartBeatNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.Command.HeartBeatNotify)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartBeatNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HeartBeatNotify*>(&from));
}

void HeartBeatNotify::MergeFrom(const HeartBeatNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.Command.HeartBeatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartBeatNotify::CopyFrom(const HeartBeatNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.Command.HeartBeatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatNotify::IsInitialized() const {
  return true;
}

void HeartBeatNotify::Swap(HeartBeatNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeatNotify::InternalSwap(HeartBeatNotify* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string HeartBeatNotify::GetTypeName() const {
  return "PB.Command.HeartBeatNotify";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Command
}  // namespace PB
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PB::Command::HeartBeatNotify* Arena::CreateMaybeMessage< ::PB::Command::HeartBeatNotify >(Arena* arena) {
  return Arena::CreateInternal< ::PB::Command::HeartBeatNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
