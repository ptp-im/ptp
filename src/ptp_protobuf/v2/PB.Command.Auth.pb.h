// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PB.Command.Auth.proto

#ifndef PROTOBUF_INCLUDED_PB_2eCommand_2eAuth_2eproto
#define PROTOBUF_INCLUDED_PB_2eCommand_2eAuth_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "PB.Global.pb.h"
#include "PB.User.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_PB_2eCommand_2eAuth_2eproto 

namespace protobuf_PB_2eCommand_2eAuth_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_PB_2eCommand_2eAuth_2eproto
namespace PB {
namespace Command {
class AuthCaptchaRequest;
class AuthCaptchaRequestDefaultTypeInternal;
extern AuthCaptchaRequestDefaultTypeInternal _AuthCaptchaRequest_default_instance_;
class AuthCaptchaResponse;
class AuthCaptchaResponseDefaultTypeInternal;
extern AuthCaptchaResponseDefaultTypeInternal _AuthCaptchaResponse_default_instance_;
class AuthLoginRequest;
class AuthLoginRequestDefaultTypeInternal;
extern AuthLoginRequestDefaultTypeInternal _AuthLoginRequest_default_instance_;
class AuthLoginResponse;
class AuthLoginResponseDefaultTypeInternal;
extern AuthLoginResponseDefaultTypeInternal _AuthLoginResponse_default_instance_;
}  // namespace Command
}  // namespace PB
namespace google {
namespace protobuf {
template<> ::PB::Command::AuthCaptchaRequest* Arena::CreateMaybeMessage<::PB::Command::AuthCaptchaRequest>(Arena*);
template<> ::PB::Command::AuthCaptchaResponse* Arena::CreateMaybeMessage<::PB::Command::AuthCaptchaResponse>(Arena*);
template<> ::PB::Command::AuthLoginRequest* Arena::CreateMaybeMessage<::PB::Command::AuthLoginRequest>(Arena*);
template<> ::PB::Command::AuthLoginResponse* Arena::CreateMaybeMessage<::PB::Command::AuthLoginResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace PB {
namespace Command {

// ===================================================================

class AuthCaptchaRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PB.Command.AuthCaptchaRequest) */ {
 public:
  AuthCaptchaRequest();
  virtual ~AuthCaptchaRequest();

  AuthCaptchaRequest(const AuthCaptchaRequest& from);

  inline AuthCaptchaRequest& operator=(const AuthCaptchaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthCaptchaRequest(AuthCaptchaRequest&& from) noexcept
    : AuthCaptchaRequest() {
    *this = ::std::move(from);
  }

  inline AuthCaptchaRequest& operator=(AuthCaptchaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AuthCaptchaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthCaptchaRequest* internal_default_instance() {
    return reinterpret_cast<const AuthCaptchaRequest*>(
               &_AuthCaptchaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AuthCaptchaRequest* other);
  friend void swap(AuthCaptchaRequest& a, AuthCaptchaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthCaptchaRequest* New() const final {
    return CreateMaybeMessage<AuthCaptchaRequest>(NULL);
  }

  AuthCaptchaRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthCaptchaRequest>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const AuthCaptchaRequest& from);
  void MergeFrom(const AuthCaptchaRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthCaptchaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PB.Command.AuthCaptchaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PB_2eCommand_2eAuth_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthCaptchaResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PB.Command.AuthCaptchaResponse) */ {
 public:
  AuthCaptchaResponse();
  virtual ~AuthCaptchaResponse();

  AuthCaptchaResponse(const AuthCaptchaResponse& from);

  inline AuthCaptchaResponse& operator=(const AuthCaptchaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthCaptchaResponse(AuthCaptchaResponse&& from) noexcept
    : AuthCaptchaResponse() {
    *this = ::std::move(from);
  }

  inline AuthCaptchaResponse& operator=(AuthCaptchaResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AuthCaptchaResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthCaptchaResponse* internal_default_instance() {
    return reinterpret_cast<const AuthCaptchaResponse*>(
               &_AuthCaptchaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AuthCaptchaResponse* other);
  friend void swap(AuthCaptchaResponse& a, AuthCaptchaResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthCaptchaResponse* New() const final {
    return CreateMaybeMessage<AuthCaptchaResponse>(NULL);
  }

  AuthCaptchaResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthCaptchaResponse>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const AuthCaptchaResponse& from);
  void MergeFrom(const AuthCaptchaResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthCaptchaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PB.ERR error = 1280;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1280;
  ::PB::ERR error() const;
  void set_error(::PB::ERR value);

  // @@protoc_insertion_point(class_scope:PB.Command.AuthCaptchaResponse)
 private:
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int error_;
  friend struct ::protobuf_PB_2eCommand_2eAuth_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthLoginRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PB.Command.AuthLoginRequest) */ {
 public:
  AuthLoginRequest();
  virtual ~AuthLoginRequest();

  AuthLoginRequest(const AuthLoginRequest& from);

  inline AuthLoginRequest& operator=(const AuthLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthLoginRequest(AuthLoginRequest&& from) noexcept
    : AuthLoginRequest() {
    *this = ::std::move(from);
  }

  inline AuthLoginRequest& operator=(AuthLoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AuthLoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthLoginRequest* internal_default_instance() {
    return reinterpret_cast<const AuthLoginRequest*>(
               &_AuthLoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AuthLoginRequest* other);
  friend void swap(AuthLoginRequest& a, AuthLoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthLoginRequest* New() const final {
    return CreateMaybeMessage<AuthLoginRequest>(NULL);
  }

  AuthLoginRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthLoginRequest>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const AuthLoginRequest& from);
  void MergeFrom(const AuthLoginRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthLoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.Command.AuthLoginRequest)
 private:
  void set_has_uid();
  void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend struct ::protobuf_PB_2eCommand_2eAuth_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthLoginResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PB.Command.AuthLoginResponse) */ {
 public:
  AuthLoginResponse();
  virtual ~AuthLoginResponse();

  AuthLoginResponse(const AuthLoginResponse& from);

  inline AuthLoginResponse& operator=(const AuthLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthLoginResponse(AuthLoginResponse&& from) noexcept
    : AuthLoginResponse() {
    *this = ::std::move(from);
  }

  inline AuthLoginResponse& operator=(AuthLoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AuthLoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthLoginResponse* internal_default_instance() {
    return reinterpret_cast<const AuthLoginResponse*>(
               &_AuthLoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AuthLoginResponse* other);
  friend void swap(AuthLoginResponse& a, AuthLoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthLoginResponse* New() const final {
    return CreateMaybeMessage<AuthLoginResponse>(NULL);
  }

  AuthLoginResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthLoginResponse>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const AuthLoginResponse& from);
  void MergeFrom(const AuthLoginResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthLoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PB.User user = 1;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  private:
  const ::PB::User& _internal_user() const;
  public:
  const ::PB::User& user() const;
  ::PB::User* release_user();
  ::PB::User* mutable_user();
  void set_allocated_user(::PB::User* user);

  // required .PB.ERR error = 1280;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1280;
  ::PB::ERR error() const;
  void set_error(::PB::ERR value);

  // @@protoc_insertion_point(class_scope:PB.Command.AuthLoginResponse)
 private:
  void set_has_error();
  void clear_has_error();
  void set_has_user();
  void clear_has_user();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::PB::User* user_;
  int error_;
  friend struct ::protobuf_PB_2eCommand_2eAuth_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AuthCaptchaRequest

// -------------------------------------------------------------------

// AuthCaptchaResponse

// required .PB.ERR error = 1280;
inline bool AuthCaptchaResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthCaptchaResponse::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthCaptchaResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthCaptchaResponse::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PB::ERR AuthCaptchaResponse::error() const {
  // @@protoc_insertion_point(field_get:PB.Command.AuthCaptchaResponse.error)
  return static_cast< ::PB::ERR >(error_);
}
inline void AuthCaptchaResponse::set_error(::PB::ERR value) {
  assert(::PB::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PB.Command.AuthCaptchaResponse.error)
}

// -------------------------------------------------------------------

// AuthLoginRequest

// required uint32 uid = 1;
inline bool AuthLoginRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthLoginRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthLoginRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthLoginRequest::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AuthLoginRequest::uid() const {
  // @@protoc_insertion_point(field_get:PB.Command.AuthLoginRequest.uid)
  return uid_;
}
inline void AuthLoginRequest::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PB.Command.AuthLoginRequest.uid)
}

// -------------------------------------------------------------------

// AuthLoginResponse

// required .PB.ERR error = 1280;
inline bool AuthLoginResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthLoginResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthLoginResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthLoginResponse::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PB::ERR AuthLoginResponse::error() const {
  // @@protoc_insertion_point(field_get:PB.Command.AuthLoginResponse.error)
  return static_cast< ::PB::ERR >(error_);
}
inline void AuthLoginResponse::set_error(::PB::ERR value) {
  assert(::PB::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PB.Command.AuthLoginResponse.error)
}

// required .PB.User user = 1;
inline bool AuthLoginResponse::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthLoginResponse::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthLoginResponse::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::PB::User& AuthLoginResponse::_internal_user() const {
  return *user_;
}
inline const ::PB::User& AuthLoginResponse::user() const {
  const ::PB::User* p = user_;
  // @@protoc_insertion_point(field_get:PB.Command.AuthLoginResponse.user)
  return p != NULL ? *p : *reinterpret_cast<const ::PB::User*>(
      &::PB::_User_default_instance_);
}
inline ::PB::User* AuthLoginResponse::release_user() {
  // @@protoc_insertion_point(field_release:PB.Command.AuthLoginResponse.user)
  clear_has_user();
  ::PB::User* temp = user_;
  user_ = NULL;
  return temp;
}
inline ::PB::User* AuthLoginResponse::mutable_user() {
  set_has_user();
  if (user_ == NULL) {
    auto* p = CreateMaybeMessage<::PB::User>(GetArenaNoVirtual());
    user_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PB.Command.AuthLoginResponse.user)
  return user_;
}
inline void AuthLoginResponse::set_allocated_user(::PB::User* user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(user_);
  }
  if (user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    set_has_user();
  } else {
    clear_has_user();
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:PB.Command.AuthLoginResponse.user)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Command
}  // namespace PB

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_PB_2eCommand_2eAuth_2eproto
