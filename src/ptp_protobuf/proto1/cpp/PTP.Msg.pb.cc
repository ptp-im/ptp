// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PTP.Msg.proto

#include "PTP.Msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_PTP_2eCommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PTP_2eCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgInfo;
}  // namespace protobuf_PTP_2eCommon_2eproto
namespace PTP {
namespace Msg {
class MsgReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgReq>
      _instance;
} _MsgReq_default_instance_;
class MsgResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgRes>
      _instance;
} _MsgRes_default_instance_;
class MsgNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgNotify>
      _instance;
} _MsgNotify_default_instance_;
class MsgUnNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgUnNotify>
      _instance;
} _MsgUnNotify_default_instance_;
class MsgReadAckReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgReadAckReq>
      _instance;
} _MsgReadAckReq_default_instance_;
class MsgReadNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgReadNotify>
      _instance;
} _MsgReadNotify_default_instance_;
class MsgGetMaxIdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgGetMaxIdReq>
      _instance;
} _MsgGetMaxIdReq_default_instance_;
class MsgGetMaxIdResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgGetMaxIdRes>
      _instance;
} _MsgGetMaxIdRes_default_instance_;
class MsgGetByIdsReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgGetByIdsReq>
      _instance;
} _MsgGetByIdsReq_default_instance_;
class MsgGetByIdsResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgGetByIdsRes>
      _instance;
} _MsgGetByIdsRes_default_instance_;
}  // namespace Msg
}  // namespace PTP
namespace protobuf_PTP_2eMsg_2eproto {
static void InitDefaultsMsgReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgReq_default_instance_;
    new (ptr) ::PTP::Msg::MsgReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgReq}, {}};

static void InitDefaultsMsgRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgRes_default_instance_;
    new (ptr) ::PTP::Msg::MsgRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgRes}, {}};

static void InitDefaultsMsgNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgNotify_default_instance_;
    new (ptr) ::PTP::Msg::MsgNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgNotify}, {
      &protobuf_PTP_2eCommon_2eproto::scc_info_MsgInfo.base,}};

static void InitDefaultsMsgUnNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgUnNotify_default_instance_;
    new (ptr) ::PTP::Msg::MsgUnNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgUnNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgUnNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgUnNotify}, {}};

static void InitDefaultsMsgReadAckReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgReadAckReq_default_instance_;
    new (ptr) ::PTP::Msg::MsgReadAckReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgReadAckReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgReadAckReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgReadAckReq}, {}};

static void InitDefaultsMsgReadNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgReadNotify_default_instance_;
    new (ptr) ::PTP::Msg::MsgReadNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgReadNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgReadNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgReadNotify}, {}};

static void InitDefaultsMsgGetMaxIdReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgGetMaxIdReq_default_instance_;
    new (ptr) ::PTP::Msg::MsgGetMaxIdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgGetMaxIdReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgGetMaxIdReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgGetMaxIdReq}, {}};

static void InitDefaultsMsgGetMaxIdRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgGetMaxIdRes_default_instance_;
    new (ptr) ::PTP::Msg::MsgGetMaxIdRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgGetMaxIdRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgGetMaxIdRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgGetMaxIdRes}, {}};

static void InitDefaultsMsgGetByIdsReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgGetByIdsReq_default_instance_;
    new (ptr) ::PTP::Msg::MsgGetByIdsReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgGetByIdsReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgGetByIdsReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgGetByIdsReq}, {}};

static void InitDefaultsMsgGetByIdsRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Msg::_MsgGetByIdsRes_default_instance_;
    new (ptr) ::PTP::Msg::MsgGetByIdsRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Msg::MsgGetByIdsRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgGetByIdsRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgGetByIdsRes}, {
      &protobuf_PTP_2eCommon_2eproto::scc_info_MsgInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgUnNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgReadAckReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgReadNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgGetMaxIdReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgGetMaxIdRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgGetByIdsReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgGetByIdsRes.base);
}

}  // namespace protobuf_PTP_2eMsg_2eproto
namespace PTP {
namespace Msg {

// ===================================================================

void MsgReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReq::kGroupAdrFieldNumber;
const int MsgReq::kSentAtFieldNumber;
const int MsgReq::kMsgTypeFieldNumber;
const int MsgReq::kMsgDataFieldNumber;
const int MsgReq::kAttachDataFieldNumber;
const int MsgReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReq::MsgReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgReq)
}
MsgReq::MsgReq(const MsgReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_adr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_adr()) {
    group_adr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_adr_);
  }
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg_data()) {
    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&sent_at_, &from.sent_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&sent_at_)) + sizeof(msg_type_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgReq)
}

void MsgReq::SharedCtor() {
  group_adr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sent_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&sent_at_)) + sizeof(auth_uid_));
  msg_type_ = 1;
}

MsgReq::~MsgReq() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgReq)
  SharedDtor();
}

void MsgReq::SharedDtor() {
  group_adr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgReq& MsgReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgReq.base);
  return *internal_default_instance();
}


void MsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      group_adr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      msg_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      attach_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&sent_at_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&sent_at_)) + sizeof(auth_uid_));
    msg_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_adr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_adr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 sent_at = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sent_at();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sent_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.MsgType msg_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::MsgType_IsValid(value)) {
            set_msg_type(static_cast< ::PTP::Common::MsgType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(48u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgReq)
  return false;
#undef DO_
}

void MsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_adr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_adr(), output);
  }

  // required uint32 sent_at = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sent_at(), output);
  }

  // required .PTP.Common.MsgType msg_type = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->msg_type(), output);
  }

  // optional string msg_data = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msg_data(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgReq)
}

size_t MsgReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Msg.MsgReq)
  size_t total_size = 0;

  if (has_group_adr()) {
    // required string group_adr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_adr());
  }

  if (has_sent_at()) {
    // required uint32 sent_at = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sent_at());
  }

  if (has_msg_type()) {
    // required .PTP.Common.MsgType msg_type = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  return total_size;
}
size_t MsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000029) ^ 0x00000029) == 0) {  // All required fields are present.
    // required string group_adr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_adr());

    // required uint32 sent_at = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sent_at());

    // required .PTP.Common.MsgType msg_type = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string msg_data = 7;
    if (has_msg_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg_data());
    }

    // optional bytes attach_data = 20;
    if (has_attach_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attach_data());
    }

  }
  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgReq*>(&from));
}

void MsgReq::MergeFrom(const MsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_adr();
      group_adr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_adr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_msg_data();
      msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000008u) {
      sent_at_ = from.sent_at_;
    }
    if (cached_has_bits & 0x00000010u) {
      auth_uid_ = from.auth_uid_;
    }
    if (cached_has_bits & 0x00000020u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgReq::CopyFrom(const MsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000029) != 0x00000029) return false;
  return true;
}

void MsgReq::Swap(MsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReq::InternalSwap(MsgReq* other) {
  using std::swap;
  group_adr_.Swap(&other->group_adr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_data_.Swap(&other->msg_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sent_at_, other->sent_at_);
  swap(auth_uid_, other->auth_uid_);
  swap(msg_type_, other->msg_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgReq::GetTypeName() const {
  return "PTP.Msg.MsgReq";
}


// ===================================================================

void MsgRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRes::kGroupIdFieldNumber;
const int MsgRes::kMsgIdFieldNumber;
const int MsgRes::kSentAtFieldNumber;
const int MsgRes::kErrorFieldNumber;
const int MsgRes::kAttachDataFieldNumber;
const int MsgRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRes::MsgRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgRes)
}
MsgRes::MsgRes(const MsgRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgRes)
}

void MsgRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
}

MsgRes::~MsgRes() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgRes)
  SharedDtor();
}

void MsgRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgRes& MsgRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgRes.base);
  return *internal_default_instance();
}


void MsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_msg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sent_at = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sent_at();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sent_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PTP.Common.ERR error = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(56u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgRes)
  return false;
#undef DO_
}

void MsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 group_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // optional uint32 msg_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msg_id(), output);
  }

  // optional uint32 sent_at = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sent_at(), output);
  }

  // optional .PTP.Common.ERR error = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->error(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgRes)
}

size_t MsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes attach_data = 20;
    if (has_attach_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attach_data());
    }

    // optional uint32 group_id = 1;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group_id());
    }

    // optional uint32 msg_id = 3;
    if (has_msg_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_id());
    }

    // optional uint32 sent_at = 4;
    if (has_sent_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sent_at());
    }

    // optional .PTP.Common.ERR error = 7;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
    }

    // optional uint32 auth_uid = 21;
    if (has_auth_uid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgRes*>(&from));
}

void MsgRes::MergeFrom(const MsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      msg_id_ = from.msg_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      sent_at_ = from.sent_at_;
    }
    if (cached_has_bits & 0x00000010u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000020u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgRes::CopyFrom(const MsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRes::IsInitialized() const {
  return true;
}

void MsgRes::Swap(MsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRes::InternalSwap(MsgRes* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(msg_id_, other->msg_id_);
  swap(sent_at_, other->sent_at_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgRes::GetTypeName() const {
  return "PTP.Msg.MsgRes";
}


// ===================================================================

void MsgNotify::InitAsDefaultInstance() {
  ::PTP::Msg::_MsgNotify_default_instance_._instance.get_mutable()->msg_info_ = const_cast< ::PTP::Common::MsgInfo*>(
      ::PTP::Common::MsgInfo::internal_default_instance());
}
void MsgNotify::clear_msg_info() {
  if (msg_info_ != NULL) msg_info_->Clear();
  clear_has_msg_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgNotify::kMsgInfoFieldNumber;
const int MsgNotify::kNotifyUsersFieldNumber;
const int MsgNotify::kAttachDataFieldNumber;
const int MsgNotify::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgNotify::MsgNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgNotify)
}
MsgNotify::MsgNotify(const MsgNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      notify_users_(from.notify_users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.has_msg_info()) {
    msg_info_ = new ::PTP::Common::MsgInfo(*from.msg_info_);
  } else {
    msg_info_ = NULL;
  }
  auth_uid_ = from.auth_uid_;
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgNotify)
}

void MsgNotify::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&msg_info_)) + sizeof(auth_uid_));
}

MsgNotify::~MsgNotify() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgNotify)
  SharedDtor();
}

void MsgNotify::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_info_;
}

void MsgNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgNotify& MsgNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgNotify.base);
  return *internal_default_instance();
}


void MsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notify_users_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      attach_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(msg_info_ != NULL);
      msg_info_->Clear();
    }
  }
  auth_uid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.MsgInfo msg_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 notify_users = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_notify_users())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_notify_users())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgNotify)
  return false;
#undef DO_
}

void MsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.MsgInfo msg_info = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_msg_info(), output);
  }

  // repeated uint32 notify_users = 2;
  for (int i = 0, n = this->notify_users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->notify_users(i), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgNotify)
}

size_t MsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgNotify)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .PTP.Common.MsgInfo msg_info = 1;
  if (has_msg_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_info_);
  }
  // repeated uint32 notify_users = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->notify_users_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->notify_users_size());
    total_size += data_size;
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgNotify*>(&from));
}

void MsgNotify::MergeFrom(const MsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notify_users_.MergeFrom(from.notify_users_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_msg_info()->::PTP::Common::MsgInfo::MergeFrom(from.msg_info());
    }
    if (cached_has_bits & 0x00000004u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgNotify::CopyFrom(const MsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_msg_info()) {
    if (!this->msg_info_->IsInitialized()) return false;
  }
  return true;
}

void MsgNotify::Swap(MsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgNotify::InternalSwap(MsgNotify* other) {
  using std::swap;
  notify_users_.InternalSwap(&other->notify_users_);
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_info_, other->msg_info_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgNotify::GetTypeName() const {
  return "PTP.Msg.MsgNotify";
}


// ===================================================================

void MsgUnNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgUnNotify::kUnNotifyUsersFieldNumber;
const int MsgUnNotify::kSentAtFieldNumber;
const int MsgUnNotify::kGroupIdFieldNumber;
const int MsgUnNotify::kFromUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgUnNotify::MsgUnNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgUnNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgUnNotify)
}
MsgUnNotify::MsgUnNotify(const MsgUnNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      un_notify_users_(from.un_notify_users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sent_at_, &from.sent_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_uid_) -
    reinterpret_cast<char*>(&sent_at_)) + sizeof(from_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgUnNotify)
}

void MsgUnNotify::SharedCtor() {
  ::memset(&sent_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_uid_) -
      reinterpret_cast<char*>(&sent_at_)) + sizeof(from_uid_));
}

MsgUnNotify::~MsgUnNotify() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgUnNotify)
  SharedDtor();
}

void MsgUnNotify::SharedDtor() {
}

void MsgUnNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgUnNotify& MsgUnNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgUnNotify.base);
  return *internal_default_instance();
}


void MsgUnNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgUnNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  un_notify_users_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&sent_at_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&from_uid_) -
        reinterpret_cast<char*>(&sent_at_)) + sizeof(from_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgUnNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgUnNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 un_notify_users = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_un_notify_users())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_un_notify_users())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 sent_at = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sent_at();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sent_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 from_uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_from_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgUnNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgUnNotify)
  return false;
#undef DO_
}

void MsgUnNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgUnNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 un_notify_users = 1;
  for (int i = 0, n = this->un_notify_users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->un_notify_users(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required uint32 sent_at = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sent_at(), output);
  }

  // required uint32 group_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // required uint32 from_uid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->from_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgUnNotify)
}

size_t MsgUnNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Msg.MsgUnNotify)
  size_t total_size = 0;

  if (has_sent_at()) {
    // required uint32 sent_at = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sent_at());
  }

  if (has_group_id()) {
    // required uint32 group_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_from_uid()) {
    // required uint32 from_uid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_uid());
  }

  return total_size;
}
size_t MsgUnNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgUnNotify)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 sent_at = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sent_at());

    // required uint32 group_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required uint32 from_uid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_uid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 un_notify_users = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->un_notify_users_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->un_notify_users_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgUnNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgUnNotify*>(&from));
}

void MsgUnNotify::MergeFrom(const MsgUnNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgUnNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  un_notify_users_.MergeFrom(from.un_notify_users_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sent_at_ = from.sent_at_;
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      from_uid_ = from.from_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgUnNotify::CopyFrom(const MsgUnNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgUnNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MsgUnNotify::Swap(MsgUnNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgUnNotify::InternalSwap(MsgUnNotify* other) {
  using std::swap;
  un_notify_users_.InternalSwap(&other->un_notify_users_);
  swap(sent_at_, other->sent_at_);
  swap(group_id_, other->group_id_);
  swap(from_uid_, other->from_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgUnNotify::GetTypeName() const {
  return "PTP.Msg.MsgUnNotify";
}


// ===================================================================

void MsgReadAckReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReadAckReq::kGroupIdFieldNumber;
const int MsgReadAckReq::kMsgIdFieldNumber;
const int MsgReadAckReq::kAttachDataFieldNumber;
const int MsgReadAckReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReadAckReq::MsgReadAckReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgReadAckReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgReadAckReq)
}
MsgReadAckReq::MsgReadAckReq(const MsgReadAckReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgReadAckReq)
}

void MsgReadAckReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
}

MsgReadAckReq::~MsgReadAckReq() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgReadAckReq)
  SharedDtor();
}

void MsgReadAckReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgReadAckReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgReadAckReq& MsgReadAckReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgReadAckReq.base);
  return *internal_default_instance();
}


void MsgReadAckReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgReadAckReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgReadAckReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgReadAckReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_msg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgReadAckReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgReadAckReq)
  return false;
#undef DO_
}

void MsgReadAckReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgReadAckReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // required uint32 msg_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msg_id(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgReadAckReq)
}

size_t MsgReadAckReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Msg.MsgReadAckReq)
  size_t total_size = 0;

  if (has_group_id()) {
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_msg_id()) {
    // required uint32 msg_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  return total_size;
}
size_t MsgReadAckReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgReadAckReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required uint32 msg_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgReadAckReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgReadAckReq*>(&from));
}

void MsgReadAckReq::MergeFrom(const MsgReadAckReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgReadAckReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      msg_id_ = from.msg_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgReadAckReq::CopyFrom(const MsgReadAckReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgReadAckReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReadAckReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void MsgReadAckReq::Swap(MsgReadAckReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReadAckReq::InternalSwap(MsgReadAckReq* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(msg_id_, other->msg_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgReadAckReq::GetTypeName() const {
  return "PTP.Msg.MsgReadAckReq";
}


// ===================================================================

void MsgReadNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReadNotify::kGroupIdFieldNumber;
const int MsgReadNotify::kFromUidFieldNumber;
const int MsgReadNotify::kNotifyUsersFieldNumber;
const int MsgReadNotify::kMsgIdFieldNumber;
const int MsgReadNotify::kAttachDataFieldNumber;
const int MsgReadNotify::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReadNotify::MsgReadNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgReadNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgReadNotify)
}
MsgReadNotify::MsgReadNotify(const MsgReadNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      notify_users_(from.notify_users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgReadNotify)
}

void MsgReadNotify::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
}

MsgReadNotify::~MsgReadNotify() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgReadNotify)
  SharedDtor();
}

void MsgReadNotify::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgReadNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgReadNotify& MsgReadNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgReadNotify.base);
  return *internal_default_instance();
}


void MsgReadNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgReadNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notify_users_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgReadNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgReadNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 from_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_from_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 notify_users = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_notify_users())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_notify_users())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_msg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgReadNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgReadNotify)
  return false;
#undef DO_
}

void MsgReadNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgReadNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // required uint32 from_uid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->from_uid(), output);
  }

  // repeated uint32 notify_users = 3;
  for (int i = 0, n = this->notify_users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->notify_users(i), output);
  }

  // required uint32 msg_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->msg_id(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgReadNotify)
}

size_t MsgReadNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Msg.MsgReadNotify)
  size_t total_size = 0;

  if (has_group_id()) {
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_from_uid()) {
    // required uint32 from_uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_uid());
  }

  if (has_msg_id()) {
    // required uint32 msg_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  return total_size;
}
size_t MsgReadNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgReadNotify)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required uint32 from_uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_uid());

    // required uint32 msg_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 notify_users = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->notify_users_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->notify_users_size());
    total_size += data_size;
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgReadNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgReadNotify*>(&from));
}

void MsgReadNotify::MergeFrom(const MsgReadNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgReadNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notify_users_.MergeFrom(from.notify_users_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      from_uid_ = from.from_uid_;
    }
    if (cached_has_bits & 0x00000008u) {
      msg_id_ = from.msg_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgReadNotify::CopyFrom(const MsgReadNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgReadNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReadNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  return true;
}

void MsgReadNotify::Swap(MsgReadNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReadNotify::InternalSwap(MsgReadNotify* other) {
  using std::swap;
  notify_users_.InternalSwap(&other->notify_users_);
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(from_uid_, other->from_uid_);
  swap(msg_id_, other->msg_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgReadNotify::GetTypeName() const {
  return "PTP.Msg.MsgReadNotify";
}


// ===================================================================

void MsgGetMaxIdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetMaxIdReq::kGroupIdFieldNumber;
const int MsgGetMaxIdReq::kAttachDataFieldNumber;
const int MsgGetMaxIdReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetMaxIdReq::MsgGetMaxIdReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgGetMaxIdReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgGetMaxIdReq)
}
MsgGetMaxIdReq::MsgGetMaxIdReq(const MsgGetMaxIdReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgGetMaxIdReq)
}

void MsgGetMaxIdReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
}

MsgGetMaxIdReq::~MsgGetMaxIdReq() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgGetMaxIdReq)
  SharedDtor();
}

void MsgGetMaxIdReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGetMaxIdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGetMaxIdReq& MsgGetMaxIdReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgGetMaxIdReq.base);
  return *internal_default_instance();
}


void MsgGetMaxIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgGetMaxIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgGetMaxIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgGetMaxIdReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgGetMaxIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgGetMaxIdReq)
  return false;
#undef DO_
}

void MsgGetMaxIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgGetMaxIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgGetMaxIdReq)
}

size_t MsgGetMaxIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgGetMaxIdReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required uint32 group_id = 1;
  if (has_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }
  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGetMaxIdReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgGetMaxIdReq*>(&from));
}

void MsgGetMaxIdReq::MergeFrom(const MsgGetMaxIdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgGetMaxIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgGetMaxIdReq::CopyFrom(const MsgGetMaxIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgGetMaxIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetMaxIdReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void MsgGetMaxIdReq::Swap(MsgGetMaxIdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetMaxIdReq::InternalSwap(MsgGetMaxIdReq* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgGetMaxIdReq::GetTypeName() const {
  return "PTP.Msg.MsgGetMaxIdReq";
}


// ===================================================================

void MsgGetMaxIdRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetMaxIdRes::kGroupIdFieldNumber;
const int MsgGetMaxIdRes::kMsgIdFieldNumber;
const int MsgGetMaxIdRes::kErrorFieldNumber;
const int MsgGetMaxIdRes::kAttachDataFieldNumber;
const int MsgGetMaxIdRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetMaxIdRes::MsgGetMaxIdRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgGetMaxIdRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgGetMaxIdRes)
}
MsgGetMaxIdRes::MsgGetMaxIdRes(const MsgGetMaxIdRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgGetMaxIdRes)
}

void MsgGetMaxIdRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
}

MsgGetMaxIdRes::~MsgGetMaxIdRes() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgGetMaxIdRes)
  SharedDtor();
}

void MsgGetMaxIdRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGetMaxIdRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGetMaxIdRes& MsgGetMaxIdRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgGetMaxIdRes.base);
  return *internal_default_instance();
}


void MsgGetMaxIdRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgGetMaxIdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgGetMaxIdRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgGetMaxIdRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_msg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PTP.Common.ERR error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgGetMaxIdRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgGetMaxIdRes)
  return false;
#undef DO_
}

void MsgGetMaxIdRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgGetMaxIdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // required uint32 msg_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msg_id(), output);
  }

  // optional .PTP.Common.ERR error = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgGetMaxIdRes)
}

size_t MsgGetMaxIdRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Msg.MsgGetMaxIdRes)
  size_t total_size = 0;

  if (has_group_id()) {
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_msg_id()) {
    // required uint32 msg_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  return total_size;
}
size_t MsgGetMaxIdRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgGetMaxIdRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required uint32 msg_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional .PTP.Common.ERR error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
    }

    // optional uint32 auth_uid = 21;
    if (has_auth_uid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGetMaxIdRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgGetMaxIdRes*>(&from));
}

void MsgGetMaxIdRes::MergeFrom(const MsgGetMaxIdRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgGetMaxIdRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      msg_id_ = from.msg_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000010u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgGetMaxIdRes::CopyFrom(const MsgGetMaxIdRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgGetMaxIdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetMaxIdRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void MsgGetMaxIdRes::Swap(MsgGetMaxIdRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetMaxIdRes::InternalSwap(MsgGetMaxIdRes* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(msg_id_, other->msg_id_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgGetMaxIdRes::GetTypeName() const {
  return "PTP.Msg.MsgGetMaxIdRes";
}


// ===================================================================

void MsgGetByIdsReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetByIdsReq::kGroupIdFieldNumber;
const int MsgGetByIdsReq::kMsgIdsFieldNumber;
const int MsgGetByIdsReq::kAttachDataFieldNumber;
const int MsgGetByIdsReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetByIdsReq::MsgGetByIdsReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgGetByIdsReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgGetByIdsReq)
}
MsgGetByIdsReq::MsgGetByIdsReq(const MsgGetByIdsReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      msg_ids_(from.msg_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgGetByIdsReq)
}

void MsgGetByIdsReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
}

MsgGetByIdsReq::~MsgGetByIdsReq() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgGetByIdsReq)
  SharedDtor();
}

void MsgGetByIdsReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGetByIdsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGetByIdsReq& MsgGetByIdsReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgGetByIdsReq.base);
  return *internal_default_instance();
}


void MsgGetByIdsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgGetByIdsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgGetByIdsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgGetByIdsReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 msg_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_msg_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_msg_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgGetByIdsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgGetByIdsReq)
  return false;
#undef DO_
}

void MsgGetByIdsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgGetByIdsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // repeated uint32 msg_ids = 2;
  for (int i = 0, n = this->msg_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->msg_ids(i), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgGetByIdsReq)
}

size_t MsgGetByIdsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgGetByIdsReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required uint32 group_id = 1;
  if (has_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }
  // repeated uint32 msg_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->msg_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->msg_ids_size());
    total_size += data_size;
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGetByIdsReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgGetByIdsReq*>(&from));
}

void MsgGetByIdsReq::MergeFrom(const MsgGetByIdsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgGetByIdsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_ids_.MergeFrom(from.msg_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgGetByIdsReq::CopyFrom(const MsgGetByIdsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgGetByIdsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetByIdsReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void MsgGetByIdsReq::Swap(MsgGetByIdsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetByIdsReq::InternalSwap(MsgGetByIdsReq* other) {
  using std::swap;
  msg_ids_.InternalSwap(&other->msg_ids_);
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgGetByIdsReq::GetTypeName() const {
  return "PTP.Msg.MsgGetByIdsReq";
}


// ===================================================================

void MsgGetByIdsRes::InitAsDefaultInstance() {
}
void MsgGetByIdsRes::clear_msg_list() {
  msg_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetByIdsRes::kGroupIdFieldNumber;
const int MsgGetByIdsRes::kMsgListFieldNumber;
const int MsgGetByIdsRes::kErrorFieldNumber;
const int MsgGetByIdsRes::kAttachDataFieldNumber;
const int MsgGetByIdsRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetByIdsRes::MsgGetByIdsRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eMsg_2eproto::scc_info_MsgGetByIdsRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Msg.MsgGetByIdsRes)
}
MsgGetByIdsRes::MsgGetByIdsRes(const MsgGetByIdsRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      msg_list_(from.msg_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Msg.MsgGetByIdsRes)
}

void MsgGetByIdsRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
}

MsgGetByIdsRes::~MsgGetByIdsRes() {
  // @@protoc_insertion_point(destructor:PTP.Msg.MsgGetByIdsRes)
  SharedDtor();
}

void MsgGetByIdsRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGetByIdsRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGetByIdsRes& MsgGetByIdsRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eMsg_2eproto::scc_info_MsgGetByIdsRes.base);
  return *internal_default_instance();
}


void MsgGetByIdsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Msg.MsgGetByIdsRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgGetByIdsRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Msg.MsgGetByIdsRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PTP.Common.MsgInfo msg_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msg_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PTP.Common.ERR error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Msg.MsgGetByIdsRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Msg.MsgGetByIdsRes)
  return false;
#undef DO_
}

void MsgGetByIdsRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Msg.MsgGetByIdsRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 group_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // repeated .PTP.Common.MsgInfo msg_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->msg_list(static_cast<int>(i)),
      output);
  }

  // optional .PTP.Common.ERR error = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Msg.MsgGetByIdsRes)
}

size_t MsgGetByIdsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Msg.MsgGetByIdsRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .PTP.Common.MsgInfo msg_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes attach_data = 20;
    if (has_attach_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attach_data());
    }

    // optional uint32 group_id = 1;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group_id());
    }

    // optional .PTP.Common.ERR error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
    }

    // optional uint32 auth_uid = 21;
    if (has_auth_uid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGetByIdsRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgGetByIdsRes*>(&from));
}

void MsgGetByIdsRes::MergeFrom(const MsgGetByIdsRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Msg.MsgGetByIdsRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_list_.MergeFrom(from.msg_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgGetByIdsRes::CopyFrom(const MsgGetByIdsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Msg.MsgGetByIdsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetByIdsRes::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->msg_list())) return false;
  return true;
}

void MsgGetByIdsRes::Swap(MsgGetByIdsRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetByIdsRes::InternalSwap(MsgGetByIdsRes* other) {
  using std::swap;
  CastToBase(&msg_list_)->InternalSwap(CastToBase(&other->msg_list_));
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgGetByIdsRes::GetTypeName() const {
  return "PTP.Msg.MsgGetByIdsRes";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Msg
}  // namespace PTP
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgReq* Arena::CreateMaybeMessage< ::PTP::Msg::MsgReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgRes* Arena::CreateMaybeMessage< ::PTP::Msg::MsgRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgNotify* Arena::CreateMaybeMessage< ::PTP::Msg::MsgNotify >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgUnNotify* Arena::CreateMaybeMessage< ::PTP::Msg::MsgUnNotify >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgUnNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgReadAckReq* Arena::CreateMaybeMessage< ::PTP::Msg::MsgReadAckReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgReadAckReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgReadNotify* Arena::CreateMaybeMessage< ::PTP::Msg::MsgReadNotify >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgReadNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgGetMaxIdReq* Arena::CreateMaybeMessage< ::PTP::Msg::MsgGetMaxIdReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgGetMaxIdReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgGetMaxIdRes* Arena::CreateMaybeMessage< ::PTP::Msg::MsgGetMaxIdRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgGetMaxIdRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgGetByIdsReq* Arena::CreateMaybeMessage< ::PTP::Msg::MsgGetByIdsReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgGetByIdsReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Msg::MsgGetByIdsRes* Arena::CreateMaybeMessage< ::PTP::Msg::MsgGetByIdsRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Msg::MsgGetByIdsRes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
