// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PTP.Group.proto

#include "PTP.Group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_PTP_2eCommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PTP_2eCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GroupInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PTP_2eCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GroupMember;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PTP_2eCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PTP_2eCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo;
}  // namespace protobuf_PTP_2eCommon_2eproto
namespace PTP {
namespace Group {
class GroupPreCreateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupPreCreateReq>
      _instance;
} _GroupPreCreateReq_default_instance_;
class GroupPreCreateResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupPreCreateRes>
      _instance;
} _GroupPreCreateRes_default_instance_;
class GroupCreateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupCreateReq>
      _instance;
} _GroupCreateReq_default_instance_;
class GroupCreateResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupCreateRes>
      _instance;
} _GroupCreateRes_default_instance_;
class GroupModifyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupModifyReq>
      _instance;
} _GroupModifyReq_default_instance_;
class GroupModifyResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupModifyRes>
      _instance;
} _GroupModifyRes_default_instance_;
class GroupModifyNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupModifyNotify>
      _instance;
} _GroupModifyNotify_default_instance_;
class GroupChangeMemberReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupChangeMemberReq>
      _instance;
} _GroupChangeMemberReq_default_instance_;
class GroupChangeMemberResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupChangeMemberRes>
      _instance;
} _GroupChangeMemberRes_default_instance_;
class GroupChangeMemberNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupChangeMemberNotify>
      _instance;
} _GroupChangeMemberNotify_default_instance_;
class GroupGetListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupGetListReq>
      _instance;
} _GroupGetListReq_default_instance_;
class GroupGetListResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupGetListRes>
      _instance;
} _GroupGetListRes_default_instance_;
class GroupGetMembersListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupGetMembersListReq>
      _instance;
} _GroupGetMembersListReq_default_instance_;
class GroupGetMembersListResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupGetMembersListRes>
      _instance;
} _GroupGetMembersListRes_default_instance_;
class GroupUnreadMsgReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupUnreadMsgReq>
      _instance;
} _GroupUnreadMsgReq_default_instance_;
class GroupUnreadMsgResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupUnreadMsgRes>
      _instance;
} _GroupUnreadMsgRes_default_instance_;
class GroupRemoveSessionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupRemoveSessionReq>
      _instance;
} _GroupRemoveSessionReq_default_instance_;
class GroupRemoveSessionResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupRemoveSessionRes>
      _instance;
} _GroupRemoveSessionRes_default_instance_;
class GroupRemoveSessionNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupRemoveSessionNotify>
      _instance;
} _GroupRemoveSessionNotify_default_instance_;
}  // namespace Group
}  // namespace PTP
namespace protobuf_PTP_2eGroup_2eproto {
static void InitDefaultsGroupPreCreateReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupPreCreateReq_default_instance_;
    new (ptr) ::PTP::Group::GroupPreCreateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupPreCreateReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupPreCreateReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupPreCreateReq}, {}};

static void InitDefaultsGroupPreCreateRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupPreCreateRes_default_instance_;
    new (ptr) ::PTP::Group::GroupPreCreateRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupPreCreateRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupPreCreateRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupPreCreateRes}, {}};

static void InitDefaultsGroupCreateReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupCreateReq_default_instance_;
    new (ptr) ::PTP::Group::GroupCreateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupCreateReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupCreateReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupCreateReq}, {}};

static void InitDefaultsGroupCreateRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupCreateRes_default_instance_;
    new (ptr) ::PTP::Group::GroupCreateRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupCreateRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GroupCreateRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGroupCreateRes}, {
      &protobuf_PTP_2eCommon_2eproto::scc_info_GroupInfo.base,
      &protobuf_PTP_2eCommon_2eproto::scc_info_GroupMember.base,}};

static void InitDefaultsGroupModifyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupModifyReq_default_instance_;
    new (ptr) ::PTP::Group::GroupModifyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupModifyReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupModifyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupModifyReq}, {}};

static void InitDefaultsGroupModifyRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupModifyRes_default_instance_;
    new (ptr) ::PTP::Group::GroupModifyRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupModifyRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupModifyRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupModifyRes}, {}};

static void InitDefaultsGroupModifyNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupModifyNotify_default_instance_;
    new (ptr) ::PTP::Group::GroupModifyNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupModifyNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupModifyNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupModifyNotify}, {}};

static void InitDefaultsGroupChangeMemberReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupChangeMemberReq_default_instance_;
    new (ptr) ::PTP::Group::GroupChangeMemberReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupChangeMemberReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupChangeMemberReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupChangeMemberReq}, {}};

static void InitDefaultsGroupChangeMemberRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupChangeMemberRes_default_instance_;
    new (ptr) ::PTP::Group::GroupChangeMemberRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupChangeMemberRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupChangeMemberRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupChangeMemberRes}, {}};

static void InitDefaultsGroupChangeMemberNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupChangeMemberNotify_default_instance_;
    new (ptr) ::PTP::Group::GroupChangeMemberNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupChangeMemberNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupChangeMemberNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupChangeMemberNotify}, {}};

static void InitDefaultsGroupGetListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupGetListReq_default_instance_;
    new (ptr) ::PTP::Group::GroupGetListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupGetListReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupGetListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupGetListReq}, {}};

static void InitDefaultsGroupGetListRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupGetListRes_default_instance_;
    new (ptr) ::PTP::Group::GroupGetListRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupGetListRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GroupGetListRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGroupGetListRes}, {
      &protobuf_PTP_2eCommon_2eproto::scc_info_GroupInfo.base,}};

static void InitDefaultsGroupGetMembersListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupGetMembersListReq_default_instance_;
    new (ptr) ::PTP::Group::GroupGetMembersListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupGetMembersListReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupGetMembersListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupGetMembersListReq}, {}};

static void InitDefaultsGroupGetMembersListRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupGetMembersListRes_default_instance_;
    new (ptr) ::PTP::Group::GroupGetMembersListRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupGetMembersListRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GroupGetMembersListRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGroupGetMembersListRes}, {
      &protobuf_PTP_2eCommon_2eproto::scc_info_UserInfo.base,
      &protobuf_PTP_2eCommon_2eproto::scc_info_GroupMember.base,}};

static void InitDefaultsGroupUnreadMsgReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupUnreadMsgReq_default_instance_;
    new (ptr) ::PTP::Group::GroupUnreadMsgReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupUnreadMsgReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupUnreadMsgReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupUnreadMsgReq}, {}};

static void InitDefaultsGroupUnreadMsgRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupUnreadMsgRes_default_instance_;
    new (ptr) ::PTP::Group::GroupUnreadMsgRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupUnreadMsgRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GroupUnreadMsgRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGroupUnreadMsgRes}, {
      &protobuf_PTP_2eCommon_2eproto::scc_info_MsgInfo.base,}};

static void InitDefaultsGroupRemoveSessionReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupRemoveSessionReq_default_instance_;
    new (ptr) ::PTP::Group::GroupRemoveSessionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupRemoveSessionReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupRemoveSessionReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupRemoveSessionReq}, {}};

static void InitDefaultsGroupRemoveSessionRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupRemoveSessionRes_default_instance_;
    new (ptr) ::PTP::Group::GroupRemoveSessionRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupRemoveSessionRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupRemoveSessionRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupRemoveSessionRes}, {}};

static void InitDefaultsGroupRemoveSessionNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PTP::Group::_GroupRemoveSessionNotify_default_instance_;
    new (ptr) ::PTP::Group::GroupRemoveSessionNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PTP::Group::GroupRemoveSessionNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupRemoveSessionNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupRemoveSessionNotify}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GroupPreCreateReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupPreCreateRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupCreateReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupCreateRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupModifyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupModifyRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupModifyNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupChangeMemberReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupChangeMemberRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupChangeMemberNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupGetListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupGetListRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupGetMembersListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupGetMembersListRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupUnreadMsgReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupUnreadMsgRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupRemoveSessionReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupRemoveSessionRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupRemoveSessionNotify.base);
}

}  // namespace protobuf_PTP_2eGroup_2eproto
namespace PTP {
namespace Group {

// ===================================================================

void GroupPreCreateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupPreCreateReq::kGroupTypeFieldNumber;
const int GroupPreCreateReq::kMembersFieldNumber;
const int GroupPreCreateReq::kAttachDataFieldNumber;
const int GroupPreCreateReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupPreCreateReq::GroupPreCreateReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupPreCreateReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupPreCreateReq)
}
GroupPreCreateReq::GroupPreCreateReq(const GroupPreCreateReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&auth_uid_, &from.auth_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_type_) -
    reinterpret_cast<char*>(&auth_uid_)) + sizeof(group_type_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupPreCreateReq)
}

void GroupPreCreateReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_uid_ = 0u;
  group_type_ = 1;
}

GroupPreCreateReq::~GroupPreCreateReq() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupPreCreateReq)
  SharedDtor();
}

void GroupPreCreateReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupPreCreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupPreCreateReq& GroupPreCreateReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupPreCreateReq.base);
  return *internal_default_instance();
}


void GroupPreCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupPreCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    auth_uid_ = 0u;
    group_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupPreCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupPreCreateReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.GroupType group_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::GroupType_IsValid(value)) {
            set_group_type(static_cast< ::PTP::Common::GroupType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 members = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56u, input, this->mutable_members())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_members())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupPreCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupPreCreateReq)
  return false;
#undef DO_
}

void GroupPreCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupPreCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.GroupType group_type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->group_type(), output);
  }

  // repeated uint32 members = 7;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->members(i), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupPreCreateReq)
}

size_t GroupPreCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupPreCreateReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .PTP.Common.GroupType group_type = 1;
  if (has_group_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_type());
  }
  // repeated uint32 members = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->members_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->members_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes attach_data = 20;
    if (has_attach_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attach_data());
    }

    // optional uint32 auth_uid = 21;
    if (has_auth_uid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupPreCreateReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupPreCreateReq*>(&from));
}

void GroupPreCreateReq::MergeFrom(const GroupPreCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupPreCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      auth_uid_ = from.auth_uid_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_type_ = from.group_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupPreCreateReq::CopyFrom(const GroupPreCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupPreCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupPreCreateReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void GroupPreCreateReq::Swap(GroupPreCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupPreCreateReq::InternalSwap(GroupPreCreateReq* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auth_uid_, other->auth_uid_);
  swap(group_type_, other->group_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupPreCreateReq::GetTypeName() const {
  return "PTP.Group.GroupPreCreateReq";
}


// ===================================================================

void GroupPreCreateRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupPreCreateRes::kGroupAdrFieldNumber;
const int GroupPreCreateRes::kGroupIdxFieldNumber;
const int GroupPreCreateRes::kErrorFieldNumber;
const int GroupPreCreateRes::kCaptchaFieldNumber;
const int GroupPreCreateRes::kAttachDataFieldNumber;
const int GroupPreCreateRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupPreCreateRes::GroupPreCreateRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupPreCreateRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupPreCreateRes)
}
GroupPreCreateRes::GroupPreCreateRes(const GroupPreCreateRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_adr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_adr()) {
    group_adr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_adr_);
  }
  captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_captcha()) {
    captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captcha_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_idx_, &from.group_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_idx_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupPreCreateRes)
}

void GroupPreCreateRes::SharedCtor() {
  group_adr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_idx_)) + sizeof(auth_uid_));
}

GroupPreCreateRes::~GroupPreCreateRes() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupPreCreateRes)
  SharedDtor();
}

void GroupPreCreateRes::SharedDtor() {
  group_adr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captcha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupPreCreateRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupPreCreateRes& GroupPreCreateRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupPreCreateRes.base);
  return *internal_default_instance();
}


void GroupPreCreateRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupPreCreateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      group_adr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      captcha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      attach_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&group_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_idx_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupPreCreateRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupPreCreateRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string group_adr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_adr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ERR error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string captcha = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_captcha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupPreCreateRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupPreCreateRes)
  return false;
#undef DO_
}

void GroupPreCreateRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupPreCreateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string group_adr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_adr(), output);
  }

  // required uint32 group_idx = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_idx(), output);
  }

  // required .PTP.Common.ERR error = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error(), output);
  }

  // optional string captcha = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->captcha(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupPreCreateRes)
}

size_t GroupPreCreateRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupPreCreateRes)
  size_t total_size = 0;

  if (has_group_idx()) {
    // required uint32 group_idx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_idx());
  }

  if (has_error()) {
    // required .PTP.Common.ERR error = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
size_t GroupPreCreateRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupPreCreateRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000018) ^ 0x00000018) == 0) {  // All required fields are present.
    // required uint32 group_idx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_idx());

    // required .PTP.Common.ERR error = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string group_adr = 1;
    if (has_group_adr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_adr());
    }

    // optional string captcha = 4;
    if (has_captcha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->captcha());
    }

    // optional bytes attach_data = 20;
    if (has_attach_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attach_data());
    }

  }
  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupPreCreateRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupPreCreateRes*>(&from));
}

void GroupPreCreateRes::MergeFrom(const GroupPreCreateRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupPreCreateRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_adr();
      group_adr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_adr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_captcha();
      captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captcha_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000008u) {
      group_idx_ = from.group_idx_;
    }
    if (cached_has_bits & 0x00000010u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000020u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupPreCreateRes::CopyFrom(const GroupPreCreateRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupPreCreateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupPreCreateRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000018) != 0x00000018) return false;
  return true;
}

void GroupPreCreateRes::Swap(GroupPreCreateRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupPreCreateRes::InternalSwap(GroupPreCreateRes* other) {
  using std::swap;
  group_adr_.Swap(&other->group_adr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  captcha_.Swap(&other->captcha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_idx_, other->group_idx_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupPreCreateRes::GetTypeName() const {
  return "PTP.Group.GroupPreCreateRes";
}


// ===================================================================

void GroupCreateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupCreateReq::kGroupIdxFieldNumber;
const int GroupCreateReq::kSignFieldNumber;
const int GroupCreateReq::kCaptchaFieldNumber;
const int GroupCreateReq::kGroupTypeFieldNumber;
const int GroupCreateReq::kNameFieldNumber;
const int GroupCreateReq::kAvatarFieldNumber;
const int GroupCreateReq::kMembersFieldNumber;
const int GroupCreateReq::kAboutFieldNumber;
const int GroupCreateReq::kAttachDataFieldNumber;
const int GroupCreateReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupCreateReq::GroupCreateReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupCreateReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupCreateReq)
}
GroupCreateReq::GroupCreateReq(const GroupCreateReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign()) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_captcha()) {
    captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captcha_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_avatar()) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  about_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_about()) {
    about_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.about_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_idx_, &from.group_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_type_) -
    reinterpret_cast<char*>(&group_idx_)) + sizeof(group_type_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupCreateReq)
}

void GroupCreateReq::SharedCtor() {
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  about_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_idx_)) + sizeof(auth_uid_));
  group_type_ = 1;
}

GroupCreateReq::~GroupCreateReq() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupCreateReq)
  SharedDtor();
}

void GroupCreateReq::SharedDtor() {
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captcha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  about_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupCreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupCreateReq& GroupCreateReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupCreateReq.base);
  return *internal_default_instance();
}


void GroupCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      sign_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      captcha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      avatar_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      about_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      attach_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&group_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_idx_)) + sizeof(auth_uid_));
  }
  group_type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupCreateReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes sign = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string captcha = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_captcha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.GroupType group_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::GroupType_IsValid(value)) {
            set_group_type(static_cast< ::PTP::Common::GroupType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string avatar = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 members = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56u, input, this->mutable_members())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_members())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string about = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_about()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupCreateReq)
  return false;
#undef DO_
}

void GroupCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_idx = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_idx(), output);
  }

  // required bytes sign = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sign(), output);
  }

  // required string captcha = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->captcha(), output);
  }

  // required .PTP.Common.GroupType group_type = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->group_type(), output);
  }

  // optional string name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional string avatar = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->avatar(), output);
  }

  // repeated uint32 members = 7;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->members(i), output);
  }

  // optional string about = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->about(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupCreateReq)
}

size_t GroupCreateReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupCreateReq)
  size_t total_size = 0;

  if (has_sign()) {
    // required bytes sign = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());
  }

  if (has_captcha()) {
    // required string captcha = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->captcha());
  }

  if (has_group_idx()) {
    // required uint32 group_idx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_idx());
  }

  if (has_group_type()) {
    // required .PTP.Common.GroupType group_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_type());
  }

  return total_size;
}
size_t GroupCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupCreateReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000143) ^ 0x00000143) == 0) {  // All required fields are present.
    // required bytes sign = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());

    // required string captcha = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->captcha());

    // required uint32 group_idx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_idx());

    // required .PTP.Common.GroupType group_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 members = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->members_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->members_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 60u) {
    // optional string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string avatar = 6;
    if (has_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->avatar());
    }

    // optional string about = 8;
    if (has_about()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->about());
    }

    // optional bytes attach_data = 20;
    if (has_attach_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attach_data());
    }

  }
  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupCreateReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupCreateReq*>(&from));
}

void GroupCreateReq::MergeFrom(const GroupCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sign();
      sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_captcha();
      captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captcha_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_avatar();
      avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_about();
      about_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.about_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000040u) {
      group_idx_ = from.group_idx_;
    }
    if (cached_has_bits & 0x00000080u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_group_type(from.group_type());
  }
}

void GroupCreateReq::CopyFrom(const GroupCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupCreateReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000143) != 0x00000143) return false;
  return true;
}

void GroupCreateReq::Swap(GroupCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupCreateReq::InternalSwap(GroupCreateReq* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  captcha_.Swap(&other->captcha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_.Swap(&other->avatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  about_.Swap(&other->about_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_idx_, other->group_idx_);
  swap(auth_uid_, other->auth_uid_);
  swap(group_type_, other->group_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupCreateReq::GetTypeName() const {
  return "PTP.Group.GroupCreateReq";
}


// ===================================================================

void GroupCreateRes::InitAsDefaultInstance() {
  ::PTP::Group::_GroupCreateRes_default_instance_._instance.get_mutable()->group_ = const_cast< ::PTP::Common::GroupInfo*>(
      ::PTP::Common::GroupInfo::internal_default_instance());
}
void GroupCreateRes::clear_group() {
  if (group_ != NULL) group_->Clear();
  clear_has_group();
}
void GroupCreateRes::clear_group_members() {
  group_members_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupCreateRes::kGroupFieldNumber;
const int GroupCreateRes::kGroupMembersFieldNumber;
const int GroupCreateRes::kErrorFieldNumber;
const int GroupCreateRes::kAttachDataFieldNumber;
const int GroupCreateRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupCreateRes::GroupCreateRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupCreateRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupCreateRes)
}
GroupCreateRes::GroupCreateRes(const GroupCreateRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      group_members_(from.group_members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.has_group()) {
    group_ = new ::PTP::Common::GroupInfo(*from.group_);
  } else {
    group_ = NULL;
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&error_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupCreateRes)
}

void GroupCreateRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_)) + sizeof(auth_uid_));
}

GroupCreateRes::~GroupCreateRes() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupCreateRes)
  SharedDtor();
}

void GroupCreateRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete group_;
}

void GroupCreateRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupCreateRes& GroupCreateRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupCreateRes.base);
  return *internal_default_instance();
}


void GroupCreateRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupCreateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      attach_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(group_ != NULL);
      group_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&error_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&error_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupCreateRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupCreateRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PTP.Common.GroupInfo group = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PTP.Common.GroupMember group_members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_group_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ERR error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupCreateRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupCreateRes)
  return false;
#undef DO_
}

void GroupCreateRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupCreateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PTP.Common.GroupInfo group = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_group(), output);
  }

  // repeated .PTP.Common.GroupMember group_members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->group_members(static_cast<int>(i)),
      output);
  }

  // required .PTP.Common.ERR error = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupCreateRes)
}

size_t GroupCreateRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupCreateRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .PTP.Common.ERR error = 3;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }
  // repeated .PTP.Common.GroupMember group_members = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->group_members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->group_members(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes attach_data = 20;
    if (has_attach_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attach_data());
    }

    // optional .PTP.Common.GroupInfo group = 1;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *group_);
    }

  }
  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupCreateRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupCreateRes*>(&from));
}

void GroupCreateRes::MergeFrom(const GroupCreateRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupCreateRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_members_.MergeFrom(from.group_members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_group()->::PTP::Common::GroupInfo::MergeFrom(from.group());
    }
    if (cached_has_bits & 0x00000004u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupCreateRes::CopyFrom(const GroupCreateRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupCreateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupCreateRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->group_members())) return false;
  if (has_group()) {
    if (!this->group_->IsInitialized()) return false;
  }
  return true;
}

void GroupCreateRes::Swap(GroupCreateRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupCreateRes::InternalSwap(GroupCreateRes* other) {
  using std::swap;
  CastToBase(&group_members_)->InternalSwap(CastToBase(&other->group_members_));
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_, other->group_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupCreateRes::GetTypeName() const {
  return "PTP.Group.GroupCreateRes";
}


// ===================================================================

void GroupModifyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupModifyReq::kGroupModifyActionFieldNumber;
const int GroupModifyReq::kGroupIdFieldNumber;
const int GroupModifyReq::kValueFieldNumber;
const int GroupModifyReq::kAttachDataFieldNumber;
const int GroupModifyReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupModifyReq::GroupModifyReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupModifyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupModifyReq)
}
GroupModifyReq::GroupModifyReq(const GroupModifyReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_modify_action_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(group_modify_action_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupModifyReq)
}

void GroupModifyReq::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  group_modify_action_ = 1;
}

GroupModifyReq::~GroupModifyReq() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupModifyReq)
  SharedDtor();
}

void GroupModifyReq::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupModifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupModifyReq& GroupModifyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupModifyReq.base);
  return *internal_default_instance();
}


void GroupModifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupModifyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      attach_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
    group_modify_action_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupModifyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupModifyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.GroupModifyAction group_modify_action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::GroupModifyAction_IsValid(value)) {
            set_group_modify_action(static_cast< ::PTP::Common::GroupModifyAction >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupModifyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupModifyReq)
  return false;
#undef DO_
}

void GroupModifyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupModifyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.GroupModifyAction group_modify_action = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->group_modify_action(), output);
  }

  // required uint32 group_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // required string value = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupModifyReq)
}

size_t GroupModifyReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupModifyReq)
  size_t total_size = 0;

  if (has_value()) {
    // required string value = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (has_group_id()) {
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_group_modify_action()) {
    // required .PTP.Common.GroupModifyAction group_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_modify_action());
  }

  return total_size;
}
size_t GroupModifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupModifyReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000015) ^ 0x00000015) == 0) {  // All required fields are present.
    // required string value = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required .PTP.Common.GroupModifyAction group_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_modify_action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupModifyReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupModifyReq*>(&from));
}

void GroupModifyReq::MergeFrom(const GroupModifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    if (cached_has_bits & 0x00000010u) {
      group_modify_action_ = from.group_modify_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupModifyReq::CopyFrom(const GroupModifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupModifyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000015) != 0x00000015) return false;
  return true;
}

void GroupModifyReq::Swap(GroupModifyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupModifyReq::InternalSwap(GroupModifyReq* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(group_modify_action_, other->group_modify_action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupModifyReq::GetTypeName() const {
  return "PTP.Group.GroupModifyReq";
}


// ===================================================================

void GroupModifyRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupModifyRes::kGroupModifyActionFieldNumber;
const int GroupModifyRes::kValueFieldNumber;
const int GroupModifyRes::kGroupIdFieldNumber;
const int GroupModifyRes::kErrorFieldNumber;
const int GroupModifyRes::kNotifyMembersFieldNumber;
const int GroupModifyRes::kAttachDataFieldNumber;
const int GroupModifyRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupModifyRes::GroupModifyRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupModifyRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupModifyRes)
}
GroupModifyRes::GroupModifyRes(const GroupModifyRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      notify_members_(from.notify_members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_modify_action_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(group_modify_action_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupModifyRes)
}

void GroupModifyRes::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  group_modify_action_ = 1;
}

GroupModifyRes::~GroupModifyRes() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupModifyRes)
  SharedDtor();
}

void GroupModifyRes::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupModifyRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupModifyRes& GroupModifyRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupModifyRes.base);
  return *internal_default_instance();
}


void GroupModifyRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupModifyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notify_members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      attach_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
    group_modify_action_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupModifyRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupModifyRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.GroupModifyAction group_modify_action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::GroupModifyAction_IsValid(value)) {
            set_group_modify_action(static_cast< ::PTP::Common::GroupModifyAction >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ERR error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 notify_members = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40u, input, this->mutable_notify_members())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_notify_members())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupModifyRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupModifyRes)
  return false;
#undef DO_
}

void GroupModifyRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupModifyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.GroupModifyAction group_modify_action = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->group_modify_action(), output);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // required uint32 group_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // required .PTP.Common.ERR error = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->error(), output);
  }

  // repeated uint32 notify_members = 5;
  for (int i = 0, n = this->notify_members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->notify_members(i), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupModifyRes)
}

size_t GroupModifyRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupModifyRes)
  size_t total_size = 0;

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (has_group_id()) {
    // required uint32 group_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_error()) {
    // required .PTP.Common.ERR error = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  if (has_group_modify_action()) {
    // required .PTP.Common.GroupModifyAction group_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_modify_action());
  }

  return total_size;
}
size_t GroupModifyRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupModifyRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x0000002d) ^ 0x0000002d) == 0) {  // All required fields are present.
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

    // required uint32 group_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required .PTP.Common.ERR error = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

    // required .PTP.Common.GroupModifyAction group_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_modify_action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 notify_members = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->notify_members_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->notify_members_size());
    total_size += data_size;
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupModifyRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupModifyRes*>(&from));
}

void GroupModifyRes::MergeFrom(const GroupModifyRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupModifyRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notify_members_.MergeFrom(from.notify_members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000010u) {
      auth_uid_ = from.auth_uid_;
    }
    if (cached_has_bits & 0x00000020u) {
      group_modify_action_ = from.group_modify_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupModifyRes::CopyFrom(const GroupModifyRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupModifyRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupModifyRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000002d) != 0x0000002d) return false;
  return true;
}

void GroupModifyRes::Swap(GroupModifyRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupModifyRes::InternalSwap(GroupModifyRes* other) {
  using std::swap;
  notify_members_.InternalSwap(&other->notify_members_);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(group_modify_action_, other->group_modify_action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupModifyRes::GetTypeName() const {
  return "PTP.Group.GroupModifyRes";
}


// ===================================================================

void GroupModifyNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupModifyNotify::kGroupModifyActionFieldNumber;
const int GroupModifyNotify::kGroupIdFieldNumber;
const int GroupModifyNotify::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupModifyNotify::GroupModifyNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupModifyNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupModifyNotify)
}
GroupModifyNotify::GroupModifyNotify(const GroupModifyNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_modify_action_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(group_modify_action_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupModifyNotify)
}

void GroupModifyNotify::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0u;
  group_modify_action_ = 1;
}

GroupModifyNotify::~GroupModifyNotify() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupModifyNotify)
  SharedDtor();
}

void GroupModifyNotify::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupModifyNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupModifyNotify& GroupModifyNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupModifyNotify.base);
  return *internal_default_instance();
}


void GroupModifyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupModifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    group_id_ = 0u;
    group_modify_action_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupModifyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupModifyNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.GroupModifyAction group_modify_action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::GroupModifyAction_IsValid(value)) {
            set_group_modify_action(static_cast< ::PTP::Common::GroupModifyAction >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupModifyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupModifyNotify)
  return false;
#undef DO_
}

void GroupModifyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupModifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.GroupModifyAction group_modify_action = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->group_modify_action(), output);
  }

  // required uint32 group_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // required string value = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupModifyNotify)
}

size_t GroupModifyNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupModifyNotify)
  size_t total_size = 0;

  if (has_value()) {
    // required string value = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (has_group_id()) {
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_group_modify_action()) {
    // required .PTP.Common.GroupModifyAction group_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_modify_action());
  }

  return total_size;
}
size_t GroupModifyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupModifyNotify)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string value = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required .PTP.Common.GroupModifyAction group_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_modify_action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupModifyNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupModifyNotify*>(&from));
}

void GroupModifyNotify::MergeFrom(const GroupModifyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupModifyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_modify_action_ = from.group_modify_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupModifyNotify::CopyFrom(const GroupModifyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupModifyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupModifyNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void GroupModifyNotify::Swap(GroupModifyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupModifyNotify::InternalSwap(GroupModifyNotify* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(group_modify_action_, other->group_modify_action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupModifyNotify::GetTypeName() const {
  return "PTP.Group.GroupModifyNotify";
}


// ===================================================================

void GroupChangeMemberReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupChangeMemberReq::kGroupMemberModifyActionFieldNumber;
const int GroupChangeMemberReq::kGroupIdFieldNumber;
const int GroupChangeMemberReq::kMembersFieldNumber;
const int GroupChangeMemberReq::kAttachDataFieldNumber;
const int GroupChangeMemberReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupChangeMemberReq::GroupChangeMemberReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupChangeMemberReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupChangeMemberReq)
}
GroupChangeMemberReq::GroupChangeMemberReq(const GroupChangeMemberReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_member_modify_action_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(group_member_modify_action_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupChangeMemberReq)
}

void GroupChangeMemberReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  group_member_modify_action_ = 1;
}

GroupChangeMemberReq::~GroupChangeMemberReq() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupChangeMemberReq)
  SharedDtor();
}

void GroupChangeMemberReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupChangeMemberReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupChangeMemberReq& GroupChangeMemberReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupChangeMemberReq.base);
  return *internal_default_instance();
}


void GroupChangeMemberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupChangeMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
    group_member_modify_action_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupChangeMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupChangeMemberReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::GroupMemberModifyAction_IsValid(value)) {
            set_group_member_modify_action(static_cast< ::PTP::Common::GroupMemberModifyAction >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string members = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupChangeMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupChangeMemberReq)
  return false;
#undef DO_
}

void GroupChangeMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupChangeMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->group_member_modify_action(), output);
  }

  // required uint32 group_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // repeated string members = 3;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->members(i), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupChangeMemberReq)
}

size_t GroupChangeMemberReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupChangeMemberReq)
  size_t total_size = 0;

  if (has_group_id()) {
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_group_member_modify_action()) {
    // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_member_modify_action());
  }

  return total_size;
}
size_t GroupChangeMemberReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupChangeMemberReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x0000000a) ^ 0x0000000a) == 0) {  // All required fields are present.
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_member_modify_action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string members = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->members_size());
  for (int i = 0, n = this->members_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->members(i));
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupChangeMemberReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupChangeMemberReq*>(&from));
}

void GroupChangeMemberReq::MergeFrom(const GroupChangeMemberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupChangeMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      auth_uid_ = from.auth_uid_;
    }
    if (cached_has_bits & 0x00000008u) {
      group_member_modify_action_ = from.group_member_modify_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupChangeMemberReq::CopyFrom(const GroupChangeMemberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupChangeMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupChangeMemberReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000a) != 0x0000000a) return false;
  return true;
}

void GroupChangeMemberReq::Swap(GroupChangeMemberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupChangeMemberReq::InternalSwap(GroupChangeMemberReq* other) {
  using std::swap;
  members_.InternalSwap(CastToBase(&other->members_));
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(group_member_modify_action_, other->group_member_modify_action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupChangeMemberReq::GetTypeName() const {
  return "PTP.Group.GroupChangeMemberReq";
}


// ===================================================================

void GroupChangeMemberRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupChangeMemberRes::kGroupMemberModifyActionFieldNumber;
const int GroupChangeMemberRes::kGroupIdFieldNumber;
const int GroupChangeMemberRes::kMembersChangFieldNumber;
const int GroupChangeMemberRes::kErrorFieldNumber;
const int GroupChangeMemberRes::kAttachDataFieldNumber;
const int GroupChangeMemberRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupChangeMemberRes::GroupChangeMemberRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupChangeMemberRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupChangeMemberRes)
}
GroupChangeMemberRes::GroupChangeMemberRes(const GroupChangeMemberRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_chang_(from.members_chang_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_member_modify_action_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(group_member_modify_action_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupChangeMemberRes)
}

void GroupChangeMemberRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  group_member_modify_action_ = 1;
}

GroupChangeMemberRes::~GroupChangeMemberRes() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupChangeMemberRes)
  SharedDtor();
}

void GroupChangeMemberRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupChangeMemberRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupChangeMemberRes& GroupChangeMemberRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupChangeMemberRes.base);
  return *internal_default_instance();
}


void GroupChangeMemberRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupChangeMemberRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_chang_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
    group_member_modify_action_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupChangeMemberRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupChangeMemberRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::GroupMemberModifyAction_IsValid(value)) {
            set_group_member_modify_action(static_cast< ::PTP::Common::GroupMemberModifyAction >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string members_chang = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_members_chang()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ERR error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(40u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupChangeMemberRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupChangeMemberRes)
  return false;
#undef DO_
}

void GroupChangeMemberRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupChangeMemberRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->group_member_modify_action(), output);
  }

  // required uint32 group_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // repeated string members_chang = 4;
  for (int i = 0, n = this->members_chang_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->members_chang(i), output);
  }

  // required .PTP.Common.ERR error = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->error(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupChangeMemberRes)
}

size_t GroupChangeMemberRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupChangeMemberRes)
  size_t total_size = 0;

  if (has_group_id()) {
    // required uint32 group_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_error()) {
    // required .PTP.Common.ERR error = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  if (has_group_member_modify_action()) {
    // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_member_modify_action());
  }

  return total_size;
}
size_t GroupChangeMemberRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupChangeMemberRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000016) ^ 0x00000016) == 0) {  // All required fields are present.
    // required uint32 group_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required .PTP.Common.ERR error = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

    // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_member_modify_action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string members_chang = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->members_chang_size());
  for (int i = 0, n = this->members_chang_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->members_chang(i));
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupChangeMemberRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupChangeMemberRes*>(&from));
}

void GroupChangeMemberRes::MergeFrom(const GroupChangeMemberRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupChangeMemberRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_chang_.MergeFrom(from.members_chang_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    if (cached_has_bits & 0x00000010u) {
      group_member_modify_action_ = from.group_member_modify_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupChangeMemberRes::CopyFrom(const GroupChangeMemberRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupChangeMemberRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupChangeMemberRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000016) != 0x00000016) return false;
  return true;
}

void GroupChangeMemberRes::Swap(GroupChangeMemberRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupChangeMemberRes::InternalSwap(GroupChangeMemberRes* other) {
  using std::swap;
  members_chang_.InternalSwap(CastToBase(&other->members_chang_));
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(group_member_modify_action_, other->group_member_modify_action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupChangeMemberRes::GetTypeName() const {
  return "PTP.Group.GroupChangeMemberRes";
}


// ===================================================================

void GroupChangeMemberNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupChangeMemberNotify::kGroupMemberModifyActionFieldNumber;
const int GroupChangeMemberNotify::kGroupIdFieldNumber;
const int GroupChangeMemberNotify::kMembersChangFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupChangeMemberNotify::GroupChangeMemberNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupChangeMemberNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupChangeMemberNotify)
}
GroupChangeMemberNotify::GroupChangeMemberNotify(const GroupChangeMemberNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_chang_(from.members_chang_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_member_modify_action_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(group_member_modify_action_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupChangeMemberNotify)
}

void GroupChangeMemberNotify::SharedCtor() {
  group_id_ = 0u;
  group_member_modify_action_ = 1;
}

GroupChangeMemberNotify::~GroupChangeMemberNotify() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupChangeMemberNotify)
  SharedDtor();
}

void GroupChangeMemberNotify::SharedDtor() {
}

void GroupChangeMemberNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupChangeMemberNotify& GroupChangeMemberNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupChangeMemberNotify.base);
  return *internal_default_instance();
}


void GroupChangeMemberNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupChangeMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_chang_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    group_id_ = 0u;
    group_member_modify_action_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupChangeMemberNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupChangeMemberNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::GroupMemberModifyAction_IsValid(value)) {
            set_group_member_modify_action(static_cast< ::PTP::Common::GroupMemberModifyAction >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string members_chang = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_members_chang()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupChangeMemberNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupChangeMemberNotify)
  return false;
#undef DO_
}

void GroupChangeMemberNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupChangeMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->group_member_modify_action(), output);
  }

  // required uint32 group_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // repeated string members_chang = 3;
  for (int i = 0, n = this->members_chang_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->members_chang(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupChangeMemberNotify)
}

size_t GroupChangeMemberNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupChangeMemberNotify)
  size_t total_size = 0;

  if (has_group_id()) {
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_group_member_modify_action()) {
    // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_member_modify_action());
  }

  return total_size;
}
size_t GroupChangeMemberNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupChangeMemberNotify)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_member_modify_action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string members_chang = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->members_chang_size());
  for (int i = 0, n = this->members_chang_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->members_chang(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupChangeMemberNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupChangeMemberNotify*>(&from));
}

void GroupChangeMemberNotify::MergeFrom(const GroupChangeMemberNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupChangeMemberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_chang_.MergeFrom(from.members_chang_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      group_member_modify_action_ = from.group_member_modify_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupChangeMemberNotify::CopyFrom(const GroupChangeMemberNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupChangeMemberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupChangeMemberNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GroupChangeMemberNotify::Swap(GroupChangeMemberNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupChangeMemberNotify::InternalSwap(GroupChangeMemberNotify* other) {
  using std::swap;
  members_chang_.InternalSwap(CastToBase(&other->members_chang_));
  swap(group_id_, other->group_id_);
  swap(group_member_modify_action_, other->group_member_modify_action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupChangeMemberNotify::GetTypeName() const {
  return "PTP.Group.GroupChangeMemberNotify";
}


// ===================================================================

void GroupGetListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupGetListReq::kGroupInfoUpdatedTimeFieldNumber;
const int GroupGetListReq::kAttachDataFieldNumber;
const int GroupGetListReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupGetListReq::GroupGetListReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupGetListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupGetListReq)
}
GroupGetListReq::GroupGetListReq(const GroupGetListReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_info_updated_time_, &from.group_info_updated_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_info_updated_time_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupGetListReq)
}

void GroupGetListReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_info_updated_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_info_updated_time_)) + sizeof(auth_uid_));
}

GroupGetListReq::~GroupGetListReq() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupGetListReq)
  SharedDtor();
}

void GroupGetListReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupGetListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupGetListReq& GroupGetListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupGetListReq.base);
  return *internal_default_instance();
}


void GroupGetListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupGetListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&group_info_updated_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_info_updated_time_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupGetListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupGetListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_info_updated_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_info_updated_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_info_updated_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupGetListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupGetListReq)
  return false;
#undef DO_
}

void GroupGetListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupGetListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_info_updated_time = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_info_updated_time(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupGetListReq)
}

size_t GroupGetListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupGetListReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required uint32 group_info_updated_time = 1;
  if (has_group_info_updated_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_info_updated_time());
  }
  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupGetListReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupGetListReq*>(&from));
}

void GroupGetListReq::MergeFrom(const GroupGetListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupGetListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_info_updated_time_ = from.group_info_updated_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupGetListReq::CopyFrom(const GroupGetListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupGetListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupGetListReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void GroupGetListReq::Swap(GroupGetListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupGetListReq::InternalSwap(GroupGetListReq* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_info_updated_time_, other->group_info_updated_time_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupGetListReq::GetTypeName() const {
  return "PTP.Group.GroupGetListReq";
}


// ===================================================================

void GroupGetListRes::InitAsDefaultInstance() {
}
void GroupGetListRes::clear_groups() {
  groups_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupGetListRes::kGroupInfoUpdatedTimeFieldNumber;
const int GroupGetListRes::kGroupsFieldNumber;
const int GroupGetListRes::kErrorFieldNumber;
const int GroupGetListRes::kAttachDataFieldNumber;
const int GroupGetListRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupGetListRes::GroupGetListRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupGetListRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupGetListRes)
}
GroupGetListRes::GroupGetListRes(const GroupGetListRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_info_updated_time_, &from.group_info_updated_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_info_updated_time_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupGetListRes)
}

void GroupGetListRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_info_updated_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_info_updated_time_)) + sizeof(auth_uid_));
}

GroupGetListRes::~GroupGetListRes() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupGetListRes)
  SharedDtor();
}

void GroupGetListRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupGetListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupGetListRes& GroupGetListRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupGetListRes.base);
  return *internal_default_instance();
}


void GroupGetListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupGetListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&group_info_updated_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_info_updated_time_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupGetListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupGetListRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_info_updated_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_info_updated_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_info_updated_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PTP.Common.GroupInfo groups = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ERR error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupGetListRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupGetListRes)
  return false;
#undef DO_
}

void GroupGetListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupGetListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_info_updated_time = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_info_updated_time(), output);
  }

  // repeated .PTP.Common.GroupInfo groups = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->groups(static_cast<int>(i)),
      output);
  }

  // required .PTP.Common.ERR error = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupGetListRes)
}

size_t GroupGetListRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupGetListRes)
  size_t total_size = 0;

  if (has_group_info_updated_time()) {
    // required uint32 group_info_updated_time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_info_updated_time());
  }

  if (has_error()) {
    // required .PTP.Common.ERR error = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
size_t GroupGetListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupGetListRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 group_info_updated_time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_info_updated_time());

    // required .PTP.Common.ERR error = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .PTP.Common.GroupInfo groups = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->groups(static_cast<int>(i)));
    }
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupGetListRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupGetListRes*>(&from));
}

void GroupGetListRes::MergeFrom(const GroupGetListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupGetListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_info_updated_time_ = from.group_info_updated_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupGetListRes::CopyFrom(const GroupGetListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupGetListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupGetListRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->groups())) return false;
  return true;
}

void GroupGetListRes::Swap(GroupGetListRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupGetListRes::InternalSwap(GroupGetListRes* other) {
  using std::swap;
  CastToBase(&groups_)->InternalSwap(CastToBase(&other->groups_));
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_info_updated_time_, other->group_info_updated_time_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupGetListRes::GetTypeName() const {
  return "PTP.Group.GroupGetListRes";
}


// ===================================================================

void GroupGetMembersListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupGetMembersListReq::kGroupMembersUpdatedTimeFieldNumber;
const int GroupGetMembersListReq::kGroupIdFieldNumber;
const int GroupGetMembersListReq::kAttachDataFieldNumber;
const int GroupGetMembersListReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupGetMembersListReq::GroupGetMembersListReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupGetMembersListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupGetMembersListReq)
}
GroupGetMembersListReq::GroupGetMembersListReq(const GroupGetMembersListReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_members_updated_time_, &from.group_members_updated_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_members_updated_time_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupGetMembersListReq)
}

void GroupGetMembersListReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_members_updated_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_members_updated_time_)) + sizeof(auth_uid_));
}

GroupGetMembersListReq::~GroupGetMembersListReq() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupGetMembersListReq)
  SharedDtor();
}

void GroupGetMembersListReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupGetMembersListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupGetMembersListReq& GroupGetMembersListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupGetMembersListReq.base);
  return *internal_default_instance();
}


void GroupGetMembersListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupGetMembersListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&group_members_updated_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_members_updated_time_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupGetMembersListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupGetMembersListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_members_updated_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_members_updated_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_members_updated_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupGetMembersListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupGetMembersListReq)
  return false;
#undef DO_
}

void GroupGetMembersListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupGetMembersListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_members_updated_time = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_members_updated_time(), output);
  }

  // required uint32 group_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupGetMembersListReq)
}

size_t GroupGetMembersListReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupGetMembersListReq)
  size_t total_size = 0;

  if (has_group_members_updated_time()) {
    // required uint32 group_members_updated_time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_members_updated_time());
  }

  if (has_group_id()) {
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  return total_size;
}
size_t GroupGetMembersListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupGetMembersListReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 group_members_updated_time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_members_updated_time());

    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupGetMembersListReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupGetMembersListReq*>(&from));
}

void GroupGetMembersListReq::MergeFrom(const GroupGetMembersListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupGetMembersListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_members_updated_time_ = from.group_members_updated_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupGetMembersListReq::CopyFrom(const GroupGetMembersListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupGetMembersListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupGetMembersListReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void GroupGetMembersListReq::Swap(GroupGetMembersListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupGetMembersListReq::InternalSwap(GroupGetMembersListReq* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_members_updated_time_, other->group_members_updated_time_);
  swap(group_id_, other->group_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupGetMembersListReq::GetTypeName() const {
  return "PTP.Group.GroupGetMembersListReq";
}


// ===================================================================

void GroupGetMembersListRes::InitAsDefaultInstance() {
}
void GroupGetMembersListRes::clear_members() {
  members_.Clear();
}
void GroupGetMembersListRes::clear_group_members() {
  group_members_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupGetMembersListRes::kGroupMembersUpdatedTimeFieldNumber;
const int GroupGetMembersListRes::kGroupIdFieldNumber;
const int GroupGetMembersListRes::kMembersFieldNumber;
const int GroupGetMembersListRes::kGroupMembersFieldNumber;
const int GroupGetMembersListRes::kErrorFieldNumber;
const int GroupGetMembersListRes::kAttachDataFieldNumber;
const int GroupGetMembersListRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupGetMembersListRes::GroupGetMembersListRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupGetMembersListRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupGetMembersListRes)
}
GroupGetMembersListRes::GroupGetMembersListRes(const GroupGetMembersListRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_(from.members_),
      group_members_(from.group_members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_members_updated_time_, &from.group_members_updated_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_members_updated_time_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupGetMembersListRes)
}

void GroupGetMembersListRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_members_updated_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_members_updated_time_)) + sizeof(auth_uid_));
}

GroupGetMembersListRes::~GroupGetMembersListRes() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupGetMembersListRes)
  SharedDtor();
}

void GroupGetMembersListRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupGetMembersListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupGetMembersListRes& GroupGetMembersListRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupGetMembersListRes.base);
  return *internal_default_instance();
}


void GroupGetMembersListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupGetMembersListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  group_members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&group_members_updated_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_members_updated_time_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupGetMembersListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupGetMembersListRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_members_updated_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_members_updated_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_members_updated_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PTP.Common.UserInfo members = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PTP.Common.GroupMember group_members = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_group_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ERR error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(40u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupGetMembersListRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupGetMembersListRes)
  return false;
#undef DO_
}

void GroupGetMembersListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupGetMembersListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_members_updated_time = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_members_updated_time(), output);
  }

  // required uint32 group_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // repeated .PTP.Common.UserInfo members = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->members(static_cast<int>(i)),
      output);
  }

  // repeated .PTP.Common.GroupMember group_members = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->group_members(static_cast<int>(i)),
      output);
  }

  // required .PTP.Common.ERR error = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->error(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupGetMembersListRes)
}

size_t GroupGetMembersListRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupGetMembersListRes)
  size_t total_size = 0;

  if (has_group_members_updated_time()) {
    // required uint32 group_members_updated_time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_members_updated_time());
  }

  if (has_group_id()) {
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_error()) {
    // required .PTP.Common.ERR error = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
size_t GroupGetMembersListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupGetMembersListRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required uint32 group_members_updated_time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_members_updated_time());

    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required .PTP.Common.ERR error = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .PTP.Common.UserInfo members = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // repeated .PTP.Common.GroupMember group_members = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->group_members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->group_members(static_cast<int>(i)));
    }
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupGetMembersListRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupGetMembersListRes*>(&from));
}

void GroupGetMembersListRes::MergeFrom(const GroupGetMembersListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupGetMembersListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  group_members_.MergeFrom(from.group_members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_members_updated_time_ = from.group_members_updated_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000010u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupGetMembersListRes::CopyFrom(const GroupGetMembersListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupGetMembersListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupGetMembersListRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->members())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->group_members())) return false;
  return true;
}

void GroupGetMembersListRes::Swap(GroupGetMembersListRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupGetMembersListRes::InternalSwap(GroupGetMembersListRes* other) {
  using std::swap;
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  CastToBase(&group_members_)->InternalSwap(CastToBase(&other->group_members_));
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_members_updated_time_, other->group_members_updated_time_);
  swap(group_id_, other->group_id_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupGetMembersListRes::GetTypeName() const {
  return "PTP.Group.GroupGetMembersListRes";
}


// ===================================================================

void GroupUnreadMsgReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupUnreadMsgReq::kAttachDataFieldNumber;
const int GroupUnreadMsgReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupUnreadMsgReq::GroupUnreadMsgReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupUnreadMsgReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupUnreadMsgReq)
}
GroupUnreadMsgReq::GroupUnreadMsgReq(const GroupUnreadMsgReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  auth_uid_ = from.auth_uid_;
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupUnreadMsgReq)
}

void GroupUnreadMsgReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_uid_ = 0u;
}

GroupUnreadMsgReq::~GroupUnreadMsgReq() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupUnreadMsgReq)
  SharedDtor();
}

void GroupUnreadMsgReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupUnreadMsgReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupUnreadMsgReq& GroupUnreadMsgReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupUnreadMsgReq.base);
  return *internal_default_instance();
}


void GroupUnreadMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupUnreadMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  auth_uid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupUnreadMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupUnreadMsgReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupUnreadMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupUnreadMsgReq)
  return false;
#undef DO_
}

void GroupUnreadMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupUnreadMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupUnreadMsgReq)
}

size_t GroupUnreadMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupUnreadMsgReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes attach_data = 20;
    if (has_attach_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attach_data());
    }

    // optional uint32 auth_uid = 21;
    if (has_auth_uid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupUnreadMsgReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupUnreadMsgReq*>(&from));
}

void GroupUnreadMsgReq::MergeFrom(const GroupUnreadMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupUnreadMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupUnreadMsgReq::CopyFrom(const GroupUnreadMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupUnreadMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupUnreadMsgReq::IsInitialized() const {
  return true;
}

void GroupUnreadMsgReq::Swap(GroupUnreadMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupUnreadMsgReq::InternalSwap(GroupUnreadMsgReq* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupUnreadMsgReq::GetTypeName() const {
  return "PTP.Group.GroupUnreadMsgReq";
}


// ===================================================================

void GroupUnreadMsgRes::InitAsDefaultInstance() {
}
void GroupUnreadMsgRes::clear_unread_list() {
  unread_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupUnreadMsgRes::kUnreadListFieldNumber;
const int GroupUnreadMsgRes::kUnreadCntFieldNumber;
const int GroupUnreadMsgRes::kErrorFieldNumber;
const int GroupUnreadMsgRes::kAttachDataFieldNumber;
const int GroupUnreadMsgRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupUnreadMsgRes::GroupUnreadMsgRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupUnreadMsgRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupUnreadMsgRes)
}
GroupUnreadMsgRes::GroupUnreadMsgRes(const GroupUnreadMsgRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      unread_list_(from.unread_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&unread_cnt_, &from.unread_cnt_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&unread_cnt_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupUnreadMsgRes)
}

void GroupUnreadMsgRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&unread_cnt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&unread_cnt_)) + sizeof(auth_uid_));
}

GroupUnreadMsgRes::~GroupUnreadMsgRes() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupUnreadMsgRes)
  SharedDtor();
}

void GroupUnreadMsgRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupUnreadMsgRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupUnreadMsgRes& GroupUnreadMsgRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupUnreadMsgRes.base);
  return *internal_default_instance();
}


void GroupUnreadMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupUnreadMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unread_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&unread_cnt_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&unread_cnt_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupUnreadMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupUnreadMsgRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PTP.Common.MsgInfo unread_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_unread_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 unread_cnt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_unread_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unread_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PTP.Common.ERR error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupUnreadMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupUnreadMsgRes)
  return false;
#undef DO_
}

void GroupUnreadMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupUnreadMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PTP.Common.MsgInfo unread_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unread_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->unread_list(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required uint32 unread_cnt = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unread_cnt(), output);
  }

  // required .PTP.Common.ERR error = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->error(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupUnreadMsgRes)
}

size_t GroupUnreadMsgRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupUnreadMsgRes)
  size_t total_size = 0;

  if (has_unread_cnt()) {
    // required uint32 unread_cnt = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unread_cnt());
  }

  if (has_error()) {
    // required .PTP.Common.ERR error = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
size_t GroupUnreadMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupUnreadMsgRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 unread_cnt = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unread_cnt());

    // required .PTP.Common.ERR error = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .PTP.Common.MsgInfo unread_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->unread_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->unread_list(static_cast<int>(i)));
    }
  }

  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupUnreadMsgRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupUnreadMsgRes*>(&from));
}

void GroupUnreadMsgRes::MergeFrom(const GroupUnreadMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupUnreadMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unread_list_.MergeFrom(from.unread_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      unread_cnt_ = from.unread_cnt_;
    }
    if (cached_has_bits & 0x00000004u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupUnreadMsgRes::CopyFrom(const GroupUnreadMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupUnreadMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupUnreadMsgRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->unread_list())) return false;
  return true;
}

void GroupUnreadMsgRes::Swap(GroupUnreadMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupUnreadMsgRes::InternalSwap(GroupUnreadMsgRes* other) {
  using std::swap;
  CastToBase(&unread_list_)->InternalSwap(CastToBase(&other->unread_list_));
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(unread_cnt_, other->unread_cnt_);
  swap(error_, other->error_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupUnreadMsgRes::GetTypeName() const {
  return "PTP.Group.GroupUnreadMsgRes";
}


// ===================================================================

void GroupRemoveSessionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupRemoveSessionReq::kGroupIdFieldNumber;
const int GroupRemoveSessionReq::kAttachDataFieldNumber;
const int GroupRemoveSessionReq::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupRemoveSessionReq::GroupRemoveSessionReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupRemoveSessionReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupRemoveSessionReq)
}
GroupRemoveSessionReq::GroupRemoveSessionReq(const GroupRemoveSessionReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupRemoveSessionReq)
}

void GroupRemoveSessionReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
}

GroupRemoveSessionReq::~GroupRemoveSessionReq() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupRemoveSessionReq)
  SharedDtor();
}

void GroupRemoveSessionReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupRemoveSessionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupRemoveSessionReq& GroupRemoveSessionReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupRemoveSessionReq.base);
  return *internal_default_instance();
}


void GroupRemoveSessionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupRemoveSessionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupRemoveSessionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupRemoveSessionReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupRemoveSessionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupRemoveSessionReq)
  return false;
#undef DO_
}

void GroupRemoveSessionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupRemoveSessionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupRemoveSessionReq)
}

size_t GroupRemoveSessionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupRemoveSessionReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required uint32 group_id = 2;
  if (has_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }
  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupRemoveSessionReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupRemoveSessionReq*>(&from));
}

void GroupRemoveSessionReq::MergeFrom(const GroupRemoveSessionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupRemoveSessionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupRemoveSessionReq::CopyFrom(const GroupRemoveSessionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupRemoveSessionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRemoveSessionReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void GroupRemoveSessionReq::Swap(GroupRemoveSessionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupRemoveSessionReq::InternalSwap(GroupRemoveSessionReq* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupRemoveSessionReq::GetTypeName() const {
  return "PTP.Group.GroupRemoveSessionReq";
}


// ===================================================================

void GroupRemoveSessionRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupRemoveSessionRes::kErrorFieldNumber;
const int GroupRemoveSessionRes::kGroupIdFieldNumber;
const int GroupRemoveSessionRes::kAttachDataFieldNumber;
const int GroupRemoveSessionRes::kAuthUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupRemoveSessionRes::GroupRemoveSessionRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupRemoveSessionRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupRemoveSessionRes)
}
GroupRemoveSessionRes::GroupRemoveSessionRes(const GroupRemoveSessionRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attach_data()) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_uid_) -
    reinterpret_cast<char*>(&error_)) + sizeof(auth_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupRemoveSessionRes)
}

void GroupRemoveSessionRes::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_uid_) -
      reinterpret_cast<char*>(&error_)) + sizeof(auth_uid_));
}

GroupRemoveSessionRes::~GroupRemoveSessionRes() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupRemoveSessionRes)
  SharedDtor();
}

void GroupRemoveSessionRes::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupRemoveSessionRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupRemoveSessionRes& GroupRemoveSessionRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupRemoveSessionRes.base);
  return *internal_default_instance();
}


void GroupRemoveSessionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupRemoveSessionRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attach_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&error_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_uid_) -
        reinterpret_cast<char*>(&error_)) + sizeof(auth_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupRemoveSessionRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupRemoveSessionRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PTP.Common.ERR error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PTP::Common::ERR_IsValid(value)) {
            set_error(static_cast< ::PTP::Common::ERR >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_uid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_auth_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupRemoveSessionRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupRemoveSessionRes)
  return false;
#undef DO_
}

void GroupRemoveSessionRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupRemoveSessionRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PTP.Common.ERR error = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  // required uint32 group_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // optional bytes attach_data = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // optional uint32 auth_uid = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->auth_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupRemoveSessionRes)
}

size_t GroupRemoveSessionRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupRemoveSessionRes)
  size_t total_size = 0;

  if (has_error()) {
    // required .PTP.Common.ERR error = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  if (has_group_id()) {
    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  return total_size;
}
size_t GroupRemoveSessionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupRemoveSessionRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .PTP.Common.ERR error = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

    // required uint32 group_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes attach_data = 20;
  if (has_attach_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // optional uint32 auth_uid = 21;
  if (has_auth_uid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupRemoveSessionRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupRemoveSessionRes*>(&from));
}

void GroupRemoveSessionRes::MergeFrom(const GroupRemoveSessionRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupRemoveSessionRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attach_data();
      attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_uid_ = from.auth_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupRemoveSessionRes::CopyFrom(const GroupRemoveSessionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupRemoveSessionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRemoveSessionRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void GroupRemoveSessionRes::Swap(GroupRemoveSessionRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupRemoveSessionRes::InternalSwap(GroupRemoveSessionRes* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  swap(group_id_, other->group_id_);
  swap(auth_uid_, other->auth_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupRemoveSessionRes::GetTypeName() const {
  return "PTP.Group.GroupRemoveSessionRes";
}


// ===================================================================

void GroupRemoveSessionNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupRemoveSessionNotify::kGroupIdFieldNumber;
const int GroupRemoveSessionNotify::kFromUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupRemoveSessionNotify::GroupRemoveSessionNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PTP_2eGroup_2eproto::scc_info_GroupRemoveSessionNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PTP.Group.GroupRemoveSessionNotify)
}
GroupRemoveSessionNotify::GroupRemoveSessionNotify(const GroupRemoveSessionNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_uid_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(from_uid_));
  // @@protoc_insertion_point(copy_constructor:PTP.Group.GroupRemoveSessionNotify)
}

void GroupRemoveSessionNotify::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_uid_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(from_uid_));
}

GroupRemoveSessionNotify::~GroupRemoveSessionNotify() {
  // @@protoc_insertion_point(destructor:PTP.Group.GroupRemoveSessionNotify)
  SharedDtor();
}

void GroupRemoveSessionNotify::SharedDtor() {
}

void GroupRemoveSessionNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupRemoveSessionNotify& GroupRemoveSessionNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PTP_2eGroup_2eproto::scc_info_GroupRemoveSessionNotify.base);
  return *internal_default_instance();
}


void GroupRemoveSessionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:PTP.Group.GroupRemoveSessionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&from_uid_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(from_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GroupRemoveSessionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:PTP.Group.GroupRemoveSessionNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 from_uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_from_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PTP.Group.GroupRemoveSessionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PTP.Group.GroupRemoveSessionNotify)
  return false;
#undef DO_
}

void GroupRemoveSessionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PTP.Group.GroupRemoveSessionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // required uint32 from_uid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->from_uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:PTP.Group.GroupRemoveSessionNotify)
}

size_t GroupRemoveSessionNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PTP.Group.GroupRemoveSessionNotify)
  size_t total_size = 0;

  if (has_group_id()) {
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_from_uid()) {
    // required uint32 from_uid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_uid());
  }

  return total_size;
}
size_t GroupRemoveSessionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PTP.Group.GroupRemoveSessionNotify)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required uint32 from_uid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_uid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupRemoveSessionNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupRemoveSessionNotify*>(&from));
}

void GroupRemoveSessionNotify::MergeFrom(const GroupRemoveSessionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PTP.Group.GroupRemoveSessionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      from_uid_ = from.from_uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GroupRemoveSessionNotify::CopyFrom(const GroupRemoveSessionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PTP.Group.GroupRemoveSessionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRemoveSessionNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GroupRemoveSessionNotify::Swap(GroupRemoveSessionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupRemoveSessionNotify::InternalSwap(GroupRemoveSessionNotify* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(from_uid_, other->from_uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupRemoveSessionNotify::GetTypeName() const {
  return "PTP.Group.GroupRemoveSessionNotify";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Group
}  // namespace PTP
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupPreCreateReq* Arena::CreateMaybeMessage< ::PTP::Group::GroupPreCreateReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupPreCreateReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupPreCreateRes* Arena::CreateMaybeMessage< ::PTP::Group::GroupPreCreateRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupPreCreateRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupCreateReq* Arena::CreateMaybeMessage< ::PTP::Group::GroupCreateReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupCreateReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupCreateRes* Arena::CreateMaybeMessage< ::PTP::Group::GroupCreateRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupCreateRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupModifyReq* Arena::CreateMaybeMessage< ::PTP::Group::GroupModifyReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupModifyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupModifyRes* Arena::CreateMaybeMessage< ::PTP::Group::GroupModifyRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupModifyRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupModifyNotify* Arena::CreateMaybeMessage< ::PTP::Group::GroupModifyNotify >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupModifyNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupChangeMemberReq* Arena::CreateMaybeMessage< ::PTP::Group::GroupChangeMemberReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupChangeMemberReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupChangeMemberRes* Arena::CreateMaybeMessage< ::PTP::Group::GroupChangeMemberRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupChangeMemberRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupChangeMemberNotify* Arena::CreateMaybeMessage< ::PTP::Group::GroupChangeMemberNotify >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupChangeMemberNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupGetListReq* Arena::CreateMaybeMessage< ::PTP::Group::GroupGetListReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupGetListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupGetListRes* Arena::CreateMaybeMessage< ::PTP::Group::GroupGetListRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupGetListRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupGetMembersListReq* Arena::CreateMaybeMessage< ::PTP::Group::GroupGetMembersListReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupGetMembersListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupGetMembersListRes* Arena::CreateMaybeMessage< ::PTP::Group::GroupGetMembersListRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupGetMembersListRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupUnreadMsgReq* Arena::CreateMaybeMessage< ::PTP::Group::GroupUnreadMsgReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupUnreadMsgReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupUnreadMsgRes* Arena::CreateMaybeMessage< ::PTP::Group::GroupUnreadMsgRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupUnreadMsgRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupRemoveSessionReq* Arena::CreateMaybeMessage< ::PTP::Group::GroupRemoveSessionReq >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupRemoveSessionReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupRemoveSessionRes* Arena::CreateMaybeMessage< ::PTP::Group::GroupRemoveSessionRes >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupRemoveSessionRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PTP::Group::GroupRemoveSessionNotify* Arena::CreateMaybeMessage< ::PTP::Group::GroupRemoveSessionNotify >(Arena* arena) {
  return Arena::CreateInternal< ::PTP::Group::GroupRemoveSessionNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
