// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PTP.Msg.proto

#ifndef PROTOBUF_INCLUDED_PTP_2eMsg_2eproto
#define PROTOBUF_INCLUDED_PTP_2eMsg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "PTP.Common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_PTP_2eMsg_2eproto 

namespace protobuf_PTP_2eMsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_PTP_2eMsg_2eproto
namespace PTP {
namespace Msg {
class MsgGetByIdsReq;
class MsgGetByIdsReqDefaultTypeInternal;
extern MsgGetByIdsReqDefaultTypeInternal _MsgGetByIdsReq_default_instance_;
class MsgGetByIdsRes;
class MsgGetByIdsResDefaultTypeInternal;
extern MsgGetByIdsResDefaultTypeInternal _MsgGetByIdsRes_default_instance_;
class MsgGetMaxIdReq;
class MsgGetMaxIdReqDefaultTypeInternal;
extern MsgGetMaxIdReqDefaultTypeInternal _MsgGetMaxIdReq_default_instance_;
class MsgGetMaxIdRes;
class MsgGetMaxIdResDefaultTypeInternal;
extern MsgGetMaxIdResDefaultTypeInternal _MsgGetMaxIdRes_default_instance_;
class MsgNotify;
class MsgNotifyDefaultTypeInternal;
extern MsgNotifyDefaultTypeInternal _MsgNotify_default_instance_;
class MsgReadAckReq;
class MsgReadAckReqDefaultTypeInternal;
extern MsgReadAckReqDefaultTypeInternal _MsgReadAckReq_default_instance_;
class MsgReadNotify;
class MsgReadNotifyDefaultTypeInternal;
extern MsgReadNotifyDefaultTypeInternal _MsgReadNotify_default_instance_;
class MsgReq;
class MsgReqDefaultTypeInternal;
extern MsgReqDefaultTypeInternal _MsgReq_default_instance_;
class MsgRes;
class MsgResDefaultTypeInternal;
extern MsgResDefaultTypeInternal _MsgRes_default_instance_;
class MsgUnNotify;
class MsgUnNotifyDefaultTypeInternal;
extern MsgUnNotifyDefaultTypeInternal _MsgUnNotify_default_instance_;
}  // namespace Msg
}  // namespace PTP
namespace google {
namespace protobuf {
template<> ::PTP::Msg::MsgGetByIdsReq* Arena::CreateMaybeMessage<::PTP::Msg::MsgGetByIdsReq>(Arena*);
template<> ::PTP::Msg::MsgGetByIdsRes* Arena::CreateMaybeMessage<::PTP::Msg::MsgGetByIdsRes>(Arena*);
template<> ::PTP::Msg::MsgGetMaxIdReq* Arena::CreateMaybeMessage<::PTP::Msg::MsgGetMaxIdReq>(Arena*);
template<> ::PTP::Msg::MsgGetMaxIdRes* Arena::CreateMaybeMessage<::PTP::Msg::MsgGetMaxIdRes>(Arena*);
template<> ::PTP::Msg::MsgNotify* Arena::CreateMaybeMessage<::PTP::Msg::MsgNotify>(Arena*);
template<> ::PTP::Msg::MsgReadAckReq* Arena::CreateMaybeMessage<::PTP::Msg::MsgReadAckReq>(Arena*);
template<> ::PTP::Msg::MsgReadNotify* Arena::CreateMaybeMessage<::PTP::Msg::MsgReadNotify>(Arena*);
template<> ::PTP::Msg::MsgReq* Arena::CreateMaybeMessage<::PTP::Msg::MsgReq>(Arena*);
template<> ::PTP::Msg::MsgRes* Arena::CreateMaybeMessage<::PTP::Msg::MsgRes>(Arena*);
template<> ::PTP::Msg::MsgUnNotify* Arena::CreateMaybeMessage<::PTP::Msg::MsgUnNotify>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace PTP {
namespace Msg {

// ===================================================================

class MsgReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgReq) */ {
 public:
  MsgReq();
  virtual ~MsgReq();

  MsgReq(const MsgReq& from);

  inline MsgReq& operator=(const MsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReq(MsgReq&& from) noexcept
    : MsgReq() {
    *this = ::std::move(from);
  }

  inline MsgReq& operator=(MsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReq* internal_default_instance() {
    return reinterpret_cast<const MsgReq*>(
               &_MsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgReq* other);
  friend void swap(MsgReq& a, MsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReq* New() const final {
    return CreateMaybeMessage<MsgReq>(NULL);
  }

  MsgReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgReq& from);
  void MergeFrom(const MsgReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string group_adr = 1;
  bool has_group_adr() const;
  void clear_group_adr();
  static const int kGroupAdrFieldNumber = 1;
  const ::std::string& group_adr() const;
  void set_group_adr(const ::std::string& value);
  #if LANG_CXX11
  void set_group_adr(::std::string&& value);
  #endif
  void set_group_adr(const char* value);
  void set_group_adr(const char* value, size_t size);
  ::std::string* mutable_group_adr();
  ::std::string* release_group_adr();
  void set_allocated_group_adr(::std::string* group_adr);

  // optional string msg_data = 7;
  bool has_msg_data() const;
  void clear_msg_data();
  static const int kMsgDataFieldNumber = 7;
  const ::std::string& msg_data() const;
  void set_msg_data(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_data(::std::string&& value);
  #endif
  void set_msg_data(const char* value);
  void set_msg_data(const char* value, size_t size);
  ::std::string* mutable_msg_data();
  ::std::string* release_msg_data();
  void set_allocated_msg_data(::std::string* msg_data);

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 sent_at = 3;
  bool has_sent_at() const;
  void clear_sent_at();
  static const int kSentAtFieldNumber = 3;
  ::google::protobuf::uint32 sent_at() const;
  void set_sent_at(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // required .PTP.Common.MsgType msg_type = 6;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 6;
  ::PTP::Common::MsgType msg_type() const;
  void set_msg_type(::PTP::Common::MsgType value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgReq)
 private:
  void set_has_group_adr();
  void clear_has_group_adr();
  void set_has_sent_at();
  void clear_has_sent_at();
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_msg_data();
  void clear_has_msg_data();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr group_adr_;
  ::google::protobuf::internal::ArenaStringPtr msg_data_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 sent_at_;
  ::google::protobuf::uint32 auth_uid_;
  int msg_type_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgRes) */ {
 public:
  MsgRes();
  virtual ~MsgRes();

  MsgRes(const MsgRes& from);

  inline MsgRes& operator=(const MsgRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRes(MsgRes&& from) noexcept
    : MsgRes() {
    *this = ::std::move(from);
  }

  inline MsgRes& operator=(MsgRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRes* internal_default_instance() {
    return reinterpret_cast<const MsgRes*>(
               &_MsgRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgRes* other);
  friend void swap(MsgRes& a, MsgRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRes* New() const final {
    return CreateMaybeMessage<MsgRes>(NULL);
  }

  MsgRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgRes& from);
  void MergeFrom(const MsgRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // optional uint32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 msg_id = 3;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // optional uint32 sent_at = 4;
  bool has_sent_at() const;
  void clear_sent_at();
  static const int kSentAtFieldNumber = 4;
  ::google::protobuf::uint32 sent_at() const;
  void set_sent_at(::google::protobuf::uint32 value);

  // optional .PTP.Common.ERR error = 7;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 7;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgRes)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_msg_id();
  void clear_has_msg_id();
  void set_has_sent_at();
  void clear_has_sent_at();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 msg_id_;
  ::google::protobuf::uint32 sent_at_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgNotify : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgNotify) */ {
 public:
  MsgNotify();
  virtual ~MsgNotify();

  MsgNotify(const MsgNotify& from);

  inline MsgNotify& operator=(const MsgNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgNotify(MsgNotify&& from) noexcept
    : MsgNotify() {
    *this = ::std::move(from);
  }

  inline MsgNotify& operator=(MsgNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgNotify* internal_default_instance() {
    return reinterpret_cast<const MsgNotify*>(
               &_MsgNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgNotify* other);
  friend void swap(MsgNotify& a, MsgNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgNotify* New() const final {
    return CreateMaybeMessage<MsgNotify>(NULL);
  }

  MsgNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgNotify>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgNotify& from);
  void MergeFrom(const MsgNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 notify_users = 2;
  int notify_users_size() const;
  void clear_notify_users();
  static const int kNotifyUsersFieldNumber = 2;
  ::google::protobuf::uint32 notify_users(int index) const;
  void set_notify_users(int index, ::google::protobuf::uint32 value);
  void add_notify_users(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      notify_users() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_notify_users();

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required .PTP.Common.MsgInfo msg_info = 1;
  bool has_msg_info() const;
  void clear_msg_info();
  static const int kMsgInfoFieldNumber = 1;
  private:
  const ::PTP::Common::MsgInfo& _internal_msg_info() const;
  public:
  const ::PTP::Common::MsgInfo& msg_info() const;
  ::PTP::Common::MsgInfo* release_msg_info();
  ::PTP::Common::MsgInfo* mutable_msg_info();
  void set_allocated_msg_info(::PTP::Common::MsgInfo* msg_info);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgNotify)
 private:
  void set_has_msg_info();
  void clear_has_msg_info();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > notify_users_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::PTP::Common::MsgInfo* msg_info_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgUnNotify : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgUnNotify) */ {
 public:
  MsgUnNotify();
  virtual ~MsgUnNotify();

  MsgUnNotify(const MsgUnNotify& from);

  inline MsgUnNotify& operator=(const MsgUnNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUnNotify(MsgUnNotify&& from) noexcept
    : MsgUnNotify() {
    *this = ::std::move(from);
  }

  inline MsgUnNotify& operator=(MsgUnNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgUnNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUnNotify* internal_default_instance() {
    return reinterpret_cast<const MsgUnNotify*>(
               &_MsgUnNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MsgUnNotify* other);
  friend void swap(MsgUnNotify& a, MsgUnNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUnNotify* New() const final {
    return CreateMaybeMessage<MsgUnNotify>(NULL);
  }

  MsgUnNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUnNotify>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgUnNotify& from);
  void MergeFrom(const MsgUnNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgUnNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 un_notify_users = 1;
  int un_notify_users_size() const;
  void clear_un_notify_users();
  static const int kUnNotifyUsersFieldNumber = 1;
  ::google::protobuf::uint32 un_notify_users(int index) const;
  void set_un_notify_users(int index, ::google::protobuf::uint32 value);
  void add_un_notify_users(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      un_notify_users() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_un_notify_users();

  // required uint32 sent_at = 2;
  bool has_sent_at() const;
  void clear_sent_at();
  static const int kSentAtFieldNumber = 2;
  ::google::protobuf::uint32 sent_at() const;
  void set_sent_at(::google::protobuf::uint32 value);

  // required uint32 group_id = 3;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required uint32 from_uid = 4;
  bool has_from_uid() const;
  void clear_from_uid();
  static const int kFromUidFieldNumber = 4;
  ::google::protobuf::uint32 from_uid() const;
  void set_from_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgUnNotify)
 private:
  void set_has_sent_at();
  void clear_has_sent_at();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_from_uid();
  void clear_has_from_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > un_notify_users_;
  ::google::protobuf::uint32 sent_at_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 from_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgReadAckReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgReadAckReq) */ {
 public:
  MsgReadAckReq();
  virtual ~MsgReadAckReq();

  MsgReadAckReq(const MsgReadAckReq& from);

  inline MsgReadAckReq& operator=(const MsgReadAckReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReadAckReq(MsgReadAckReq&& from) noexcept
    : MsgReadAckReq() {
    *this = ::std::move(from);
  }

  inline MsgReadAckReq& operator=(MsgReadAckReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgReadAckReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReadAckReq* internal_default_instance() {
    return reinterpret_cast<const MsgReadAckReq*>(
               &_MsgReadAckReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgReadAckReq* other);
  friend void swap(MsgReadAckReq& a, MsgReadAckReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReadAckReq* New() const final {
    return CreateMaybeMessage<MsgReadAckReq>(NULL);
  }

  MsgReadAckReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReadAckReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgReadAckReq& from);
  void MergeFrom(const MsgReadAckReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgReadAckReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required uint32 msg_id = 3;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgReadAckReq)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_msg_id();
  void clear_has_msg_id();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 msg_id_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgReadNotify : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgReadNotify) */ {
 public:
  MsgReadNotify();
  virtual ~MsgReadNotify();

  MsgReadNotify(const MsgReadNotify& from);

  inline MsgReadNotify& operator=(const MsgReadNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReadNotify(MsgReadNotify&& from) noexcept
    : MsgReadNotify() {
    *this = ::std::move(from);
  }

  inline MsgReadNotify& operator=(MsgReadNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgReadNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReadNotify* internal_default_instance() {
    return reinterpret_cast<const MsgReadNotify*>(
               &_MsgReadNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgReadNotify* other);
  friend void swap(MsgReadNotify& a, MsgReadNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReadNotify* New() const final {
    return CreateMaybeMessage<MsgReadNotify>(NULL);
  }

  MsgReadNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReadNotify>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgReadNotify& from);
  void MergeFrom(const MsgReadNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgReadNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 notify_users = 3;
  int notify_users_size() const;
  void clear_notify_users();
  static const int kNotifyUsersFieldNumber = 3;
  ::google::protobuf::uint32 notify_users(int index) const;
  void set_notify_users(int index, ::google::protobuf::uint32 value);
  void add_notify_users(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      notify_users() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_notify_users();

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required uint32 from_uid = 2;
  bool has_from_uid() const;
  void clear_from_uid();
  static const int kFromUidFieldNumber = 2;
  ::google::protobuf::uint32 from_uid() const;
  void set_from_uid(::google::protobuf::uint32 value);

  // required uint32 msg_id = 4;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 4;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgReadNotify)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_from_uid();
  void clear_has_from_uid();
  void set_has_msg_id();
  void clear_has_msg_id();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > notify_users_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 from_uid_;
  ::google::protobuf::uint32 msg_id_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgGetMaxIdReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgGetMaxIdReq) */ {
 public:
  MsgGetMaxIdReq();
  virtual ~MsgGetMaxIdReq();

  MsgGetMaxIdReq(const MsgGetMaxIdReq& from);

  inline MsgGetMaxIdReq& operator=(const MsgGetMaxIdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgGetMaxIdReq(MsgGetMaxIdReq&& from) noexcept
    : MsgGetMaxIdReq() {
    *this = ::std::move(from);
  }

  inline MsgGetMaxIdReq& operator=(MsgGetMaxIdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgGetMaxIdReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgGetMaxIdReq* internal_default_instance() {
    return reinterpret_cast<const MsgGetMaxIdReq*>(
               &_MsgGetMaxIdReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MsgGetMaxIdReq* other);
  friend void swap(MsgGetMaxIdReq& a, MsgGetMaxIdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgGetMaxIdReq* New() const final {
    return CreateMaybeMessage<MsgGetMaxIdReq>(NULL);
  }

  MsgGetMaxIdReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgGetMaxIdReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgGetMaxIdReq& from);
  void MergeFrom(const MsgGetMaxIdReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgGetMaxIdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgGetMaxIdReq)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgGetMaxIdRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgGetMaxIdRes) */ {
 public:
  MsgGetMaxIdRes();
  virtual ~MsgGetMaxIdRes();

  MsgGetMaxIdRes(const MsgGetMaxIdRes& from);

  inline MsgGetMaxIdRes& operator=(const MsgGetMaxIdRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgGetMaxIdRes(MsgGetMaxIdRes&& from) noexcept
    : MsgGetMaxIdRes() {
    *this = ::std::move(from);
  }

  inline MsgGetMaxIdRes& operator=(MsgGetMaxIdRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgGetMaxIdRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgGetMaxIdRes* internal_default_instance() {
    return reinterpret_cast<const MsgGetMaxIdRes*>(
               &_MsgGetMaxIdRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MsgGetMaxIdRes* other);
  friend void swap(MsgGetMaxIdRes& a, MsgGetMaxIdRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgGetMaxIdRes* New() const final {
    return CreateMaybeMessage<MsgGetMaxIdRes>(NULL);
  }

  MsgGetMaxIdRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgGetMaxIdRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgGetMaxIdRes& from);
  void MergeFrom(const MsgGetMaxIdRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgGetMaxIdRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required uint32 msg_id = 2;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // optional .PTP.Common.ERR error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgGetMaxIdRes)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_msg_id();
  void clear_has_msg_id();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 msg_id_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgGetByIdsReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgGetByIdsReq) */ {
 public:
  MsgGetByIdsReq();
  virtual ~MsgGetByIdsReq();

  MsgGetByIdsReq(const MsgGetByIdsReq& from);

  inline MsgGetByIdsReq& operator=(const MsgGetByIdsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgGetByIdsReq(MsgGetByIdsReq&& from) noexcept
    : MsgGetByIdsReq() {
    *this = ::std::move(from);
  }

  inline MsgGetByIdsReq& operator=(MsgGetByIdsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgGetByIdsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgGetByIdsReq* internal_default_instance() {
    return reinterpret_cast<const MsgGetByIdsReq*>(
               &_MsgGetByIdsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MsgGetByIdsReq* other);
  friend void swap(MsgGetByIdsReq& a, MsgGetByIdsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgGetByIdsReq* New() const final {
    return CreateMaybeMessage<MsgGetByIdsReq>(NULL);
  }

  MsgGetByIdsReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgGetByIdsReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgGetByIdsReq& from);
  void MergeFrom(const MsgGetByIdsReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgGetByIdsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 msg_ids = 2;
  int msg_ids_size() const;
  void clear_msg_ids();
  static const int kMsgIdsFieldNumber = 2;
  ::google::protobuf::uint32 msg_ids(int index) const;
  void set_msg_ids(int index, ::google::protobuf::uint32 value);
  void add_msg_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      msg_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_msg_ids();

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgGetByIdsReq)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > msg_ids_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgGetByIdsRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Msg.MsgGetByIdsRes) */ {
 public:
  MsgGetByIdsRes();
  virtual ~MsgGetByIdsRes();

  MsgGetByIdsRes(const MsgGetByIdsRes& from);

  inline MsgGetByIdsRes& operator=(const MsgGetByIdsRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgGetByIdsRes(MsgGetByIdsRes&& from) noexcept
    : MsgGetByIdsRes() {
    *this = ::std::move(from);
  }

  inline MsgGetByIdsRes& operator=(MsgGetByIdsRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MsgGetByIdsRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgGetByIdsRes* internal_default_instance() {
    return reinterpret_cast<const MsgGetByIdsRes*>(
               &_MsgGetByIdsRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(MsgGetByIdsRes* other);
  friend void swap(MsgGetByIdsRes& a, MsgGetByIdsRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgGetByIdsRes* New() const final {
    return CreateMaybeMessage<MsgGetByIdsRes>(NULL);
  }

  MsgGetByIdsRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgGetByIdsRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgGetByIdsRes& from);
  void MergeFrom(const MsgGetByIdsRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgGetByIdsRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PTP.Common.MsgInfo msg_list = 2;
  int msg_list_size() const;
  void clear_msg_list();
  static const int kMsgListFieldNumber = 2;
  ::PTP::Common::MsgInfo* mutable_msg_list(int index);
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo >*
      mutable_msg_list();
  const ::PTP::Common::MsgInfo& msg_list(int index) const;
  ::PTP::Common::MsgInfo* add_msg_list();
  const ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo >&
      msg_list() const;

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // optional uint32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional .PTP.Common.ERR error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Msg.MsgGetByIdsRes)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo > msg_list_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eMsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgReq

// required string group_adr = 1;
inline bool MsgReq::has_group_adr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReq::set_has_group_adr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReq::clear_has_group_adr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReq::clear_group_adr() {
  group_adr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_group_adr();
}
inline const ::std::string& MsgReq::group_adr() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReq.group_adr)
  return group_adr_.GetNoArena();
}
inline void MsgReq::set_group_adr(const ::std::string& value) {
  set_has_group_adr();
  group_adr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReq.group_adr)
}
#if LANG_CXX11
inline void MsgReq::set_group_adr(::std::string&& value) {
  set_has_group_adr();
  group_adr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgReq.group_adr)
}
#endif
inline void MsgReq::set_group_adr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_group_adr();
  group_adr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgReq.group_adr)
}
inline void MsgReq::set_group_adr(const char* value, size_t size) {
  set_has_group_adr();
  group_adr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgReq.group_adr)
}
inline ::std::string* MsgReq::mutable_group_adr() {
  set_has_group_adr();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgReq.group_adr)
  return group_adr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReq::release_group_adr() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgReq.group_adr)
  if (!has_group_adr()) {
    return NULL;
  }
  clear_has_group_adr();
  return group_adr_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReq::set_allocated_group_adr(::std::string* group_adr) {
  if (group_adr != NULL) {
    set_has_group_adr();
  } else {
    clear_has_group_adr();
  }
  group_adr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_adr);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgReq.group_adr)
}

// required uint32 sent_at = 3;
inline bool MsgReq::has_sent_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgReq::set_has_sent_at() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgReq::clear_has_sent_at() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgReq::clear_sent_at() {
  sent_at_ = 0u;
  clear_has_sent_at();
}
inline ::google::protobuf::uint32 MsgReq::sent_at() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReq.sent_at)
  return sent_at_;
}
inline void MsgReq::set_sent_at(::google::protobuf::uint32 value) {
  set_has_sent_at();
  sent_at_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReq.sent_at)
}

// required .PTP.Common.MsgType msg_type = 6;
inline bool MsgReq::has_msg_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgReq::set_has_msg_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgReq::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgReq::clear_msg_type() {
  msg_type_ = 1;
  clear_has_msg_type();
}
inline ::PTP::Common::MsgType MsgReq::msg_type() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReq.msg_type)
  return static_cast< ::PTP::Common::MsgType >(msg_type_);
}
inline void MsgReq::set_msg_type(::PTP::Common::MsgType value) {
  assert(::PTP::Common::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReq.msg_type)
}

// optional string msg_data = 7;
inline bool MsgReq::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgReq::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgReq::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgReq::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_data();
}
inline const ::std::string& MsgReq::msg_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReq.msg_data)
  return msg_data_.GetNoArena();
}
inline void MsgReq::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReq.msg_data)
}
#if LANG_CXX11
inline void MsgReq::set_msg_data(::std::string&& value) {
  set_has_msg_data();
  msg_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgReq.msg_data)
}
#endif
inline void MsgReq::set_msg_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgReq.msg_data)
}
inline void MsgReq::set_msg_data(const char* value, size_t size) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgReq.msg_data)
}
inline ::std::string* MsgReq::mutable_msg_data() {
  set_has_msg_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgReq.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReq::release_msg_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgReq.msg_data)
  if (!has_msg_data()) {
    return NULL;
  }
  clear_has_msg_data();
  return msg_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReq::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    set_has_msg_data();
  } else {
    clear_has_msg_data();
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgReq.msg_data)
}

// optional bytes attach_data = 20;
inline bool MsgReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReq.attach_data)
}
#if LANG_CXX11
inline void MsgReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgReq.attach_data)
}
#endif
inline void MsgReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgReq.attach_data)
}
inline void MsgReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgReq.attach_data)
}
inline ::std::string* MsgReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReq.auth_uid)
  return auth_uid_;
}
inline void MsgReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReq.auth_uid)
}

// -------------------------------------------------------------------

// MsgRes

// optional uint32 group_id = 1;
inline bool MsgRes::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRes::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRes::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRes::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 MsgRes::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgRes.group_id)
  return group_id_;
}
inline void MsgRes::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgRes.group_id)
}

// optional uint32 msg_id = 3;
inline bool MsgRes::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgRes::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgRes::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgRes::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 MsgRes::msg_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgRes.msg_id)
  return msg_id_;
}
inline void MsgRes::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgRes.msg_id)
}

// optional uint32 sent_at = 4;
inline bool MsgRes::has_sent_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgRes::set_has_sent_at() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgRes::clear_has_sent_at() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgRes::clear_sent_at() {
  sent_at_ = 0u;
  clear_has_sent_at();
}
inline ::google::protobuf::uint32 MsgRes::sent_at() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgRes.sent_at)
  return sent_at_;
}
inline void MsgRes::set_sent_at(::google::protobuf::uint32 value) {
  set_has_sent_at();
  sent_at_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgRes.sent_at)
}

// optional .PTP.Common.ERR error = 7;
inline bool MsgRes::has_error() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgRes::set_has_error() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR MsgRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void MsgRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgRes.error)
}

// optional bytes attach_data = 20;
inline bool MsgRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgRes.attach_data)
}
#if LANG_CXX11
inline void MsgRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgRes.attach_data)
}
#endif
inline void MsgRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgRes.attach_data)
}
inline void MsgRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgRes.attach_data)
}
inline ::std::string* MsgRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgRes.auth_uid)
  return auth_uid_;
}
inline void MsgRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgRes.auth_uid)
}

// -------------------------------------------------------------------

// MsgNotify

// required .PTP.Common.MsgInfo msg_info = 1;
inline bool MsgNotify::has_msg_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNotify::set_has_msg_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNotify::clear_has_msg_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::PTP::Common::MsgInfo& MsgNotify::_internal_msg_info() const {
  return *msg_info_;
}
inline const ::PTP::Common::MsgInfo& MsgNotify::msg_info() const {
  const ::PTP::Common::MsgInfo* p = msg_info_;
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgNotify.msg_info)
  return p != NULL ? *p : *reinterpret_cast<const ::PTP::Common::MsgInfo*>(
      &::PTP::Common::_MsgInfo_default_instance_);
}
inline ::PTP::Common::MsgInfo* MsgNotify::release_msg_info() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgNotify.msg_info)
  clear_has_msg_info();
  ::PTP::Common::MsgInfo* temp = msg_info_;
  msg_info_ = NULL;
  return temp;
}
inline ::PTP::Common::MsgInfo* MsgNotify::mutable_msg_info() {
  set_has_msg_info();
  if (msg_info_ == NULL) {
    auto* p = CreateMaybeMessage<::PTP::Common::MsgInfo>(GetArenaNoVirtual());
    msg_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgNotify.msg_info)
  return msg_info_;
}
inline void MsgNotify::set_allocated_msg_info(::PTP::Common::MsgInfo* msg_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(msg_info_);
  }
  if (msg_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg_info, submessage_arena);
    }
    set_has_msg_info();
  } else {
    clear_has_msg_info();
  }
  msg_info_ = msg_info;
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgNotify.msg_info)
}

// repeated uint32 notify_users = 2;
inline int MsgNotify::notify_users_size() const {
  return notify_users_.size();
}
inline void MsgNotify::clear_notify_users() {
  notify_users_.Clear();
}
inline ::google::protobuf::uint32 MsgNotify::notify_users(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgNotify.notify_users)
  return notify_users_.Get(index);
}
inline void MsgNotify::set_notify_users(int index, ::google::protobuf::uint32 value) {
  notify_users_.Set(index, value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgNotify.notify_users)
}
inline void MsgNotify::add_notify_users(::google::protobuf::uint32 value) {
  notify_users_.Add(value);
  // @@protoc_insertion_point(field_add:PTP.Msg.MsgNotify.notify_users)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgNotify::notify_users() const {
  // @@protoc_insertion_point(field_list:PTP.Msg.MsgNotify.notify_users)
  return notify_users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgNotify::mutable_notify_users() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Msg.MsgNotify.notify_users)
  return &notify_users_;
}

// optional bytes attach_data = 20;
inline bool MsgNotify::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNotify::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNotify::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNotify::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgNotify::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgNotify.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgNotify::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgNotify.attach_data)
}
#if LANG_CXX11
inline void MsgNotify::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgNotify.attach_data)
}
#endif
inline void MsgNotify::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgNotify.attach_data)
}
inline void MsgNotify::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgNotify.attach_data)
}
inline ::std::string* MsgNotify::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgNotify.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgNotify::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgNotify.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgNotify::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgNotify.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgNotify::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNotify::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNotify::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNotify::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgNotify::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgNotify.auth_uid)
  return auth_uid_;
}
inline void MsgNotify::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgNotify.auth_uid)
}

// -------------------------------------------------------------------

// MsgUnNotify

// repeated uint32 un_notify_users = 1;
inline int MsgUnNotify::un_notify_users_size() const {
  return un_notify_users_.size();
}
inline void MsgUnNotify::clear_un_notify_users() {
  un_notify_users_.Clear();
}
inline ::google::protobuf::uint32 MsgUnNotify::un_notify_users(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgUnNotify.un_notify_users)
  return un_notify_users_.Get(index);
}
inline void MsgUnNotify::set_un_notify_users(int index, ::google::protobuf::uint32 value) {
  un_notify_users_.Set(index, value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgUnNotify.un_notify_users)
}
inline void MsgUnNotify::add_un_notify_users(::google::protobuf::uint32 value) {
  un_notify_users_.Add(value);
  // @@protoc_insertion_point(field_add:PTP.Msg.MsgUnNotify.un_notify_users)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgUnNotify::un_notify_users() const {
  // @@protoc_insertion_point(field_list:PTP.Msg.MsgUnNotify.un_notify_users)
  return un_notify_users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgUnNotify::mutable_un_notify_users() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Msg.MsgUnNotify.un_notify_users)
  return &un_notify_users_;
}

// required uint32 sent_at = 2;
inline bool MsgUnNotify::has_sent_at() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgUnNotify::set_has_sent_at() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgUnNotify::clear_has_sent_at() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgUnNotify::clear_sent_at() {
  sent_at_ = 0u;
  clear_has_sent_at();
}
inline ::google::protobuf::uint32 MsgUnNotify::sent_at() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgUnNotify.sent_at)
  return sent_at_;
}
inline void MsgUnNotify::set_sent_at(::google::protobuf::uint32 value) {
  set_has_sent_at();
  sent_at_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgUnNotify.sent_at)
}

// required uint32 group_id = 3;
inline bool MsgUnNotify::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgUnNotify::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgUnNotify::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgUnNotify::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 MsgUnNotify::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgUnNotify.group_id)
  return group_id_;
}
inline void MsgUnNotify::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgUnNotify.group_id)
}

// required uint32 from_uid = 4;
inline bool MsgUnNotify::has_from_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgUnNotify::set_has_from_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgUnNotify::clear_has_from_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgUnNotify::clear_from_uid() {
  from_uid_ = 0u;
  clear_has_from_uid();
}
inline ::google::protobuf::uint32 MsgUnNotify::from_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgUnNotify.from_uid)
  return from_uid_;
}
inline void MsgUnNotify::set_from_uid(::google::protobuf::uint32 value) {
  set_has_from_uid();
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgUnNotify.from_uid)
}

// -------------------------------------------------------------------

// MsgReadAckReq

// required uint32 group_id = 1;
inline bool MsgReadAckReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgReadAckReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgReadAckReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgReadAckReq::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 MsgReadAckReq::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadAckReq.group_id)
  return group_id_;
}
inline void MsgReadAckReq::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadAckReq.group_id)
}

// required uint32 msg_id = 3;
inline bool MsgReadAckReq::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgReadAckReq::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgReadAckReq::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgReadAckReq::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 MsgReadAckReq::msg_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadAckReq.msg_id)
  return msg_id_;
}
inline void MsgReadAckReq::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadAckReq.msg_id)
}

// optional bytes attach_data = 20;
inline bool MsgReadAckReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReadAckReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReadAckReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReadAckReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgReadAckReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadAckReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgReadAckReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadAckReq.attach_data)
}
#if LANG_CXX11
inline void MsgReadAckReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgReadAckReq.attach_data)
}
#endif
inline void MsgReadAckReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgReadAckReq.attach_data)
}
inline void MsgReadAckReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgReadAckReq.attach_data)
}
inline ::std::string* MsgReadAckReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgReadAckReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReadAckReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgReadAckReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReadAckReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgReadAckReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgReadAckReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgReadAckReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgReadAckReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgReadAckReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgReadAckReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadAckReq.auth_uid)
  return auth_uid_;
}
inline void MsgReadAckReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadAckReq.auth_uid)
}

// -------------------------------------------------------------------

// MsgReadNotify

// required uint32 group_id = 1;
inline bool MsgReadNotify::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgReadNotify::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgReadNotify::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgReadNotify::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 MsgReadNotify::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadNotify.group_id)
  return group_id_;
}
inline void MsgReadNotify::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadNotify.group_id)
}

// required uint32 from_uid = 2;
inline bool MsgReadNotify::has_from_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgReadNotify::set_has_from_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgReadNotify::clear_has_from_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgReadNotify::clear_from_uid() {
  from_uid_ = 0u;
  clear_has_from_uid();
}
inline ::google::protobuf::uint32 MsgReadNotify::from_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadNotify.from_uid)
  return from_uid_;
}
inline void MsgReadNotify::set_from_uid(::google::protobuf::uint32 value) {
  set_has_from_uid();
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadNotify.from_uid)
}

// repeated uint32 notify_users = 3;
inline int MsgReadNotify::notify_users_size() const {
  return notify_users_.size();
}
inline void MsgReadNotify::clear_notify_users() {
  notify_users_.Clear();
}
inline ::google::protobuf::uint32 MsgReadNotify::notify_users(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadNotify.notify_users)
  return notify_users_.Get(index);
}
inline void MsgReadNotify::set_notify_users(int index, ::google::protobuf::uint32 value) {
  notify_users_.Set(index, value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadNotify.notify_users)
}
inline void MsgReadNotify::add_notify_users(::google::protobuf::uint32 value) {
  notify_users_.Add(value);
  // @@protoc_insertion_point(field_add:PTP.Msg.MsgReadNotify.notify_users)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgReadNotify::notify_users() const {
  // @@protoc_insertion_point(field_list:PTP.Msg.MsgReadNotify.notify_users)
  return notify_users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgReadNotify::mutable_notify_users() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Msg.MsgReadNotify.notify_users)
  return &notify_users_;
}

// required uint32 msg_id = 4;
inline bool MsgReadNotify::has_msg_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgReadNotify::set_has_msg_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgReadNotify::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgReadNotify::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 MsgReadNotify::msg_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadNotify.msg_id)
  return msg_id_;
}
inline void MsgReadNotify::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadNotify.msg_id)
}

// optional bytes attach_data = 20;
inline bool MsgReadNotify::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReadNotify::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReadNotify::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReadNotify::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgReadNotify::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadNotify.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgReadNotify::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadNotify.attach_data)
}
#if LANG_CXX11
inline void MsgReadNotify::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgReadNotify.attach_data)
}
#endif
inline void MsgReadNotify::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgReadNotify.attach_data)
}
inline void MsgReadNotify::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgReadNotify.attach_data)
}
inline ::std::string* MsgReadNotify::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgReadNotify.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReadNotify::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgReadNotify.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReadNotify::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgReadNotify.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgReadNotify::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgReadNotify::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgReadNotify::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgReadNotify::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgReadNotify::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgReadNotify.auth_uid)
  return auth_uid_;
}
inline void MsgReadNotify::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgReadNotify.auth_uid)
}

// -------------------------------------------------------------------

// MsgGetMaxIdReq

// required uint32 group_id = 1;
inline bool MsgGetMaxIdReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGetMaxIdReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGetMaxIdReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGetMaxIdReq::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 MsgGetMaxIdReq::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetMaxIdReq.group_id)
  return group_id_;
}
inline void MsgGetMaxIdReq::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetMaxIdReq.group_id)
}

// optional bytes attach_data = 20;
inline bool MsgGetMaxIdReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGetMaxIdReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGetMaxIdReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGetMaxIdReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgGetMaxIdReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetMaxIdReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgGetMaxIdReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetMaxIdReq.attach_data)
}
#if LANG_CXX11
inline void MsgGetMaxIdReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgGetMaxIdReq.attach_data)
}
#endif
inline void MsgGetMaxIdReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgGetMaxIdReq.attach_data)
}
inline void MsgGetMaxIdReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgGetMaxIdReq.attach_data)
}
inline ::std::string* MsgGetMaxIdReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgGetMaxIdReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetMaxIdReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgGetMaxIdReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetMaxIdReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgGetMaxIdReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgGetMaxIdReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgGetMaxIdReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgGetMaxIdReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgGetMaxIdReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgGetMaxIdReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetMaxIdReq.auth_uid)
  return auth_uid_;
}
inline void MsgGetMaxIdReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetMaxIdReq.auth_uid)
}

// -------------------------------------------------------------------

// MsgGetMaxIdRes

// required uint32 group_id = 1;
inline bool MsgGetMaxIdRes::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGetMaxIdRes::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGetMaxIdRes::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGetMaxIdRes::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 MsgGetMaxIdRes::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetMaxIdRes.group_id)
  return group_id_;
}
inline void MsgGetMaxIdRes::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetMaxIdRes.group_id)
}

// required uint32 msg_id = 2;
inline bool MsgGetMaxIdRes::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgGetMaxIdRes::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgGetMaxIdRes::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgGetMaxIdRes::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 MsgGetMaxIdRes::msg_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetMaxIdRes.msg_id)
  return msg_id_;
}
inline void MsgGetMaxIdRes::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetMaxIdRes.msg_id)
}

// optional .PTP.Common.ERR error = 3;
inline bool MsgGetMaxIdRes::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgGetMaxIdRes::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgGetMaxIdRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgGetMaxIdRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR MsgGetMaxIdRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetMaxIdRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void MsgGetMaxIdRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetMaxIdRes.error)
}

// optional bytes attach_data = 20;
inline bool MsgGetMaxIdRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGetMaxIdRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGetMaxIdRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGetMaxIdRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgGetMaxIdRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetMaxIdRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgGetMaxIdRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetMaxIdRes.attach_data)
}
#if LANG_CXX11
inline void MsgGetMaxIdRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgGetMaxIdRes.attach_data)
}
#endif
inline void MsgGetMaxIdRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgGetMaxIdRes.attach_data)
}
inline void MsgGetMaxIdRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgGetMaxIdRes.attach_data)
}
inline ::std::string* MsgGetMaxIdRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgGetMaxIdRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetMaxIdRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgGetMaxIdRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetMaxIdRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgGetMaxIdRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgGetMaxIdRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgGetMaxIdRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgGetMaxIdRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgGetMaxIdRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgGetMaxIdRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetMaxIdRes.auth_uid)
  return auth_uid_;
}
inline void MsgGetMaxIdRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetMaxIdRes.auth_uid)
}

// -------------------------------------------------------------------

// MsgGetByIdsReq

// required uint32 group_id = 1;
inline bool MsgGetByIdsReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGetByIdsReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGetByIdsReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGetByIdsReq::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 MsgGetByIdsReq::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsReq.group_id)
  return group_id_;
}
inline void MsgGetByIdsReq::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetByIdsReq.group_id)
}

// repeated uint32 msg_ids = 2;
inline int MsgGetByIdsReq::msg_ids_size() const {
  return msg_ids_.size();
}
inline void MsgGetByIdsReq::clear_msg_ids() {
  msg_ids_.Clear();
}
inline ::google::protobuf::uint32 MsgGetByIdsReq::msg_ids(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsReq.msg_ids)
  return msg_ids_.Get(index);
}
inline void MsgGetByIdsReq::set_msg_ids(int index, ::google::protobuf::uint32 value) {
  msg_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetByIdsReq.msg_ids)
}
inline void MsgGetByIdsReq::add_msg_ids(::google::protobuf::uint32 value) {
  msg_ids_.Add(value);
  // @@protoc_insertion_point(field_add:PTP.Msg.MsgGetByIdsReq.msg_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgGetByIdsReq::msg_ids() const {
  // @@protoc_insertion_point(field_list:PTP.Msg.MsgGetByIdsReq.msg_ids)
  return msg_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgGetByIdsReq::mutable_msg_ids() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Msg.MsgGetByIdsReq.msg_ids)
  return &msg_ids_;
}

// optional bytes attach_data = 20;
inline bool MsgGetByIdsReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGetByIdsReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGetByIdsReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGetByIdsReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgGetByIdsReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgGetByIdsReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetByIdsReq.attach_data)
}
#if LANG_CXX11
inline void MsgGetByIdsReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgGetByIdsReq.attach_data)
}
#endif
inline void MsgGetByIdsReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgGetByIdsReq.attach_data)
}
inline void MsgGetByIdsReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgGetByIdsReq.attach_data)
}
inline ::std::string* MsgGetByIdsReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgGetByIdsReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetByIdsReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgGetByIdsReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetByIdsReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgGetByIdsReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgGetByIdsReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgGetByIdsReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgGetByIdsReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgGetByIdsReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgGetByIdsReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsReq.auth_uid)
  return auth_uid_;
}
inline void MsgGetByIdsReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetByIdsReq.auth_uid)
}

// -------------------------------------------------------------------

// MsgGetByIdsRes

// optional uint32 group_id = 1;
inline bool MsgGetByIdsRes::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGetByIdsRes::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGetByIdsRes::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGetByIdsRes::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 MsgGetByIdsRes::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsRes.group_id)
  return group_id_;
}
inline void MsgGetByIdsRes::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetByIdsRes.group_id)
}

// repeated .PTP.Common.MsgInfo msg_list = 2;
inline int MsgGetByIdsRes::msg_list_size() const {
  return msg_list_.size();
}
inline ::PTP::Common::MsgInfo* MsgGetByIdsRes::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgGetByIdsRes.msg_list)
  return msg_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo >*
MsgGetByIdsRes::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Msg.MsgGetByIdsRes.msg_list)
  return &msg_list_;
}
inline const ::PTP::Common::MsgInfo& MsgGetByIdsRes::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsRes.msg_list)
  return msg_list_.Get(index);
}
inline ::PTP::Common::MsgInfo* MsgGetByIdsRes::add_msg_list() {
  // @@protoc_insertion_point(field_add:PTP.Msg.MsgGetByIdsRes.msg_list)
  return msg_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo >&
MsgGetByIdsRes::msg_list() const {
  // @@protoc_insertion_point(field_list:PTP.Msg.MsgGetByIdsRes.msg_list)
  return msg_list_;
}

// optional .PTP.Common.ERR error = 3;
inline bool MsgGetByIdsRes::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgGetByIdsRes::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgGetByIdsRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgGetByIdsRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR MsgGetByIdsRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void MsgGetByIdsRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetByIdsRes.error)
}

// optional bytes attach_data = 20;
inline bool MsgGetByIdsRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGetByIdsRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGetByIdsRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGetByIdsRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& MsgGetByIdsRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void MsgGetByIdsRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetByIdsRes.attach_data)
}
#if LANG_CXX11
inline void MsgGetByIdsRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Msg.MsgGetByIdsRes.attach_data)
}
#endif
inline void MsgGetByIdsRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Msg.MsgGetByIdsRes.attach_data)
}
inline void MsgGetByIdsRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Msg.MsgGetByIdsRes.attach_data)
}
inline ::std::string* MsgGetByIdsRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Msg.MsgGetByIdsRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetByIdsRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Msg.MsgGetByIdsRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetByIdsRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Msg.MsgGetByIdsRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool MsgGetByIdsRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgGetByIdsRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgGetByIdsRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgGetByIdsRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 MsgGetByIdsRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Msg.MsgGetByIdsRes.auth_uid)
  return auth_uid_;
}
inline void MsgGetByIdsRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Msg.MsgGetByIdsRes.auth_uid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Msg
}  // namespace PTP

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_PTP_2eMsg_2eproto
