// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Other.proto

#include "IM.Other.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace IM {
namespace Other {
class IMHeartBeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMHeartBeat>
      _instance;
} _IMHeartBeat_default_instance_;
class IMRandomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMRandomReq>
      _instance;
} _IMRandomReq_default_instance_;
class IMRandomResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMRandomRes>
      _instance;
} _IMRandomRes_default_instance_;
class IMOtherSystemErrorResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMOtherSystemErrorRes>
      _instance;
} _IMOtherSystemErrorRes_default_instance_;
}  // namespace Other
}  // namespace IM
namespace protobuf_IM_2eOther_2eproto {
static void InitDefaultsIMHeartBeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IM::Other::_IMHeartBeat_default_instance_;
    new (ptr) ::IM::Other::IMHeartBeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Other::IMHeartBeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IMHeartBeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIMHeartBeat}, {}};

static void InitDefaultsIMRandomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IM::Other::_IMRandomReq_default_instance_;
    new (ptr) ::IM::Other::IMRandomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Other::IMRandomReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IMRandomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIMRandomReq}, {}};

static void InitDefaultsIMRandomRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IM::Other::_IMRandomRes_default_instance_;
    new (ptr) ::IM::Other::IMRandomRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Other::IMRandomRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IMRandomRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIMRandomRes}, {}};

static void InitDefaultsIMOtherSystemErrorRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IM::Other::_IMOtherSystemErrorRes_default_instance_;
    new (ptr) ::IM::Other::IMOtherSystemErrorRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Other::IMOtherSystemErrorRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IMOtherSystemErrorRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIMOtherSystemErrorRes}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_IMHeartBeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IMRandomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IMRandomRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IMOtherSystemErrorRes.base);
}

}  // namespace protobuf_IM_2eOther_2eproto
namespace IM {
namespace Other {

// ===================================================================

void IMHeartBeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMHeartBeat::IMHeartBeat()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IM_2eOther_2eproto::scc_info_IMHeartBeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Other.IMHeartBeat)
}
IMHeartBeat::IMHeartBeat(const IMHeartBeat& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IM.Other.IMHeartBeat)
}

void IMHeartBeat::SharedCtor() {
}

IMHeartBeat::~IMHeartBeat() {
  // @@protoc_insertion_point(destructor:IM.Other.IMHeartBeat)
  SharedDtor();
}

void IMHeartBeat::SharedDtor() {
}

void IMHeartBeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IMHeartBeat& IMHeartBeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IM_2eOther_2eproto::scc_info_IMHeartBeat.base);
  return *internal_default_instance();
}


void IMHeartBeat::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Other.IMHeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IMHeartBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:IM.Other.IMHeartBeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Other.IMHeartBeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Other.IMHeartBeat)
  return false;
#undef DO_
}

void IMHeartBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Other.IMHeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:IM.Other.IMHeartBeat)
}

size_t IMHeartBeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Other.IMHeartBeat)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMHeartBeat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMHeartBeat*>(&from));
}

void IMHeartBeat::MergeFrom(const IMHeartBeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Other.IMHeartBeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IMHeartBeat::CopyFrom(const IMHeartBeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Other.IMHeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMHeartBeat::IsInitialized() const {
  return true;
}

void IMHeartBeat::Swap(IMHeartBeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMHeartBeat::InternalSwap(IMHeartBeat* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string IMHeartBeat::GetTypeName() const {
  return "IM.Other.IMHeartBeat";
}


// ===================================================================

void IMRandomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMRandomReq::IMRandomReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IM_2eOther_2eproto::scc_info_IMRandomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Other.IMRandomReq)
}
IMRandomReq::IMRandomReq(const IMRandomReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IM.Other.IMRandomReq)
}

void IMRandomReq::SharedCtor() {
}

IMRandomReq::~IMRandomReq() {
  // @@protoc_insertion_point(destructor:IM.Other.IMRandomReq)
  SharedDtor();
}

void IMRandomReq::SharedDtor() {
}

void IMRandomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IMRandomReq& IMRandomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IM_2eOther_2eproto::scc_info_IMRandomReq.base);
  return *internal_default_instance();
}


void IMRandomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Other.IMRandomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IMRandomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:IM.Other.IMRandomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Other.IMRandomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Other.IMRandomReq)
  return false;
#undef DO_
}

void IMRandomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Other.IMRandomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:IM.Other.IMRandomReq)
}

size_t IMRandomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Other.IMRandomReq)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMRandomReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMRandomReq*>(&from));
}

void IMRandomReq::MergeFrom(const IMRandomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Other.IMRandomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IMRandomReq::CopyFrom(const IMRandomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Other.IMRandomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMRandomReq::IsInitialized() const {
  return true;
}

void IMRandomReq::Swap(IMRandomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMRandomReq::InternalSwap(IMRandomReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string IMRandomReq::GetTypeName() const {
  return "IM.Other.IMRandomReq";
}


// ===================================================================

void IMRandomRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMRandomRes::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMRandomRes::IMRandomRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IM_2eOther_2eproto::scc_info_IMRandomRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Other.IMRandomRes)
}
IMRandomRes::IMRandomRes(const IMRandomRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:IM.Other.IMRandomRes)
}

void IMRandomRes::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IMRandomRes::~IMRandomRes() {
  // @@protoc_insertion_point(destructor:IM.Other.IMRandomRes)
  SharedDtor();
}

void IMRandomRes::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMRandomRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IMRandomRes& IMRandomRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IM_2eOther_2eproto::scc_info_IMRandomRes.base);
  return *internal_default_instance();
}


void IMRandomRes::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Other.IMRandomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IMRandomRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:IM.Other.IMRandomRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Other.IMRandomRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Other.IMRandomRes)
  return false;
#undef DO_
}

void IMRandomRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Other.IMRandomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:IM.Other.IMRandomRes)
}

size_t IMRandomRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Other.IMRandomRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required string value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMRandomRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMRandomRes*>(&from));
}

void IMRandomRes::MergeFrom(const IMRandomRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Other.IMRandomRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_has_value();
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void IMRandomRes::CopyFrom(const IMRandomRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Other.IMRandomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMRandomRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void IMRandomRes::Swap(IMRandomRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMRandomRes::InternalSwap(IMRandomRes* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string IMRandomRes::GetTypeName() const {
  return "IM.Other.IMRandomRes";
}


// ===================================================================

void IMOtherSystemErrorRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMOtherSystemErrorRes::kServerTimeFieldNumber;
const int IMOtherSystemErrorRes::kResultCodeFieldNumber;
const int IMOtherSystemErrorRes::kResultStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMOtherSystemErrorRes::IMOtherSystemErrorRes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IM_2eOther_2eproto::scc_info_IMOtherSystemErrorRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Other.IMOtherSystemErrorRes)
}
IMOtherSystemErrorRes::IMOtherSystemErrorRes(const IMOtherSystemErrorRes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result_string()) {
    result_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_string_);
  }
  ::memcpy(&server_time_, &from.server_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_code_) -
    reinterpret_cast<char*>(&server_time_)) + sizeof(result_code_));
  // @@protoc_insertion_point(copy_constructor:IM.Other.IMOtherSystemErrorRes)
}

void IMOtherSystemErrorRes::SharedCtor() {
  result_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_time_ = 0u;
  result_code_ = -4;
}

IMOtherSystemErrorRes::~IMOtherSystemErrorRes() {
  // @@protoc_insertion_point(destructor:IM.Other.IMOtherSystemErrorRes)
  SharedDtor();
}

void IMOtherSystemErrorRes::SharedDtor() {
  result_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMOtherSystemErrorRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IMOtherSystemErrorRes& IMOtherSystemErrorRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IM_2eOther_2eproto::scc_info_IMOtherSystemErrorRes.base);
  return *internal_default_instance();
}


void IMOtherSystemErrorRes::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Other.IMOtherSystemErrorRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    result_string_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    server_time_ = 0u;
    result_code_ = -4;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IMOtherSystemErrorRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:IM.Other.IMOtherSystemErrorRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 server_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_server_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .IM.BaseDefine.ResultType result_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::IM::BaseDefine::ResultType_IsValid(value)) {
            set_result_code(static_cast< ::IM::BaseDefine::ResultType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string result_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Other.IMOtherSystemErrorRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Other.IMOtherSystemErrorRes)
  return false;
#undef DO_
}

void IMOtherSystemErrorRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Other.IMOtherSystemErrorRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 server_time = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_time(), output);
  }

  // required .IM.BaseDefine.ResultType result_code = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result_code(), output);
  }

  // optional string result_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->result_string(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:IM.Other.IMOtherSystemErrorRes)
}

size_t IMOtherSystemErrorRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:IM.Other.IMOtherSystemErrorRes)
  size_t total_size = 0;

  if (has_server_time()) {
    // required uint32 server_time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_time());
  }

  if (has_result_code()) {
    // required .IM.BaseDefine.ResultType result_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result_code());
  }

  return total_size;
}
size_t IMOtherSystemErrorRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Other.IMOtherSystemErrorRes)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 server_time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_time());

    // required .IM.BaseDefine.ResultType result_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result_code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string result_string = 3;
  if (has_result_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result_string());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMOtherSystemErrorRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMOtherSystemErrorRes*>(&from));
}

void IMOtherSystemErrorRes::MergeFrom(const IMOtherSystemErrorRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Other.IMOtherSystemErrorRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_result_string();
      result_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      server_time_ = from.server_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_code_ = from.result_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IMOtherSystemErrorRes::CopyFrom(const IMOtherSystemErrorRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Other.IMOtherSystemErrorRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMOtherSystemErrorRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void IMOtherSystemErrorRes::Swap(IMOtherSystemErrorRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMOtherSystemErrorRes::InternalSwap(IMOtherSystemErrorRes* other) {
  using std::swap;
  result_string_.Swap(&other->result_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(server_time_, other->server_time_);
  swap(result_code_, other->result_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string IMOtherSystemErrorRes::GetTypeName() const {
  return "IM.Other.IMOtherSystemErrorRes";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Other
}  // namespace IM
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IM::Other::IMHeartBeat* Arena::CreateMaybeMessage< ::IM::Other::IMHeartBeat >(Arena* arena) {
  return Arena::CreateInternal< ::IM::Other::IMHeartBeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IM::Other::IMRandomReq* Arena::CreateMaybeMessage< ::IM::Other::IMRandomReq >(Arena* arena) {
  return Arena::CreateInternal< ::IM::Other::IMRandomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IM::Other::IMRandomRes* Arena::CreateMaybeMessage< ::IM::Other::IMRandomRes >(Arena* arena) {
  return Arena::CreateInternal< ::IM::Other::IMRandomRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IM::Other::IMOtherSystemErrorRes* Arena::CreateMaybeMessage< ::IM::Other::IMOtherSystemErrorRes >(Arena* arena) {
  return Arena::CreateInternal< ::IM::Other::IMOtherSystemErrorRes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
