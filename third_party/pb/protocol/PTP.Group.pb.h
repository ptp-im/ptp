// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PTP.Group.proto

#ifndef PROTOBUF_INCLUDED_PTP_2eGroup_2eproto
#define PROTOBUF_INCLUDED_PTP_2eGroup_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "PTP.Common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_PTP_2eGroup_2eproto 

namespace protobuf_PTP_2eGroup_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[19];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_PTP_2eGroup_2eproto
namespace PTP {
namespace Group {
class GroupChangeMemberNotify;
class GroupChangeMemberNotifyDefaultTypeInternal;
extern GroupChangeMemberNotifyDefaultTypeInternal _GroupChangeMemberNotify_default_instance_;
class GroupChangeMemberReq;
class GroupChangeMemberReqDefaultTypeInternal;
extern GroupChangeMemberReqDefaultTypeInternal _GroupChangeMemberReq_default_instance_;
class GroupChangeMemberRes;
class GroupChangeMemberResDefaultTypeInternal;
extern GroupChangeMemberResDefaultTypeInternal _GroupChangeMemberRes_default_instance_;
class GroupCreateReq;
class GroupCreateReqDefaultTypeInternal;
extern GroupCreateReqDefaultTypeInternal _GroupCreateReq_default_instance_;
class GroupCreateRes;
class GroupCreateResDefaultTypeInternal;
extern GroupCreateResDefaultTypeInternal _GroupCreateRes_default_instance_;
class GroupGetListReq;
class GroupGetListReqDefaultTypeInternal;
extern GroupGetListReqDefaultTypeInternal _GroupGetListReq_default_instance_;
class GroupGetListRes;
class GroupGetListResDefaultTypeInternal;
extern GroupGetListResDefaultTypeInternal _GroupGetListRes_default_instance_;
class GroupGetMembersListReq;
class GroupGetMembersListReqDefaultTypeInternal;
extern GroupGetMembersListReqDefaultTypeInternal _GroupGetMembersListReq_default_instance_;
class GroupGetMembersListRes;
class GroupGetMembersListResDefaultTypeInternal;
extern GroupGetMembersListResDefaultTypeInternal _GroupGetMembersListRes_default_instance_;
class GroupModifyNotify;
class GroupModifyNotifyDefaultTypeInternal;
extern GroupModifyNotifyDefaultTypeInternal _GroupModifyNotify_default_instance_;
class GroupModifyReq;
class GroupModifyReqDefaultTypeInternal;
extern GroupModifyReqDefaultTypeInternal _GroupModifyReq_default_instance_;
class GroupModifyRes;
class GroupModifyResDefaultTypeInternal;
extern GroupModifyResDefaultTypeInternal _GroupModifyRes_default_instance_;
class GroupPreCreateReq;
class GroupPreCreateReqDefaultTypeInternal;
extern GroupPreCreateReqDefaultTypeInternal _GroupPreCreateReq_default_instance_;
class GroupPreCreateRes;
class GroupPreCreateResDefaultTypeInternal;
extern GroupPreCreateResDefaultTypeInternal _GroupPreCreateRes_default_instance_;
class GroupRemoveSessionNotify;
class GroupRemoveSessionNotifyDefaultTypeInternal;
extern GroupRemoveSessionNotifyDefaultTypeInternal _GroupRemoveSessionNotify_default_instance_;
class GroupRemoveSessionReq;
class GroupRemoveSessionReqDefaultTypeInternal;
extern GroupRemoveSessionReqDefaultTypeInternal _GroupRemoveSessionReq_default_instance_;
class GroupRemoveSessionRes;
class GroupRemoveSessionResDefaultTypeInternal;
extern GroupRemoveSessionResDefaultTypeInternal _GroupRemoveSessionRes_default_instance_;
class GroupUnreadMsgReq;
class GroupUnreadMsgReqDefaultTypeInternal;
extern GroupUnreadMsgReqDefaultTypeInternal _GroupUnreadMsgReq_default_instance_;
class GroupUnreadMsgRes;
class GroupUnreadMsgResDefaultTypeInternal;
extern GroupUnreadMsgResDefaultTypeInternal _GroupUnreadMsgRes_default_instance_;
}  // namespace Group
}  // namespace PTP
namespace google {
namespace protobuf {
template<> ::PTP::Group::GroupChangeMemberNotify* Arena::CreateMaybeMessage<::PTP::Group::GroupChangeMemberNotify>(Arena*);
template<> ::PTP::Group::GroupChangeMemberReq* Arena::CreateMaybeMessage<::PTP::Group::GroupChangeMemberReq>(Arena*);
template<> ::PTP::Group::GroupChangeMemberRes* Arena::CreateMaybeMessage<::PTP::Group::GroupChangeMemberRes>(Arena*);
template<> ::PTP::Group::GroupCreateReq* Arena::CreateMaybeMessage<::PTP::Group::GroupCreateReq>(Arena*);
template<> ::PTP::Group::GroupCreateRes* Arena::CreateMaybeMessage<::PTP::Group::GroupCreateRes>(Arena*);
template<> ::PTP::Group::GroupGetListReq* Arena::CreateMaybeMessage<::PTP::Group::GroupGetListReq>(Arena*);
template<> ::PTP::Group::GroupGetListRes* Arena::CreateMaybeMessage<::PTP::Group::GroupGetListRes>(Arena*);
template<> ::PTP::Group::GroupGetMembersListReq* Arena::CreateMaybeMessage<::PTP::Group::GroupGetMembersListReq>(Arena*);
template<> ::PTP::Group::GroupGetMembersListRes* Arena::CreateMaybeMessage<::PTP::Group::GroupGetMembersListRes>(Arena*);
template<> ::PTP::Group::GroupModifyNotify* Arena::CreateMaybeMessage<::PTP::Group::GroupModifyNotify>(Arena*);
template<> ::PTP::Group::GroupModifyReq* Arena::CreateMaybeMessage<::PTP::Group::GroupModifyReq>(Arena*);
template<> ::PTP::Group::GroupModifyRes* Arena::CreateMaybeMessage<::PTP::Group::GroupModifyRes>(Arena*);
template<> ::PTP::Group::GroupPreCreateReq* Arena::CreateMaybeMessage<::PTP::Group::GroupPreCreateReq>(Arena*);
template<> ::PTP::Group::GroupPreCreateRes* Arena::CreateMaybeMessage<::PTP::Group::GroupPreCreateRes>(Arena*);
template<> ::PTP::Group::GroupRemoveSessionNotify* Arena::CreateMaybeMessage<::PTP::Group::GroupRemoveSessionNotify>(Arena*);
template<> ::PTP::Group::GroupRemoveSessionReq* Arena::CreateMaybeMessage<::PTP::Group::GroupRemoveSessionReq>(Arena*);
template<> ::PTP::Group::GroupRemoveSessionRes* Arena::CreateMaybeMessage<::PTP::Group::GroupRemoveSessionRes>(Arena*);
template<> ::PTP::Group::GroupUnreadMsgReq* Arena::CreateMaybeMessage<::PTP::Group::GroupUnreadMsgReq>(Arena*);
template<> ::PTP::Group::GroupUnreadMsgRes* Arena::CreateMaybeMessage<::PTP::Group::GroupUnreadMsgRes>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace PTP {
namespace Group {

// ===================================================================

class GroupPreCreateReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupPreCreateReq) */ {
 public:
  GroupPreCreateReq();
  virtual ~GroupPreCreateReq();

  GroupPreCreateReq(const GroupPreCreateReq& from);

  inline GroupPreCreateReq& operator=(const GroupPreCreateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupPreCreateReq(GroupPreCreateReq&& from) noexcept
    : GroupPreCreateReq() {
    *this = ::std::move(from);
  }

  inline GroupPreCreateReq& operator=(GroupPreCreateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupPreCreateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupPreCreateReq* internal_default_instance() {
    return reinterpret_cast<const GroupPreCreateReq*>(
               &_GroupPreCreateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GroupPreCreateReq* other);
  friend void swap(GroupPreCreateReq& a, GroupPreCreateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupPreCreateReq* New() const final {
    return CreateMaybeMessage<GroupPreCreateReq>(NULL);
  }

  GroupPreCreateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupPreCreateReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupPreCreateReq& from);
  void MergeFrom(const GroupPreCreateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupPreCreateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 members = 7;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 7;
  ::google::protobuf::uint32 members(int index) const;
  void set_members(int index, ::google::protobuf::uint32 value);
  void add_members(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_members();

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // required .PTP.Common.GroupType group_type = 1;
  bool has_group_type() const;
  void clear_group_type();
  static const int kGroupTypeFieldNumber = 1;
  ::PTP::Common::GroupType group_type() const;
  void set_group_type(::PTP::Common::GroupType value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupPreCreateReq)
 private:
  void set_has_group_type();
  void clear_has_group_type();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > members_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 auth_uid_;
  int group_type_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupPreCreateRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupPreCreateRes) */ {
 public:
  GroupPreCreateRes();
  virtual ~GroupPreCreateRes();

  GroupPreCreateRes(const GroupPreCreateRes& from);

  inline GroupPreCreateRes& operator=(const GroupPreCreateRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupPreCreateRes(GroupPreCreateRes&& from) noexcept
    : GroupPreCreateRes() {
    *this = ::std::move(from);
  }

  inline GroupPreCreateRes& operator=(GroupPreCreateRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupPreCreateRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupPreCreateRes* internal_default_instance() {
    return reinterpret_cast<const GroupPreCreateRes*>(
               &_GroupPreCreateRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GroupPreCreateRes* other);
  friend void swap(GroupPreCreateRes& a, GroupPreCreateRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupPreCreateRes* New() const final {
    return CreateMaybeMessage<GroupPreCreateRes>(NULL);
  }

  GroupPreCreateRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupPreCreateRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupPreCreateRes& from);
  void MergeFrom(const GroupPreCreateRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupPreCreateRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string group_adr = 1;
  bool has_group_adr() const;
  void clear_group_adr();
  static const int kGroupAdrFieldNumber = 1;
  const ::std::string& group_adr() const;
  void set_group_adr(const ::std::string& value);
  #if LANG_CXX11
  void set_group_adr(::std::string&& value);
  #endif
  void set_group_adr(const char* value);
  void set_group_adr(const char* value, size_t size);
  ::std::string* mutable_group_adr();
  ::std::string* release_group_adr();
  void set_allocated_group_adr(::std::string* group_adr);

  // optional string captcha = 4;
  bool has_captcha() const;
  void clear_captcha();
  static const int kCaptchaFieldNumber = 4;
  const ::std::string& captcha() const;
  void set_captcha(const ::std::string& value);
  #if LANG_CXX11
  void set_captcha(::std::string&& value);
  #endif
  void set_captcha(const char* value);
  void set_captcha(const char* value, size_t size);
  ::std::string* mutable_captcha();
  ::std::string* release_captcha();
  void set_allocated_captcha(::std::string* captcha);

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_idx = 2;
  bool has_group_idx() const;
  void clear_group_idx();
  static const int kGroupIdxFieldNumber = 2;
  ::google::protobuf::uint32 group_idx() const;
  void set_group_idx(::google::protobuf::uint32 value);

  // required .PTP.Common.ERR error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupPreCreateRes)
 private:
  void set_has_group_adr();
  void clear_has_group_adr();
  void set_has_group_idx();
  void clear_has_group_idx();
  void set_has_error();
  void clear_has_error();
  void set_has_captcha();
  void clear_has_captcha();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr group_adr_;
  ::google::protobuf::internal::ArenaStringPtr captcha_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_idx_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupCreateReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupCreateReq) */ {
 public:
  GroupCreateReq();
  virtual ~GroupCreateReq();

  GroupCreateReq(const GroupCreateReq& from);

  inline GroupCreateReq& operator=(const GroupCreateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupCreateReq(GroupCreateReq&& from) noexcept
    : GroupCreateReq() {
    *this = ::std::move(from);
  }

  inline GroupCreateReq& operator=(GroupCreateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupCreateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupCreateReq* internal_default_instance() {
    return reinterpret_cast<const GroupCreateReq*>(
               &_GroupCreateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GroupCreateReq* other);
  friend void swap(GroupCreateReq& a, GroupCreateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupCreateReq* New() const final {
    return CreateMaybeMessage<GroupCreateReq>(NULL);
  }

  GroupCreateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupCreateReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupCreateReq& from);
  void MergeFrom(const GroupCreateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupCreateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 members = 7;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 7;
  ::google::protobuf::uint32 members(int index) const;
  void set_members(int index, ::google::protobuf::uint32 value);
  void add_members(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_members();

  // required bytes sign = 2;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 2;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const void* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // required string captcha = 3;
  bool has_captcha() const;
  void clear_captcha();
  static const int kCaptchaFieldNumber = 3;
  const ::std::string& captcha() const;
  void set_captcha(const ::std::string& value);
  #if LANG_CXX11
  void set_captcha(::std::string&& value);
  #endif
  void set_captcha(const char* value);
  void set_captcha(const char* value, size_t size);
  ::std::string* mutable_captcha();
  ::std::string* release_captcha();
  void set_allocated_captcha(::std::string* captcha);

  // optional string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string avatar = 6;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 6;
  const ::std::string& avatar() const;
  void set_avatar(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar(::std::string&& value);
  #endif
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  ::std::string* mutable_avatar();
  ::std::string* release_avatar();
  void set_allocated_avatar(::std::string* avatar);

  // optional string about = 8;
  bool has_about() const;
  void clear_about();
  static const int kAboutFieldNumber = 8;
  const ::std::string& about() const;
  void set_about(const ::std::string& value);
  #if LANG_CXX11
  void set_about(::std::string&& value);
  #endif
  void set_about(const char* value);
  void set_about(const char* value, size_t size);
  ::std::string* mutable_about();
  ::std::string* release_about();
  void set_allocated_about(::std::string* about);

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_idx = 1;
  bool has_group_idx() const;
  void clear_group_idx();
  static const int kGroupIdxFieldNumber = 1;
  ::google::protobuf::uint32 group_idx() const;
  void set_group_idx(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // required .PTP.Common.GroupType group_type = 4;
  bool has_group_type() const;
  void clear_group_type();
  static const int kGroupTypeFieldNumber = 4;
  ::PTP::Common::GroupType group_type() const;
  void set_group_type(::PTP::Common::GroupType value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupCreateReq)
 private:
  void set_has_group_idx();
  void clear_has_group_idx();
  void set_has_sign();
  void clear_has_sign();
  void set_has_captcha();
  void clear_has_captcha();
  void set_has_group_type();
  void clear_has_group_type();
  void set_has_name();
  void clear_has_name();
  void set_has_avatar();
  void clear_has_avatar();
  void set_has_about();
  void clear_has_about();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > members_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::internal::ArenaStringPtr captcha_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr avatar_;
  ::google::protobuf::internal::ArenaStringPtr about_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_idx_;
  ::google::protobuf::uint32 auth_uid_;
  int group_type_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupCreateRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupCreateRes) */ {
 public:
  GroupCreateRes();
  virtual ~GroupCreateRes();

  GroupCreateRes(const GroupCreateRes& from);

  inline GroupCreateRes& operator=(const GroupCreateRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupCreateRes(GroupCreateRes&& from) noexcept
    : GroupCreateRes() {
    *this = ::std::move(from);
  }

  inline GroupCreateRes& operator=(GroupCreateRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupCreateRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupCreateRes* internal_default_instance() {
    return reinterpret_cast<const GroupCreateRes*>(
               &_GroupCreateRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GroupCreateRes* other);
  friend void swap(GroupCreateRes& a, GroupCreateRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupCreateRes* New() const final {
    return CreateMaybeMessage<GroupCreateRes>(NULL);
  }

  GroupCreateRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupCreateRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupCreateRes& from);
  void MergeFrom(const GroupCreateRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupCreateRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PTP.Common.GroupMember group_members = 2;
  int group_members_size() const;
  void clear_group_members();
  static const int kGroupMembersFieldNumber = 2;
  ::PTP::Common::GroupMember* mutable_group_members(int index);
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember >*
      mutable_group_members();
  const ::PTP::Common::GroupMember& group_members(int index) const;
  ::PTP::Common::GroupMember* add_group_members();
  const ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember >&
      group_members() const;

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // optional .PTP.Common.GroupInfo group = 1;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 1;
  private:
  const ::PTP::Common::GroupInfo& _internal_group() const;
  public:
  const ::PTP::Common::GroupInfo& group() const;
  ::PTP::Common::GroupInfo* release_group();
  ::PTP::Common::GroupInfo* mutable_group();
  void set_allocated_group(::PTP::Common::GroupInfo* group);

  // required .PTP.Common.ERR error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupCreateRes)
 private:
  void set_has_group();
  void clear_has_group();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember > group_members_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::PTP::Common::GroupInfo* group_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupModifyReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupModifyReq) */ {
 public:
  GroupModifyReq();
  virtual ~GroupModifyReq();

  GroupModifyReq(const GroupModifyReq& from);

  inline GroupModifyReq& operator=(const GroupModifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupModifyReq(GroupModifyReq&& from) noexcept
    : GroupModifyReq() {
    *this = ::std::move(from);
  }

  inline GroupModifyReq& operator=(GroupModifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupModifyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupModifyReq* internal_default_instance() {
    return reinterpret_cast<const GroupModifyReq*>(
               &_GroupModifyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GroupModifyReq* other);
  friend void swap(GroupModifyReq& a, GroupModifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupModifyReq* New() const final {
    return CreateMaybeMessage<GroupModifyReq>(NULL);
  }

  GroupModifyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupModifyReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupModifyReq& from);
  void MergeFrom(const GroupModifyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupModifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value = 4;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 2;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // required .PTP.Common.GroupModifyAction group_modify_action = 1;
  bool has_group_modify_action() const;
  void clear_group_modify_action();
  static const int kGroupModifyActionFieldNumber = 1;
  ::PTP::Common::GroupModifyAction group_modify_action() const;
  void set_group_modify_action(::PTP::Common::GroupModifyAction value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupModifyReq)
 private:
  void set_has_group_modify_action();
  void clear_has_group_modify_action();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_value();
  void clear_has_value();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 auth_uid_;
  int group_modify_action_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupModifyRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupModifyRes) */ {
 public:
  GroupModifyRes();
  virtual ~GroupModifyRes();

  GroupModifyRes(const GroupModifyRes& from);

  inline GroupModifyRes& operator=(const GroupModifyRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupModifyRes(GroupModifyRes&& from) noexcept
    : GroupModifyRes() {
    *this = ::std::move(from);
  }

  inline GroupModifyRes& operator=(GroupModifyRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupModifyRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupModifyRes* internal_default_instance() {
    return reinterpret_cast<const GroupModifyRes*>(
               &_GroupModifyRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GroupModifyRes* other);
  friend void swap(GroupModifyRes& a, GroupModifyRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupModifyRes* New() const final {
    return CreateMaybeMessage<GroupModifyRes>(NULL);
  }

  GroupModifyRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupModifyRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupModifyRes& from);
  void MergeFrom(const GroupModifyRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupModifyRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 notify_members = 5;
  int notify_members_size() const;
  void clear_notify_members();
  static const int kNotifyMembersFieldNumber = 5;
  ::google::protobuf::uint32 notify_members(int index) const;
  void set_notify_members(int index, ::google::protobuf::uint32 value);
  void add_notify_members(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      notify_members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_notify_members();

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 3;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required .PTP.Common.ERR error = 4;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // required .PTP.Common.GroupModifyAction group_modify_action = 1;
  bool has_group_modify_action() const;
  void clear_group_modify_action();
  static const int kGroupModifyActionFieldNumber = 1;
  ::PTP::Common::GroupModifyAction group_modify_action() const;
  void set_group_modify_action(::PTP::Common::GroupModifyAction value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupModifyRes)
 private:
  void set_has_group_modify_action();
  void clear_has_group_modify_action();
  void set_has_value();
  void clear_has_value();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > notify_members_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  int group_modify_action_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupModifyNotify : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupModifyNotify) */ {
 public:
  GroupModifyNotify();
  virtual ~GroupModifyNotify();

  GroupModifyNotify(const GroupModifyNotify& from);

  inline GroupModifyNotify& operator=(const GroupModifyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupModifyNotify(GroupModifyNotify&& from) noexcept
    : GroupModifyNotify() {
    *this = ::std::move(from);
  }

  inline GroupModifyNotify& operator=(GroupModifyNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupModifyNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupModifyNotify* internal_default_instance() {
    return reinterpret_cast<const GroupModifyNotify*>(
               &_GroupModifyNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GroupModifyNotify* other);
  friend void swap(GroupModifyNotify& a, GroupModifyNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupModifyNotify* New() const final {
    return CreateMaybeMessage<GroupModifyNotify>(NULL);
  }

  GroupModifyNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupModifyNotify>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupModifyNotify& from);
  void MergeFrom(const GroupModifyNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupModifyNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value = 4;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required uint32 group_id = 2;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required .PTP.Common.GroupModifyAction group_modify_action = 1;
  bool has_group_modify_action() const;
  void clear_group_modify_action();
  static const int kGroupModifyActionFieldNumber = 1;
  ::PTP::Common::GroupModifyAction group_modify_action() const;
  void set_group_modify_action(::PTP::Common::GroupModifyAction value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupModifyNotify)
 private:
  void set_has_group_modify_action();
  void clear_has_group_modify_action();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 group_id_;
  int group_modify_action_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupChangeMemberReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupChangeMemberReq) */ {
 public:
  GroupChangeMemberReq();
  virtual ~GroupChangeMemberReq();

  GroupChangeMemberReq(const GroupChangeMemberReq& from);

  inline GroupChangeMemberReq& operator=(const GroupChangeMemberReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupChangeMemberReq(GroupChangeMemberReq&& from) noexcept
    : GroupChangeMemberReq() {
    *this = ::std::move(from);
  }

  inline GroupChangeMemberReq& operator=(GroupChangeMemberReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupChangeMemberReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupChangeMemberReq* internal_default_instance() {
    return reinterpret_cast<const GroupChangeMemberReq*>(
               &_GroupChangeMemberReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GroupChangeMemberReq* other);
  friend void swap(GroupChangeMemberReq& a, GroupChangeMemberReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupChangeMemberReq* New() const final {
    return CreateMaybeMessage<GroupChangeMemberReq>(NULL);
  }

  GroupChangeMemberReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupChangeMemberReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupChangeMemberReq& from);
  void MergeFrom(const GroupChangeMemberReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupChangeMemberReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string members = 3;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 3;
  const ::std::string& members(int index) const;
  ::std::string* mutable_members(int index);
  void set_members(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_members(int index, ::std::string&& value);
  #endif
  void set_members(int index, const char* value);
  void set_members(int index, const char* value, size_t size);
  ::std::string* add_members();
  void add_members(const ::std::string& value);
  #if LANG_CXX11
  void add_members(::std::string&& value);
  #endif
  void add_members(const char* value);
  void add_members(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& members() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_members();

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 2;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
  bool has_group_member_modify_action() const;
  void clear_group_member_modify_action();
  static const int kGroupMemberModifyActionFieldNumber = 1;
  ::PTP::Common::GroupMemberModifyAction group_member_modify_action() const;
  void set_group_member_modify_action(::PTP::Common::GroupMemberModifyAction value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupChangeMemberReq)
 private:
  void set_has_group_member_modify_action();
  void clear_has_group_member_modify_action();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> members_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 auth_uid_;
  int group_member_modify_action_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupChangeMemberRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupChangeMemberRes) */ {
 public:
  GroupChangeMemberRes();
  virtual ~GroupChangeMemberRes();

  GroupChangeMemberRes(const GroupChangeMemberRes& from);

  inline GroupChangeMemberRes& operator=(const GroupChangeMemberRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupChangeMemberRes(GroupChangeMemberRes&& from) noexcept
    : GroupChangeMemberRes() {
    *this = ::std::move(from);
  }

  inline GroupChangeMemberRes& operator=(GroupChangeMemberRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupChangeMemberRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupChangeMemberRes* internal_default_instance() {
    return reinterpret_cast<const GroupChangeMemberRes*>(
               &_GroupChangeMemberRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GroupChangeMemberRes* other);
  friend void swap(GroupChangeMemberRes& a, GroupChangeMemberRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupChangeMemberRes* New() const final {
    return CreateMaybeMessage<GroupChangeMemberRes>(NULL);
  }

  GroupChangeMemberRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupChangeMemberRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupChangeMemberRes& from);
  void MergeFrom(const GroupChangeMemberRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupChangeMemberRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string members_chang = 4;
  int members_chang_size() const;
  void clear_members_chang();
  static const int kMembersChangFieldNumber = 4;
  const ::std::string& members_chang(int index) const;
  ::std::string* mutable_members_chang(int index);
  void set_members_chang(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_members_chang(int index, ::std::string&& value);
  #endif
  void set_members_chang(int index, const char* value);
  void set_members_chang(int index, const char* value, size_t size);
  ::std::string* add_members_chang();
  void add_members_chang(const ::std::string& value);
  #if LANG_CXX11
  void add_members_chang(::std::string&& value);
  #endif
  void add_members_chang(const char* value);
  void add_members_chang(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& members_chang() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_members_chang();

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 3;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required .PTP.Common.ERR error = 5;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
  bool has_group_member_modify_action() const;
  void clear_group_member_modify_action();
  static const int kGroupMemberModifyActionFieldNumber = 1;
  ::PTP::Common::GroupMemberModifyAction group_member_modify_action() const;
  void set_group_member_modify_action(::PTP::Common::GroupMemberModifyAction value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupChangeMemberRes)
 private:
  void set_has_group_member_modify_action();
  void clear_has_group_member_modify_action();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> members_chang_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  int group_member_modify_action_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupChangeMemberNotify : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupChangeMemberNotify) */ {
 public:
  GroupChangeMemberNotify();
  virtual ~GroupChangeMemberNotify();

  GroupChangeMemberNotify(const GroupChangeMemberNotify& from);

  inline GroupChangeMemberNotify& operator=(const GroupChangeMemberNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupChangeMemberNotify(GroupChangeMemberNotify&& from) noexcept
    : GroupChangeMemberNotify() {
    *this = ::std::move(from);
  }

  inline GroupChangeMemberNotify& operator=(GroupChangeMemberNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupChangeMemberNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupChangeMemberNotify* internal_default_instance() {
    return reinterpret_cast<const GroupChangeMemberNotify*>(
               &_GroupChangeMemberNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GroupChangeMemberNotify* other);
  friend void swap(GroupChangeMemberNotify& a, GroupChangeMemberNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupChangeMemberNotify* New() const final {
    return CreateMaybeMessage<GroupChangeMemberNotify>(NULL);
  }

  GroupChangeMemberNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupChangeMemberNotify>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupChangeMemberNotify& from);
  void MergeFrom(const GroupChangeMemberNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupChangeMemberNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string members_chang = 3;
  int members_chang_size() const;
  void clear_members_chang();
  static const int kMembersChangFieldNumber = 3;
  const ::std::string& members_chang(int index) const;
  ::std::string* mutable_members_chang(int index);
  void set_members_chang(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_members_chang(int index, ::std::string&& value);
  #endif
  void set_members_chang(int index, const char* value);
  void set_members_chang(int index, const char* value, size_t size);
  ::std::string* add_members_chang();
  void add_members_chang(const ::std::string& value);
  #if LANG_CXX11
  void add_members_chang(::std::string&& value);
  #endif
  void add_members_chang(const char* value);
  void add_members_chang(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& members_chang() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_members_chang();

  // required uint32 group_id = 2;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
  bool has_group_member_modify_action() const;
  void clear_group_member_modify_action();
  static const int kGroupMemberModifyActionFieldNumber = 1;
  ::PTP::Common::GroupMemberModifyAction group_member_modify_action() const;
  void set_group_member_modify_action(::PTP::Common::GroupMemberModifyAction value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupChangeMemberNotify)
 private:
  void set_has_group_member_modify_action();
  void clear_has_group_member_modify_action();
  void set_has_group_id();
  void clear_has_group_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> members_chang_;
  ::google::protobuf::uint32 group_id_;
  int group_member_modify_action_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupGetListReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupGetListReq) */ {
 public:
  GroupGetListReq();
  virtual ~GroupGetListReq();

  GroupGetListReq(const GroupGetListReq& from);

  inline GroupGetListReq& operator=(const GroupGetListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupGetListReq(GroupGetListReq&& from) noexcept
    : GroupGetListReq() {
    *this = ::std::move(from);
  }

  inline GroupGetListReq& operator=(GroupGetListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupGetListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupGetListReq* internal_default_instance() {
    return reinterpret_cast<const GroupGetListReq*>(
               &_GroupGetListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GroupGetListReq* other);
  friend void swap(GroupGetListReq& a, GroupGetListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupGetListReq* New() const final {
    return CreateMaybeMessage<GroupGetListReq>(NULL);
  }

  GroupGetListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupGetListReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupGetListReq& from);
  void MergeFrom(const GroupGetListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupGetListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_info_updated_time = 1;
  bool has_group_info_updated_time() const;
  void clear_group_info_updated_time();
  static const int kGroupInfoUpdatedTimeFieldNumber = 1;
  ::google::protobuf::uint32 group_info_updated_time() const;
  void set_group_info_updated_time(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupGetListReq)
 private:
  void set_has_group_info_updated_time();
  void clear_has_group_info_updated_time();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_info_updated_time_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupGetListRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupGetListRes) */ {
 public:
  GroupGetListRes();
  virtual ~GroupGetListRes();

  GroupGetListRes(const GroupGetListRes& from);

  inline GroupGetListRes& operator=(const GroupGetListRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupGetListRes(GroupGetListRes&& from) noexcept
    : GroupGetListRes() {
    *this = ::std::move(from);
  }

  inline GroupGetListRes& operator=(GroupGetListRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupGetListRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupGetListRes* internal_default_instance() {
    return reinterpret_cast<const GroupGetListRes*>(
               &_GroupGetListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(GroupGetListRes* other);
  friend void swap(GroupGetListRes& a, GroupGetListRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupGetListRes* New() const final {
    return CreateMaybeMessage<GroupGetListRes>(NULL);
  }

  GroupGetListRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupGetListRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupGetListRes& from);
  void MergeFrom(const GroupGetListRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupGetListRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PTP.Common.GroupInfo groups = 2;
  int groups_size() const;
  void clear_groups();
  static const int kGroupsFieldNumber = 2;
  ::PTP::Common::GroupInfo* mutable_groups(int index);
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupInfo >*
      mutable_groups();
  const ::PTP::Common::GroupInfo& groups(int index) const;
  ::PTP::Common::GroupInfo* add_groups();
  const ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupInfo >&
      groups() const;

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_info_updated_time = 1;
  bool has_group_info_updated_time() const;
  void clear_group_info_updated_time();
  static const int kGroupInfoUpdatedTimeFieldNumber = 1;
  ::google::protobuf::uint32 group_info_updated_time() const;
  void set_group_info_updated_time(::google::protobuf::uint32 value);

  // required .PTP.Common.ERR error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupGetListRes)
 private:
  void set_has_group_info_updated_time();
  void clear_has_group_info_updated_time();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupInfo > groups_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_info_updated_time_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupGetMembersListReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupGetMembersListReq) */ {
 public:
  GroupGetMembersListReq();
  virtual ~GroupGetMembersListReq();

  GroupGetMembersListReq(const GroupGetMembersListReq& from);

  inline GroupGetMembersListReq& operator=(const GroupGetMembersListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupGetMembersListReq(GroupGetMembersListReq&& from) noexcept
    : GroupGetMembersListReq() {
    *this = ::std::move(from);
  }

  inline GroupGetMembersListReq& operator=(GroupGetMembersListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupGetMembersListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupGetMembersListReq* internal_default_instance() {
    return reinterpret_cast<const GroupGetMembersListReq*>(
               &_GroupGetMembersListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GroupGetMembersListReq* other);
  friend void swap(GroupGetMembersListReq& a, GroupGetMembersListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupGetMembersListReq* New() const final {
    return CreateMaybeMessage<GroupGetMembersListReq>(NULL);
  }

  GroupGetMembersListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupGetMembersListReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupGetMembersListReq& from);
  void MergeFrom(const GroupGetMembersListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupGetMembersListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_members_updated_time = 1;
  bool has_group_members_updated_time() const;
  void clear_group_members_updated_time();
  static const int kGroupMembersUpdatedTimeFieldNumber = 1;
  ::google::protobuf::uint32 group_members_updated_time() const;
  void set_group_members_updated_time(::google::protobuf::uint32 value);

  // required uint32 group_id = 2;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupGetMembersListReq)
 private:
  void set_has_group_members_updated_time();
  void clear_has_group_members_updated_time();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_members_updated_time_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupGetMembersListRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupGetMembersListRes) */ {
 public:
  GroupGetMembersListRes();
  virtual ~GroupGetMembersListRes();

  GroupGetMembersListRes(const GroupGetMembersListRes& from);

  inline GroupGetMembersListRes& operator=(const GroupGetMembersListRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupGetMembersListRes(GroupGetMembersListRes&& from) noexcept
    : GroupGetMembersListRes() {
    *this = ::std::move(from);
  }

  inline GroupGetMembersListRes& operator=(GroupGetMembersListRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupGetMembersListRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupGetMembersListRes* internal_default_instance() {
    return reinterpret_cast<const GroupGetMembersListRes*>(
               &_GroupGetMembersListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(GroupGetMembersListRes* other);
  friend void swap(GroupGetMembersListRes& a, GroupGetMembersListRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupGetMembersListRes* New() const final {
    return CreateMaybeMessage<GroupGetMembersListRes>(NULL);
  }

  GroupGetMembersListRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupGetMembersListRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupGetMembersListRes& from);
  void MergeFrom(const GroupGetMembersListRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupGetMembersListRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PTP.Common.UserInfo members = 3;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 3;
  ::PTP::Common::UserInfo* mutable_members(int index);
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::UserInfo >*
      mutable_members();
  const ::PTP::Common::UserInfo& members(int index) const;
  ::PTP::Common::UserInfo* add_members();
  const ::google::protobuf::RepeatedPtrField< ::PTP::Common::UserInfo >&
      members() const;

  // repeated .PTP.Common.GroupMember group_members = 4;
  int group_members_size() const;
  void clear_group_members();
  static const int kGroupMembersFieldNumber = 4;
  ::PTP::Common::GroupMember* mutable_group_members(int index);
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember >*
      mutable_group_members();
  const ::PTP::Common::GroupMember& group_members(int index) const;
  ::PTP::Common::GroupMember* add_group_members();
  const ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember >&
      group_members() const;

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_members_updated_time = 1;
  bool has_group_members_updated_time() const;
  void clear_group_members_updated_time();
  static const int kGroupMembersUpdatedTimeFieldNumber = 1;
  ::google::protobuf::uint32 group_members_updated_time() const;
  void set_group_members_updated_time(::google::protobuf::uint32 value);

  // required uint32 group_id = 2;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required .PTP.Common.ERR error = 5;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupGetMembersListRes)
 private:
  void set_has_group_members_updated_time();
  void clear_has_group_members_updated_time();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::UserInfo > members_;
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember > group_members_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_members_updated_time_;
  ::google::protobuf::uint32 group_id_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupUnreadMsgReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupUnreadMsgReq) */ {
 public:
  GroupUnreadMsgReq();
  virtual ~GroupUnreadMsgReq();

  GroupUnreadMsgReq(const GroupUnreadMsgReq& from);

  inline GroupUnreadMsgReq& operator=(const GroupUnreadMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupUnreadMsgReq(GroupUnreadMsgReq&& from) noexcept
    : GroupUnreadMsgReq() {
    *this = ::std::move(from);
  }

  inline GroupUnreadMsgReq& operator=(GroupUnreadMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupUnreadMsgReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupUnreadMsgReq* internal_default_instance() {
    return reinterpret_cast<const GroupUnreadMsgReq*>(
               &_GroupUnreadMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(GroupUnreadMsgReq* other);
  friend void swap(GroupUnreadMsgReq& a, GroupUnreadMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupUnreadMsgReq* New() const final {
    return CreateMaybeMessage<GroupUnreadMsgReq>(NULL);
  }

  GroupUnreadMsgReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupUnreadMsgReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupUnreadMsgReq& from);
  void MergeFrom(const GroupUnreadMsgReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupUnreadMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupUnreadMsgReq)
 private:
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupUnreadMsgRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupUnreadMsgRes) */ {
 public:
  GroupUnreadMsgRes();
  virtual ~GroupUnreadMsgRes();

  GroupUnreadMsgRes(const GroupUnreadMsgRes& from);

  inline GroupUnreadMsgRes& operator=(const GroupUnreadMsgRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupUnreadMsgRes(GroupUnreadMsgRes&& from) noexcept
    : GroupUnreadMsgRes() {
    *this = ::std::move(from);
  }

  inline GroupUnreadMsgRes& operator=(GroupUnreadMsgRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupUnreadMsgRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupUnreadMsgRes* internal_default_instance() {
    return reinterpret_cast<const GroupUnreadMsgRes*>(
               &_GroupUnreadMsgRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(GroupUnreadMsgRes* other);
  friend void swap(GroupUnreadMsgRes& a, GroupUnreadMsgRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupUnreadMsgRes* New() const final {
    return CreateMaybeMessage<GroupUnreadMsgRes>(NULL);
  }

  GroupUnreadMsgRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupUnreadMsgRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupUnreadMsgRes& from);
  void MergeFrom(const GroupUnreadMsgRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupUnreadMsgRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PTP.Common.MsgInfo unread_list = 1;
  int unread_list_size() const;
  void clear_unread_list();
  static const int kUnreadListFieldNumber = 1;
  ::PTP::Common::MsgInfo* mutable_unread_list(int index);
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo >*
      mutable_unread_list();
  const ::PTP::Common::MsgInfo& unread_list(int index) const;
  ::PTP::Common::MsgInfo* add_unread_list();
  const ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo >&
      unread_list() const;

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 unread_cnt = 3;
  bool has_unread_cnt() const;
  void clear_unread_cnt();
  static const int kUnreadCntFieldNumber = 3;
  ::google::protobuf::uint32 unread_cnt() const;
  void set_unread_cnt(::google::protobuf::uint32 value);

  // required .PTP.Common.ERR error = 4;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupUnreadMsgRes)
 private:
  void set_has_unread_cnt();
  void clear_has_unread_cnt();
  void set_has_error();
  void clear_has_error();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo > unread_list_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 unread_cnt_;
  int error_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupRemoveSessionReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupRemoveSessionReq) */ {
 public:
  GroupRemoveSessionReq();
  virtual ~GroupRemoveSessionReq();

  GroupRemoveSessionReq(const GroupRemoveSessionReq& from);

  inline GroupRemoveSessionReq& operator=(const GroupRemoveSessionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupRemoveSessionReq(GroupRemoveSessionReq&& from) noexcept
    : GroupRemoveSessionReq() {
    *this = ::std::move(from);
  }

  inline GroupRemoveSessionReq& operator=(GroupRemoveSessionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupRemoveSessionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupRemoveSessionReq* internal_default_instance() {
    return reinterpret_cast<const GroupRemoveSessionReq*>(
               &_GroupRemoveSessionReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(GroupRemoveSessionReq* other);
  friend void swap(GroupRemoveSessionReq& a, GroupRemoveSessionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupRemoveSessionReq* New() const final {
    return CreateMaybeMessage<GroupRemoveSessionReq>(NULL);
  }

  GroupRemoveSessionReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupRemoveSessionReq>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupRemoveSessionReq& from);
  void MergeFrom(const GroupRemoveSessionReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupRemoveSessionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required uint32 group_id = 2;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupRemoveSessionReq)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupRemoveSessionRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupRemoveSessionRes) */ {
 public:
  GroupRemoveSessionRes();
  virtual ~GroupRemoveSessionRes();

  GroupRemoveSessionRes(const GroupRemoveSessionRes& from);

  inline GroupRemoveSessionRes& operator=(const GroupRemoveSessionRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupRemoveSessionRes(GroupRemoveSessionRes&& from) noexcept
    : GroupRemoveSessionRes() {
    *this = ::std::move(from);
  }

  inline GroupRemoveSessionRes& operator=(GroupRemoveSessionRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupRemoveSessionRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupRemoveSessionRes* internal_default_instance() {
    return reinterpret_cast<const GroupRemoveSessionRes*>(
               &_GroupRemoveSessionRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(GroupRemoveSessionRes* other);
  friend void swap(GroupRemoveSessionRes& a, GroupRemoveSessionRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupRemoveSessionRes* New() const final {
    return CreateMaybeMessage<GroupRemoveSessionRes>(NULL);
  }

  GroupRemoveSessionRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupRemoveSessionRes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupRemoveSessionRes& from);
  void MergeFrom(const GroupRemoveSessionRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupRemoveSessionRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes attach_data = 20;
  bool has_attach_data() const;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // required .PTP.Common.ERR error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::PTP::Common::ERR error() const;
  void set_error(::PTP::Common::ERR value);

  // required uint32 group_id = 2;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 auth_uid = 21;
  bool has_auth_uid() const;
  void clear_auth_uid();
  static const int kAuthUidFieldNumber = 21;
  ::google::protobuf::uint32 auth_uid() const;
  void set_auth_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupRemoveSessionRes)
 private:
  void set_has_error();
  void clear_has_error();
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_attach_data();
  void clear_has_attach_data();
  void set_has_auth_uid();
  void clear_has_auth_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  int error_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 auth_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupRemoveSessionNotify : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PTP.Group.GroupRemoveSessionNotify) */ {
 public:
  GroupRemoveSessionNotify();
  virtual ~GroupRemoveSessionNotify();

  GroupRemoveSessionNotify(const GroupRemoveSessionNotify& from);

  inline GroupRemoveSessionNotify& operator=(const GroupRemoveSessionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupRemoveSessionNotify(GroupRemoveSessionNotify&& from) noexcept
    : GroupRemoveSessionNotify() {
    *this = ::std::move(from);
  }

  inline GroupRemoveSessionNotify& operator=(GroupRemoveSessionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GroupRemoveSessionNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupRemoveSessionNotify* internal_default_instance() {
    return reinterpret_cast<const GroupRemoveSessionNotify*>(
               &_GroupRemoveSessionNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(GroupRemoveSessionNotify* other);
  friend void swap(GroupRemoveSessionNotify& a, GroupRemoveSessionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupRemoveSessionNotify* New() const final {
    return CreateMaybeMessage<GroupRemoveSessionNotify>(NULL);
  }

  GroupRemoveSessionNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupRemoveSessionNotify>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GroupRemoveSessionNotify& from);
  void MergeFrom(const GroupRemoveSessionNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupRemoveSessionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // required uint32 from_uid = 3;
  bool has_from_uid() const;
  void clear_from_uid();
  static const int kFromUidFieldNumber = 3;
  ::google::protobuf::uint32 from_uid() const;
  void set_from_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PTP.Group.GroupRemoveSessionNotify)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_from_uid();
  void clear_has_from_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 from_uid_;
  friend struct ::protobuf_PTP_2eGroup_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GroupPreCreateReq

// required .PTP.Common.GroupType group_type = 1;
inline bool GroupPreCreateReq::has_group_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupPreCreateReq::set_has_group_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupPreCreateReq::clear_has_group_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupPreCreateReq::clear_group_type() {
  group_type_ = 1;
  clear_has_group_type();
}
inline ::PTP::Common::GroupType GroupPreCreateReq::group_type() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateReq.group_type)
  return static_cast< ::PTP::Common::GroupType >(group_type_);
}
inline void GroupPreCreateReq::set_group_type(::PTP::Common::GroupType value) {
  assert(::PTP::Common::GroupType_IsValid(value));
  set_has_group_type();
  group_type_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateReq.group_type)
}

// repeated uint32 members = 7;
inline int GroupPreCreateReq::members_size() const {
  return members_.size();
}
inline void GroupPreCreateReq::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::uint32 GroupPreCreateReq::members(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateReq.members)
  return members_.Get(index);
}
inline void GroupPreCreateReq::set_members(int index, ::google::protobuf::uint32 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateReq.members)
}
inline void GroupPreCreateReq::add_members(::google::protobuf::uint32 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:PTP.Group.GroupPreCreateReq.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupPreCreateReq::members() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupPreCreateReq.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupPreCreateReq::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupPreCreateReq.members)
  return &members_;
}

// optional bytes attach_data = 20;
inline bool GroupPreCreateReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupPreCreateReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupPreCreateReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupPreCreateReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupPreCreateReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupPreCreateReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateReq.attach_data)
}
#if LANG_CXX11
inline void GroupPreCreateReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupPreCreateReq.attach_data)
}
#endif
inline void GroupPreCreateReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupPreCreateReq.attach_data)
}
inline void GroupPreCreateReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupPreCreateReq.attach_data)
}
inline ::std::string* GroupPreCreateReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupPreCreateReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupPreCreateReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupPreCreateReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupPreCreateReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupPreCreateReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupPreCreateReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupPreCreateReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupPreCreateReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupPreCreateReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupPreCreateReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateReq.auth_uid)
  return auth_uid_;
}
inline void GroupPreCreateReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateReq.auth_uid)
}

// -------------------------------------------------------------------

// GroupPreCreateRes

// optional string group_adr = 1;
inline bool GroupPreCreateRes::has_group_adr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupPreCreateRes::set_has_group_adr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupPreCreateRes::clear_has_group_adr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupPreCreateRes::clear_group_adr() {
  group_adr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_group_adr();
}
inline const ::std::string& GroupPreCreateRes::group_adr() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateRes.group_adr)
  return group_adr_.GetNoArena();
}
inline void GroupPreCreateRes::set_group_adr(const ::std::string& value) {
  set_has_group_adr();
  group_adr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateRes.group_adr)
}
#if LANG_CXX11
inline void GroupPreCreateRes::set_group_adr(::std::string&& value) {
  set_has_group_adr();
  group_adr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupPreCreateRes.group_adr)
}
#endif
inline void GroupPreCreateRes::set_group_adr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_group_adr();
  group_adr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupPreCreateRes.group_adr)
}
inline void GroupPreCreateRes::set_group_adr(const char* value, size_t size) {
  set_has_group_adr();
  group_adr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupPreCreateRes.group_adr)
}
inline ::std::string* GroupPreCreateRes::mutable_group_adr() {
  set_has_group_adr();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupPreCreateRes.group_adr)
  return group_adr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupPreCreateRes::release_group_adr() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupPreCreateRes.group_adr)
  if (!has_group_adr()) {
    return NULL;
  }
  clear_has_group_adr();
  return group_adr_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupPreCreateRes::set_allocated_group_adr(::std::string* group_adr) {
  if (group_adr != NULL) {
    set_has_group_adr();
  } else {
    clear_has_group_adr();
  }
  group_adr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_adr);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupPreCreateRes.group_adr)
}

// required uint32 group_idx = 2;
inline bool GroupPreCreateRes::has_group_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupPreCreateRes::set_has_group_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupPreCreateRes::clear_has_group_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupPreCreateRes::clear_group_idx() {
  group_idx_ = 0u;
  clear_has_group_idx();
}
inline ::google::protobuf::uint32 GroupPreCreateRes::group_idx() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateRes.group_idx)
  return group_idx_;
}
inline void GroupPreCreateRes::set_group_idx(::google::protobuf::uint32 value) {
  set_has_group_idx();
  group_idx_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateRes.group_idx)
}

// required .PTP.Common.ERR error = 3;
inline bool GroupPreCreateRes::has_error() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupPreCreateRes::set_has_error() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupPreCreateRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupPreCreateRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR GroupPreCreateRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void GroupPreCreateRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateRes.error)
}

// optional string captcha = 4;
inline bool GroupPreCreateRes::has_captcha() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupPreCreateRes::set_has_captcha() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupPreCreateRes::clear_has_captcha() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupPreCreateRes::clear_captcha() {
  captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_captcha();
}
inline const ::std::string& GroupPreCreateRes::captcha() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateRes.captcha)
  return captcha_.GetNoArena();
}
inline void GroupPreCreateRes::set_captcha(const ::std::string& value) {
  set_has_captcha();
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateRes.captcha)
}
#if LANG_CXX11
inline void GroupPreCreateRes::set_captcha(::std::string&& value) {
  set_has_captcha();
  captcha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupPreCreateRes.captcha)
}
#endif
inline void GroupPreCreateRes::set_captcha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_captcha();
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupPreCreateRes.captcha)
}
inline void GroupPreCreateRes::set_captcha(const char* value, size_t size) {
  set_has_captcha();
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupPreCreateRes.captcha)
}
inline ::std::string* GroupPreCreateRes::mutable_captcha() {
  set_has_captcha();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupPreCreateRes.captcha)
  return captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupPreCreateRes::release_captcha() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupPreCreateRes.captcha)
  if (!has_captcha()) {
    return NULL;
  }
  clear_has_captcha();
  return captcha_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupPreCreateRes::set_allocated_captcha(::std::string* captcha) {
  if (captcha != NULL) {
    set_has_captcha();
  } else {
    clear_has_captcha();
  }
  captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), captcha);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupPreCreateRes.captcha)
}

// optional bytes attach_data = 20;
inline bool GroupPreCreateRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupPreCreateRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupPreCreateRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupPreCreateRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupPreCreateRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupPreCreateRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateRes.attach_data)
}
#if LANG_CXX11
inline void GroupPreCreateRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupPreCreateRes.attach_data)
}
#endif
inline void GroupPreCreateRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupPreCreateRes.attach_data)
}
inline void GroupPreCreateRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupPreCreateRes.attach_data)
}
inline ::std::string* GroupPreCreateRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupPreCreateRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupPreCreateRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupPreCreateRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupPreCreateRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupPreCreateRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupPreCreateRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GroupPreCreateRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GroupPreCreateRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GroupPreCreateRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupPreCreateRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupPreCreateRes.auth_uid)
  return auth_uid_;
}
inline void GroupPreCreateRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupPreCreateRes.auth_uid)
}

// -------------------------------------------------------------------

// GroupCreateReq

// required uint32 group_idx = 1;
inline bool GroupCreateReq::has_group_idx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GroupCreateReq::set_has_group_idx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GroupCreateReq::clear_has_group_idx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GroupCreateReq::clear_group_idx() {
  group_idx_ = 0u;
  clear_has_group_idx();
}
inline ::google::protobuf::uint32 GroupCreateReq::group_idx() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.group_idx)
  return group_idx_;
}
inline void GroupCreateReq::set_group_idx(::google::protobuf::uint32 value) {
  set_has_group_idx();
  group_idx_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.group_idx)
}

// required bytes sign = 2;
inline bool GroupCreateReq::has_sign() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupCreateReq::set_has_sign() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupCreateReq::clear_has_sign() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupCreateReq::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
inline const ::std::string& GroupCreateReq::sign() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.sign)
  return sign_.GetNoArena();
}
inline void GroupCreateReq::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.sign)
}
#if LANG_CXX11
inline void GroupCreateReq::set_sign(::std::string&& value) {
  set_has_sign();
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupCreateReq.sign)
}
#endif
inline void GroupCreateReq::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupCreateReq.sign)
}
inline void GroupCreateReq::set_sign(const void* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupCreateReq.sign)
}
inline ::std::string* GroupCreateReq::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateReq.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupCreateReq::release_sign() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupCreateReq.sign)
  if (!has_sign()) {
    return NULL;
  }
  clear_has_sign();
  return sign_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupCreateReq::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupCreateReq.sign)
}

// required string captcha = 3;
inline bool GroupCreateReq::has_captcha() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupCreateReq::set_has_captcha() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupCreateReq::clear_has_captcha() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupCreateReq::clear_captcha() {
  captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_captcha();
}
inline const ::std::string& GroupCreateReq::captcha() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.captcha)
  return captcha_.GetNoArena();
}
inline void GroupCreateReq::set_captcha(const ::std::string& value) {
  set_has_captcha();
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.captcha)
}
#if LANG_CXX11
inline void GroupCreateReq::set_captcha(::std::string&& value) {
  set_has_captcha();
  captcha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupCreateReq.captcha)
}
#endif
inline void GroupCreateReq::set_captcha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_captcha();
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupCreateReq.captcha)
}
inline void GroupCreateReq::set_captcha(const char* value, size_t size) {
  set_has_captcha();
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupCreateReq.captcha)
}
inline ::std::string* GroupCreateReq::mutable_captcha() {
  set_has_captcha();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateReq.captcha)
  return captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupCreateReq::release_captcha() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupCreateReq.captcha)
  if (!has_captcha()) {
    return NULL;
  }
  clear_has_captcha();
  return captcha_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupCreateReq::set_allocated_captcha(::std::string* captcha) {
  if (captcha != NULL) {
    set_has_captcha();
  } else {
    clear_has_captcha();
  }
  captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), captcha);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupCreateReq.captcha)
}

// required .PTP.Common.GroupType group_type = 4;
inline bool GroupCreateReq::has_group_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GroupCreateReq::set_has_group_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GroupCreateReq::clear_has_group_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GroupCreateReq::clear_group_type() {
  group_type_ = 1;
  clear_has_group_type();
}
inline ::PTP::Common::GroupType GroupCreateReq::group_type() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.group_type)
  return static_cast< ::PTP::Common::GroupType >(group_type_);
}
inline void GroupCreateReq::set_group_type(::PTP::Common::GroupType value) {
  assert(::PTP::Common::GroupType_IsValid(value));
  set_has_group_type();
  group_type_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.group_type)
}

// optional string name = 5;
inline bool GroupCreateReq::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupCreateReq::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupCreateReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupCreateReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& GroupCreateReq::name() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.name)
  return name_.GetNoArena();
}
inline void GroupCreateReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.name)
}
#if LANG_CXX11
inline void GroupCreateReq::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupCreateReq.name)
}
#endif
inline void GroupCreateReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupCreateReq.name)
}
inline void GroupCreateReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupCreateReq.name)
}
inline ::std::string* GroupCreateReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupCreateReq::release_name() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupCreateReq.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupCreateReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupCreateReq.name)
}

// optional string avatar = 6;
inline bool GroupCreateReq::has_avatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupCreateReq::set_has_avatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupCreateReq::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupCreateReq::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_avatar();
}
inline const ::std::string& GroupCreateReq::avatar() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.avatar)
  return avatar_.GetNoArena();
}
inline void GroupCreateReq::set_avatar(const ::std::string& value) {
  set_has_avatar();
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.avatar)
}
#if LANG_CXX11
inline void GroupCreateReq::set_avatar(::std::string&& value) {
  set_has_avatar();
  avatar_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupCreateReq.avatar)
}
#endif
inline void GroupCreateReq::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_avatar();
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupCreateReq.avatar)
}
inline void GroupCreateReq::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupCreateReq.avatar)
}
inline ::std::string* GroupCreateReq::mutable_avatar() {
  set_has_avatar();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateReq.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupCreateReq::release_avatar() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupCreateReq.avatar)
  if (!has_avatar()) {
    return NULL;
  }
  clear_has_avatar();
  return avatar_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupCreateReq::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    set_has_avatar();
  } else {
    clear_has_avatar();
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupCreateReq.avatar)
}

// repeated uint32 members = 7;
inline int GroupCreateReq::members_size() const {
  return members_.size();
}
inline void GroupCreateReq::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::uint32 GroupCreateReq::members(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.members)
  return members_.Get(index);
}
inline void GroupCreateReq::set_members(int index, ::google::protobuf::uint32 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.members)
}
inline void GroupCreateReq::add_members(::google::protobuf::uint32 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:PTP.Group.GroupCreateReq.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupCreateReq::members() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupCreateReq.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupCreateReq::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupCreateReq.members)
  return &members_;
}

// optional string about = 8;
inline bool GroupCreateReq::has_about() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupCreateReq::set_has_about() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupCreateReq::clear_has_about() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupCreateReq::clear_about() {
  about_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_about();
}
inline const ::std::string& GroupCreateReq::about() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.about)
  return about_.GetNoArena();
}
inline void GroupCreateReq::set_about(const ::std::string& value) {
  set_has_about();
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.about)
}
#if LANG_CXX11
inline void GroupCreateReq::set_about(::std::string&& value) {
  set_has_about();
  about_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupCreateReq.about)
}
#endif
inline void GroupCreateReq::set_about(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_about();
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupCreateReq.about)
}
inline void GroupCreateReq::set_about(const char* value, size_t size) {
  set_has_about();
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupCreateReq.about)
}
inline ::std::string* GroupCreateReq::mutable_about() {
  set_has_about();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateReq.about)
  return about_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupCreateReq::release_about() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupCreateReq.about)
  if (!has_about()) {
    return NULL;
  }
  clear_has_about();
  return about_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupCreateReq::set_allocated_about(::std::string* about) {
  if (about != NULL) {
    set_has_about();
  } else {
    clear_has_about();
  }
  about_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), about);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupCreateReq.about)
}

// optional bytes attach_data = 20;
inline bool GroupCreateReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GroupCreateReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GroupCreateReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GroupCreateReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupCreateReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupCreateReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.attach_data)
}
#if LANG_CXX11
inline void GroupCreateReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupCreateReq.attach_data)
}
#endif
inline void GroupCreateReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupCreateReq.attach_data)
}
inline void GroupCreateReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupCreateReq.attach_data)
}
inline ::std::string* GroupCreateReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupCreateReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupCreateReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupCreateReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupCreateReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupCreateReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GroupCreateReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GroupCreateReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GroupCreateReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupCreateReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateReq.auth_uid)
  return auth_uid_;
}
inline void GroupCreateReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateReq.auth_uid)
}

// -------------------------------------------------------------------

// GroupCreateRes

// optional .PTP.Common.GroupInfo group = 1;
inline bool GroupCreateRes::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupCreateRes::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupCreateRes::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::PTP::Common::GroupInfo& GroupCreateRes::_internal_group() const {
  return *group_;
}
inline const ::PTP::Common::GroupInfo& GroupCreateRes::group() const {
  const ::PTP::Common::GroupInfo* p = group_;
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateRes.group)
  return p != NULL ? *p : *reinterpret_cast<const ::PTP::Common::GroupInfo*>(
      &::PTP::Common::_GroupInfo_default_instance_);
}
inline ::PTP::Common::GroupInfo* GroupCreateRes::release_group() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupCreateRes.group)
  clear_has_group();
  ::PTP::Common::GroupInfo* temp = group_;
  group_ = NULL;
  return temp;
}
inline ::PTP::Common::GroupInfo* GroupCreateRes::mutable_group() {
  set_has_group();
  if (group_ == NULL) {
    auto* p = CreateMaybeMessage<::PTP::Common::GroupInfo>(GetArenaNoVirtual());
    group_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateRes.group)
  return group_;
}
inline void GroupCreateRes::set_allocated_group(::PTP::Common::GroupInfo* group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(group_);
  }
  if (group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group, submessage_arena);
    }
    set_has_group();
  } else {
    clear_has_group();
  }
  group_ = group;
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupCreateRes.group)
}

// repeated .PTP.Common.GroupMember group_members = 2;
inline int GroupCreateRes::group_members_size() const {
  return group_members_.size();
}
inline ::PTP::Common::GroupMember* GroupCreateRes::mutable_group_members(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateRes.group_members)
  return group_members_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember >*
GroupCreateRes::mutable_group_members() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupCreateRes.group_members)
  return &group_members_;
}
inline const ::PTP::Common::GroupMember& GroupCreateRes::group_members(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateRes.group_members)
  return group_members_.Get(index);
}
inline ::PTP::Common::GroupMember* GroupCreateRes::add_group_members() {
  // @@protoc_insertion_point(field_add:PTP.Group.GroupCreateRes.group_members)
  return group_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember >&
GroupCreateRes::group_members() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupCreateRes.group_members)
  return group_members_;
}

// required .PTP.Common.ERR error = 3;
inline bool GroupCreateRes::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupCreateRes::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupCreateRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupCreateRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR GroupCreateRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void GroupCreateRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateRes.error)
}

// optional bytes attach_data = 20;
inline bool GroupCreateRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupCreateRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupCreateRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupCreateRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupCreateRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupCreateRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateRes.attach_data)
}
#if LANG_CXX11
inline void GroupCreateRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupCreateRes.attach_data)
}
#endif
inline void GroupCreateRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupCreateRes.attach_data)
}
inline void GroupCreateRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupCreateRes.attach_data)
}
inline ::std::string* GroupCreateRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupCreateRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupCreateRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupCreateRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupCreateRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupCreateRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupCreateRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupCreateRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupCreateRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupCreateRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupCreateRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupCreateRes.auth_uid)
  return auth_uid_;
}
inline void GroupCreateRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupCreateRes.auth_uid)
}

// -------------------------------------------------------------------

// GroupModifyReq

// required .PTP.Common.GroupModifyAction group_modify_action = 1;
inline bool GroupModifyReq::has_group_modify_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupModifyReq::set_has_group_modify_action() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupModifyReq::clear_has_group_modify_action() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupModifyReq::clear_group_modify_action() {
  group_modify_action_ = 1;
  clear_has_group_modify_action();
}
inline ::PTP::Common::GroupModifyAction GroupModifyReq::group_modify_action() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyReq.group_modify_action)
  return static_cast< ::PTP::Common::GroupModifyAction >(group_modify_action_);
}
inline void GroupModifyReq::set_group_modify_action(::PTP::Common::GroupModifyAction value) {
  assert(::PTP::Common::GroupModifyAction_IsValid(value));
  set_has_group_modify_action();
  group_modify_action_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyReq.group_modify_action)
}

// required uint32 group_id = 2;
inline bool GroupModifyReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupModifyReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupModifyReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupModifyReq::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupModifyReq::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyReq.group_id)
  return group_id_;
}
inline void GroupModifyReq::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyReq.group_id)
}

// required string value = 4;
inline bool GroupModifyReq::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupModifyReq::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupModifyReq::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupModifyReq::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& GroupModifyReq::value() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyReq.value)
  return value_.GetNoArena();
}
inline void GroupModifyReq::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyReq.value)
}
#if LANG_CXX11
inline void GroupModifyReq::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupModifyReq.value)
}
#endif
inline void GroupModifyReq::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupModifyReq.value)
}
inline void GroupModifyReq::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupModifyReq.value)
}
inline ::std::string* GroupModifyReq::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupModifyReq.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupModifyReq::release_value() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupModifyReq.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupModifyReq::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupModifyReq.value)
}

// optional bytes attach_data = 20;
inline bool GroupModifyReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupModifyReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupModifyReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupModifyReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupModifyReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupModifyReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyReq.attach_data)
}
#if LANG_CXX11
inline void GroupModifyReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupModifyReq.attach_data)
}
#endif
inline void GroupModifyReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupModifyReq.attach_data)
}
inline void GroupModifyReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupModifyReq.attach_data)
}
inline ::std::string* GroupModifyReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupModifyReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupModifyReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupModifyReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupModifyReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupModifyReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupModifyReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupModifyReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupModifyReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupModifyReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupModifyReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyReq.auth_uid)
  return auth_uid_;
}
inline void GroupModifyReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyReq.auth_uid)
}

// -------------------------------------------------------------------

// GroupModifyRes

// required .PTP.Common.GroupModifyAction group_modify_action = 1;
inline bool GroupModifyRes::has_group_modify_action() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GroupModifyRes::set_has_group_modify_action() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GroupModifyRes::clear_has_group_modify_action() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GroupModifyRes::clear_group_modify_action() {
  group_modify_action_ = 1;
  clear_has_group_modify_action();
}
inline ::PTP::Common::GroupModifyAction GroupModifyRes::group_modify_action() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyRes.group_modify_action)
  return static_cast< ::PTP::Common::GroupModifyAction >(group_modify_action_);
}
inline void GroupModifyRes::set_group_modify_action(::PTP::Common::GroupModifyAction value) {
  assert(::PTP::Common::GroupModifyAction_IsValid(value));
  set_has_group_modify_action();
  group_modify_action_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyRes.group_modify_action)
}

// required string value = 2;
inline bool GroupModifyRes::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupModifyRes::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupModifyRes::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupModifyRes::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& GroupModifyRes::value() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyRes.value)
  return value_.GetNoArena();
}
inline void GroupModifyRes::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyRes.value)
}
#if LANG_CXX11
inline void GroupModifyRes::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupModifyRes.value)
}
#endif
inline void GroupModifyRes::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupModifyRes.value)
}
inline void GroupModifyRes::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupModifyRes.value)
}
inline ::std::string* GroupModifyRes::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupModifyRes.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupModifyRes::release_value() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupModifyRes.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupModifyRes::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupModifyRes.value)
}

// required uint32 group_id = 3;
inline bool GroupModifyRes::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupModifyRes::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupModifyRes::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupModifyRes::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupModifyRes::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyRes.group_id)
  return group_id_;
}
inline void GroupModifyRes::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyRes.group_id)
}

// required .PTP.Common.ERR error = 4;
inline bool GroupModifyRes::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupModifyRes::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupModifyRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupModifyRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR GroupModifyRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void GroupModifyRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyRes.error)
}

// repeated uint32 notify_members = 5;
inline int GroupModifyRes::notify_members_size() const {
  return notify_members_.size();
}
inline void GroupModifyRes::clear_notify_members() {
  notify_members_.Clear();
}
inline ::google::protobuf::uint32 GroupModifyRes::notify_members(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyRes.notify_members)
  return notify_members_.Get(index);
}
inline void GroupModifyRes::set_notify_members(int index, ::google::protobuf::uint32 value) {
  notify_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyRes.notify_members)
}
inline void GroupModifyRes::add_notify_members(::google::protobuf::uint32 value) {
  notify_members_.Add(value);
  // @@protoc_insertion_point(field_add:PTP.Group.GroupModifyRes.notify_members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupModifyRes::notify_members() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupModifyRes.notify_members)
  return notify_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupModifyRes::mutable_notify_members() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupModifyRes.notify_members)
  return &notify_members_;
}

// optional bytes attach_data = 20;
inline bool GroupModifyRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupModifyRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupModifyRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupModifyRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupModifyRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupModifyRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyRes.attach_data)
}
#if LANG_CXX11
inline void GroupModifyRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupModifyRes.attach_data)
}
#endif
inline void GroupModifyRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupModifyRes.attach_data)
}
inline void GroupModifyRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupModifyRes.attach_data)
}
inline ::std::string* GroupModifyRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupModifyRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupModifyRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupModifyRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupModifyRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupModifyRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupModifyRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupModifyRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupModifyRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupModifyRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupModifyRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyRes.auth_uid)
  return auth_uid_;
}
inline void GroupModifyRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyRes.auth_uid)
}

// -------------------------------------------------------------------

// GroupModifyNotify

// required .PTP.Common.GroupModifyAction group_modify_action = 1;
inline bool GroupModifyNotify::has_group_modify_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupModifyNotify::set_has_group_modify_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupModifyNotify::clear_has_group_modify_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupModifyNotify::clear_group_modify_action() {
  group_modify_action_ = 1;
  clear_has_group_modify_action();
}
inline ::PTP::Common::GroupModifyAction GroupModifyNotify::group_modify_action() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyNotify.group_modify_action)
  return static_cast< ::PTP::Common::GroupModifyAction >(group_modify_action_);
}
inline void GroupModifyNotify::set_group_modify_action(::PTP::Common::GroupModifyAction value) {
  assert(::PTP::Common::GroupModifyAction_IsValid(value));
  set_has_group_modify_action();
  group_modify_action_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyNotify.group_modify_action)
}

// required uint32 group_id = 2;
inline bool GroupModifyNotify::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupModifyNotify::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupModifyNotify::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupModifyNotify::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupModifyNotify::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyNotify.group_id)
  return group_id_;
}
inline void GroupModifyNotify::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyNotify.group_id)
}

// required string value = 4;
inline bool GroupModifyNotify::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupModifyNotify::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupModifyNotify::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupModifyNotify::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& GroupModifyNotify::value() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupModifyNotify.value)
  return value_.GetNoArena();
}
inline void GroupModifyNotify::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupModifyNotify.value)
}
#if LANG_CXX11
inline void GroupModifyNotify::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupModifyNotify.value)
}
#endif
inline void GroupModifyNotify::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupModifyNotify.value)
}
inline void GroupModifyNotify::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupModifyNotify.value)
}
inline ::std::string* GroupModifyNotify::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupModifyNotify.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupModifyNotify::release_value() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupModifyNotify.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupModifyNotify::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupModifyNotify.value)
}

// -------------------------------------------------------------------

// GroupChangeMemberReq

// required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
inline bool GroupChangeMemberReq::has_group_member_modify_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupChangeMemberReq::set_has_group_member_modify_action() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupChangeMemberReq::clear_has_group_member_modify_action() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupChangeMemberReq::clear_group_member_modify_action() {
  group_member_modify_action_ = 1;
  clear_has_group_member_modify_action();
}
inline ::PTP::Common::GroupMemberModifyAction GroupChangeMemberReq::group_member_modify_action() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberReq.group_member_modify_action)
  return static_cast< ::PTP::Common::GroupMemberModifyAction >(group_member_modify_action_);
}
inline void GroupChangeMemberReq::set_group_member_modify_action(::PTP::Common::GroupMemberModifyAction value) {
  assert(::PTP::Common::GroupMemberModifyAction_IsValid(value));
  set_has_group_member_modify_action();
  group_member_modify_action_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberReq.group_member_modify_action)
}

// required uint32 group_id = 2;
inline bool GroupChangeMemberReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupChangeMemberReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupChangeMemberReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupChangeMemberReq::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberReq::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberReq.group_id)
  return group_id_;
}
inline void GroupChangeMemberReq::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberReq.group_id)
}

// repeated string members = 3;
inline int GroupChangeMemberReq::members_size() const {
  return members_.size();
}
inline void GroupChangeMemberReq::clear_members() {
  members_.Clear();
}
inline const ::std::string& GroupChangeMemberReq::members(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberReq.members)
  return members_.Get(index);
}
inline ::std::string* GroupChangeMemberReq::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupChangeMemberReq.members)
  return members_.Mutable(index);
}
inline void GroupChangeMemberReq::set_members(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberReq.members)
  members_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GroupChangeMemberReq::set_members(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberReq.members)
  members_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GroupChangeMemberReq::set_members(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  members_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupChangeMemberReq.members)
}
inline void GroupChangeMemberReq::set_members(int index, const char* value, size_t size) {
  members_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupChangeMemberReq.members)
}
inline ::std::string* GroupChangeMemberReq::add_members() {
  // @@protoc_insertion_point(field_add_mutable:PTP.Group.GroupChangeMemberReq.members)
  return members_.Add();
}
inline void GroupChangeMemberReq::add_members(const ::std::string& value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PTP.Group.GroupChangeMemberReq.members)
}
#if LANG_CXX11
inline void GroupChangeMemberReq::add_members(::std::string&& value) {
  members_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:PTP.Group.GroupChangeMemberReq.members)
}
#endif
inline void GroupChangeMemberReq::add_members(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PTP.Group.GroupChangeMemberReq.members)
}
inline void GroupChangeMemberReq::add_members(const char* value, size_t size) {
  members_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PTP.Group.GroupChangeMemberReq.members)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GroupChangeMemberReq::members() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupChangeMemberReq.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GroupChangeMemberReq::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupChangeMemberReq.members)
  return &members_;
}

// optional bytes attach_data = 20;
inline bool GroupChangeMemberReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupChangeMemberReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupChangeMemberReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupChangeMemberReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupChangeMemberReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupChangeMemberReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberReq.attach_data)
}
#if LANG_CXX11
inline void GroupChangeMemberReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupChangeMemberReq.attach_data)
}
#endif
inline void GroupChangeMemberReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupChangeMemberReq.attach_data)
}
inline void GroupChangeMemberReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupChangeMemberReq.attach_data)
}
inline ::std::string* GroupChangeMemberReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupChangeMemberReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupChangeMemberReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupChangeMemberReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupChangeMemberReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupChangeMemberReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupChangeMemberReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupChangeMemberReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupChangeMemberReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupChangeMemberReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupChangeMemberReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberReq.auth_uid)
  return auth_uid_;
}
inline void GroupChangeMemberReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberReq.auth_uid)
}

// -------------------------------------------------------------------

// GroupChangeMemberRes

// required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
inline bool GroupChangeMemberRes::has_group_member_modify_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupChangeMemberRes::set_has_group_member_modify_action() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupChangeMemberRes::clear_has_group_member_modify_action() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupChangeMemberRes::clear_group_member_modify_action() {
  group_member_modify_action_ = 1;
  clear_has_group_member_modify_action();
}
inline ::PTP::Common::GroupMemberModifyAction GroupChangeMemberRes::group_member_modify_action() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberRes.group_member_modify_action)
  return static_cast< ::PTP::Common::GroupMemberModifyAction >(group_member_modify_action_);
}
inline void GroupChangeMemberRes::set_group_member_modify_action(::PTP::Common::GroupMemberModifyAction value) {
  assert(::PTP::Common::GroupMemberModifyAction_IsValid(value));
  set_has_group_member_modify_action();
  group_member_modify_action_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberRes.group_member_modify_action)
}

// required uint32 group_id = 3;
inline bool GroupChangeMemberRes::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupChangeMemberRes::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupChangeMemberRes::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupChangeMemberRes::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberRes::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberRes.group_id)
  return group_id_;
}
inline void GroupChangeMemberRes::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberRes.group_id)
}

// repeated string members_chang = 4;
inline int GroupChangeMemberRes::members_chang_size() const {
  return members_chang_.size();
}
inline void GroupChangeMemberRes::clear_members_chang() {
  members_chang_.Clear();
}
inline const ::std::string& GroupChangeMemberRes::members_chang(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberRes.members_chang)
  return members_chang_.Get(index);
}
inline ::std::string* GroupChangeMemberRes::mutable_members_chang(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupChangeMemberRes.members_chang)
  return members_chang_.Mutable(index);
}
inline void GroupChangeMemberRes::set_members_chang(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberRes.members_chang)
  members_chang_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GroupChangeMemberRes::set_members_chang(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberRes.members_chang)
  members_chang_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GroupChangeMemberRes::set_members_chang(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  members_chang_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupChangeMemberRes.members_chang)
}
inline void GroupChangeMemberRes::set_members_chang(int index, const char* value, size_t size) {
  members_chang_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupChangeMemberRes.members_chang)
}
inline ::std::string* GroupChangeMemberRes::add_members_chang() {
  // @@protoc_insertion_point(field_add_mutable:PTP.Group.GroupChangeMemberRes.members_chang)
  return members_chang_.Add();
}
inline void GroupChangeMemberRes::add_members_chang(const ::std::string& value) {
  members_chang_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PTP.Group.GroupChangeMemberRes.members_chang)
}
#if LANG_CXX11
inline void GroupChangeMemberRes::add_members_chang(::std::string&& value) {
  members_chang_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:PTP.Group.GroupChangeMemberRes.members_chang)
}
#endif
inline void GroupChangeMemberRes::add_members_chang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  members_chang_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PTP.Group.GroupChangeMemberRes.members_chang)
}
inline void GroupChangeMemberRes::add_members_chang(const char* value, size_t size) {
  members_chang_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PTP.Group.GroupChangeMemberRes.members_chang)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GroupChangeMemberRes::members_chang() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupChangeMemberRes.members_chang)
  return members_chang_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GroupChangeMemberRes::mutable_members_chang() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupChangeMemberRes.members_chang)
  return &members_chang_;
}

// required .PTP.Common.ERR error = 5;
inline bool GroupChangeMemberRes::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupChangeMemberRes::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupChangeMemberRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupChangeMemberRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR GroupChangeMemberRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void GroupChangeMemberRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberRes.error)
}

// optional bytes attach_data = 20;
inline bool GroupChangeMemberRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupChangeMemberRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupChangeMemberRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupChangeMemberRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupChangeMemberRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupChangeMemberRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberRes.attach_data)
}
#if LANG_CXX11
inline void GroupChangeMemberRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupChangeMemberRes.attach_data)
}
#endif
inline void GroupChangeMemberRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupChangeMemberRes.attach_data)
}
inline void GroupChangeMemberRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupChangeMemberRes.attach_data)
}
inline ::std::string* GroupChangeMemberRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupChangeMemberRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupChangeMemberRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupChangeMemberRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupChangeMemberRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupChangeMemberRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupChangeMemberRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupChangeMemberRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupChangeMemberRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupChangeMemberRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupChangeMemberRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberRes.auth_uid)
  return auth_uid_;
}
inline void GroupChangeMemberRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberRes.auth_uid)
}

// -------------------------------------------------------------------

// GroupChangeMemberNotify

// required .PTP.Common.GroupMemberModifyAction group_member_modify_action = 1;
inline bool GroupChangeMemberNotify::has_group_member_modify_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupChangeMemberNotify::set_has_group_member_modify_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupChangeMemberNotify::clear_has_group_member_modify_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupChangeMemberNotify::clear_group_member_modify_action() {
  group_member_modify_action_ = 1;
  clear_has_group_member_modify_action();
}
inline ::PTP::Common::GroupMemberModifyAction GroupChangeMemberNotify::group_member_modify_action() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberNotify.group_member_modify_action)
  return static_cast< ::PTP::Common::GroupMemberModifyAction >(group_member_modify_action_);
}
inline void GroupChangeMemberNotify::set_group_member_modify_action(::PTP::Common::GroupMemberModifyAction value) {
  assert(::PTP::Common::GroupMemberModifyAction_IsValid(value));
  set_has_group_member_modify_action();
  group_member_modify_action_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberNotify.group_member_modify_action)
}

// required uint32 group_id = 2;
inline bool GroupChangeMemberNotify::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupChangeMemberNotify::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupChangeMemberNotify::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupChangeMemberNotify::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberNotify::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberNotify.group_id)
  return group_id_;
}
inline void GroupChangeMemberNotify::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberNotify.group_id)
}

// repeated string members_chang = 3;
inline int GroupChangeMemberNotify::members_chang_size() const {
  return members_chang_.size();
}
inline void GroupChangeMemberNotify::clear_members_chang() {
  members_chang_.Clear();
}
inline const ::std::string& GroupChangeMemberNotify::members_chang(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupChangeMemberNotify.members_chang)
  return members_chang_.Get(index);
}
inline ::std::string* GroupChangeMemberNotify::mutable_members_chang(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupChangeMemberNotify.members_chang)
  return members_chang_.Mutable(index);
}
inline void GroupChangeMemberNotify::set_members_chang(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberNotify.members_chang)
  members_chang_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GroupChangeMemberNotify::set_members_chang(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:PTP.Group.GroupChangeMemberNotify.members_chang)
  members_chang_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GroupChangeMemberNotify::set_members_chang(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  members_chang_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupChangeMemberNotify.members_chang)
}
inline void GroupChangeMemberNotify::set_members_chang(int index, const char* value, size_t size) {
  members_chang_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupChangeMemberNotify.members_chang)
}
inline ::std::string* GroupChangeMemberNotify::add_members_chang() {
  // @@protoc_insertion_point(field_add_mutable:PTP.Group.GroupChangeMemberNotify.members_chang)
  return members_chang_.Add();
}
inline void GroupChangeMemberNotify::add_members_chang(const ::std::string& value) {
  members_chang_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PTP.Group.GroupChangeMemberNotify.members_chang)
}
#if LANG_CXX11
inline void GroupChangeMemberNotify::add_members_chang(::std::string&& value) {
  members_chang_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:PTP.Group.GroupChangeMemberNotify.members_chang)
}
#endif
inline void GroupChangeMemberNotify::add_members_chang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  members_chang_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PTP.Group.GroupChangeMemberNotify.members_chang)
}
inline void GroupChangeMemberNotify::add_members_chang(const char* value, size_t size) {
  members_chang_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PTP.Group.GroupChangeMemberNotify.members_chang)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GroupChangeMemberNotify::members_chang() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupChangeMemberNotify.members_chang)
  return members_chang_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GroupChangeMemberNotify::mutable_members_chang() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupChangeMemberNotify.members_chang)
  return &members_chang_;
}

// -------------------------------------------------------------------

// GroupGetListReq

// required uint32 group_info_updated_time = 1;
inline bool GroupGetListReq::has_group_info_updated_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupGetListReq::set_has_group_info_updated_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupGetListReq::clear_has_group_info_updated_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupGetListReq::clear_group_info_updated_time() {
  group_info_updated_time_ = 0u;
  clear_has_group_info_updated_time();
}
inline ::google::protobuf::uint32 GroupGetListReq::group_info_updated_time() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetListReq.group_info_updated_time)
  return group_info_updated_time_;
}
inline void GroupGetListReq::set_group_info_updated_time(::google::protobuf::uint32 value) {
  set_has_group_info_updated_time();
  group_info_updated_time_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetListReq.group_info_updated_time)
}

// optional bytes attach_data = 20;
inline bool GroupGetListReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupGetListReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupGetListReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupGetListReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupGetListReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetListReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupGetListReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetListReq.attach_data)
}
#if LANG_CXX11
inline void GroupGetListReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupGetListReq.attach_data)
}
#endif
inline void GroupGetListReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupGetListReq.attach_data)
}
inline void GroupGetListReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupGetListReq.attach_data)
}
inline ::std::string* GroupGetListReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupGetListReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupGetListReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupGetListReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupGetListReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupGetListReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupGetListReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupGetListReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupGetListReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupGetListReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupGetListReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetListReq.auth_uid)
  return auth_uid_;
}
inline void GroupGetListReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetListReq.auth_uid)
}

// -------------------------------------------------------------------

// GroupGetListRes

// required uint32 group_info_updated_time = 1;
inline bool GroupGetListRes::has_group_info_updated_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupGetListRes::set_has_group_info_updated_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupGetListRes::clear_has_group_info_updated_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupGetListRes::clear_group_info_updated_time() {
  group_info_updated_time_ = 0u;
  clear_has_group_info_updated_time();
}
inline ::google::protobuf::uint32 GroupGetListRes::group_info_updated_time() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetListRes.group_info_updated_time)
  return group_info_updated_time_;
}
inline void GroupGetListRes::set_group_info_updated_time(::google::protobuf::uint32 value) {
  set_has_group_info_updated_time();
  group_info_updated_time_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetListRes.group_info_updated_time)
}

// repeated .PTP.Common.GroupInfo groups = 2;
inline int GroupGetListRes::groups_size() const {
  return groups_.size();
}
inline ::PTP::Common::GroupInfo* GroupGetListRes::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupGetListRes.groups)
  return groups_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupInfo >*
GroupGetListRes::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupGetListRes.groups)
  return &groups_;
}
inline const ::PTP::Common::GroupInfo& GroupGetListRes::groups(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetListRes.groups)
  return groups_.Get(index);
}
inline ::PTP::Common::GroupInfo* GroupGetListRes::add_groups() {
  // @@protoc_insertion_point(field_add:PTP.Group.GroupGetListRes.groups)
  return groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupInfo >&
GroupGetListRes::groups() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupGetListRes.groups)
  return groups_;
}

// required .PTP.Common.ERR error = 3;
inline bool GroupGetListRes::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupGetListRes::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupGetListRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupGetListRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR GroupGetListRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetListRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void GroupGetListRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetListRes.error)
}

// optional bytes attach_data = 20;
inline bool GroupGetListRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupGetListRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupGetListRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupGetListRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupGetListRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetListRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupGetListRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetListRes.attach_data)
}
#if LANG_CXX11
inline void GroupGetListRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupGetListRes.attach_data)
}
#endif
inline void GroupGetListRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupGetListRes.attach_data)
}
inline void GroupGetListRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupGetListRes.attach_data)
}
inline ::std::string* GroupGetListRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupGetListRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupGetListRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupGetListRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupGetListRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupGetListRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupGetListRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupGetListRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupGetListRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupGetListRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupGetListRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetListRes.auth_uid)
  return auth_uid_;
}
inline void GroupGetListRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetListRes.auth_uid)
}

// -------------------------------------------------------------------

// GroupGetMembersListReq

// required uint32 group_members_updated_time = 1;
inline bool GroupGetMembersListReq::has_group_members_updated_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupGetMembersListReq::set_has_group_members_updated_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupGetMembersListReq::clear_has_group_members_updated_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupGetMembersListReq::clear_group_members_updated_time() {
  group_members_updated_time_ = 0u;
  clear_has_group_members_updated_time();
}
inline ::google::protobuf::uint32 GroupGetMembersListReq::group_members_updated_time() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListReq.group_members_updated_time)
  return group_members_updated_time_;
}
inline void GroupGetMembersListReq::set_group_members_updated_time(::google::protobuf::uint32 value) {
  set_has_group_members_updated_time();
  group_members_updated_time_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListReq.group_members_updated_time)
}

// required uint32 group_id = 2;
inline bool GroupGetMembersListReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupGetMembersListReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupGetMembersListReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupGetMembersListReq::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupGetMembersListReq::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListReq.group_id)
  return group_id_;
}
inline void GroupGetMembersListReq::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListReq.group_id)
}

// optional bytes attach_data = 20;
inline bool GroupGetMembersListReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupGetMembersListReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupGetMembersListReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupGetMembersListReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupGetMembersListReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupGetMembersListReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListReq.attach_data)
}
#if LANG_CXX11
inline void GroupGetMembersListReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupGetMembersListReq.attach_data)
}
#endif
inline void GroupGetMembersListReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupGetMembersListReq.attach_data)
}
inline void GroupGetMembersListReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupGetMembersListReq.attach_data)
}
inline ::std::string* GroupGetMembersListReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupGetMembersListReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupGetMembersListReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupGetMembersListReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupGetMembersListReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupGetMembersListReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupGetMembersListReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupGetMembersListReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupGetMembersListReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupGetMembersListReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupGetMembersListReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListReq.auth_uid)
  return auth_uid_;
}
inline void GroupGetMembersListReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListReq.auth_uid)
}

// -------------------------------------------------------------------

// GroupGetMembersListRes

// required uint32 group_members_updated_time = 1;
inline bool GroupGetMembersListRes::has_group_members_updated_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupGetMembersListRes::set_has_group_members_updated_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupGetMembersListRes::clear_has_group_members_updated_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupGetMembersListRes::clear_group_members_updated_time() {
  group_members_updated_time_ = 0u;
  clear_has_group_members_updated_time();
}
inline ::google::protobuf::uint32 GroupGetMembersListRes::group_members_updated_time() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListRes.group_members_updated_time)
  return group_members_updated_time_;
}
inline void GroupGetMembersListRes::set_group_members_updated_time(::google::protobuf::uint32 value) {
  set_has_group_members_updated_time();
  group_members_updated_time_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListRes.group_members_updated_time)
}

// required uint32 group_id = 2;
inline bool GroupGetMembersListRes::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupGetMembersListRes::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupGetMembersListRes::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupGetMembersListRes::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupGetMembersListRes::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListRes.group_id)
  return group_id_;
}
inline void GroupGetMembersListRes::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListRes.group_id)
}

// repeated .PTP.Common.UserInfo members = 3;
inline int GroupGetMembersListRes::members_size() const {
  return members_.size();
}
inline ::PTP::Common::UserInfo* GroupGetMembersListRes::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupGetMembersListRes.members)
  return members_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PTP::Common::UserInfo >*
GroupGetMembersListRes::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupGetMembersListRes.members)
  return &members_;
}
inline const ::PTP::Common::UserInfo& GroupGetMembersListRes::members(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListRes.members)
  return members_.Get(index);
}
inline ::PTP::Common::UserInfo* GroupGetMembersListRes::add_members() {
  // @@protoc_insertion_point(field_add:PTP.Group.GroupGetMembersListRes.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PTP::Common::UserInfo >&
GroupGetMembersListRes::members() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupGetMembersListRes.members)
  return members_;
}

// repeated .PTP.Common.GroupMember group_members = 4;
inline int GroupGetMembersListRes::group_members_size() const {
  return group_members_.size();
}
inline ::PTP::Common::GroupMember* GroupGetMembersListRes::mutable_group_members(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupGetMembersListRes.group_members)
  return group_members_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember >*
GroupGetMembersListRes::mutable_group_members() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupGetMembersListRes.group_members)
  return &group_members_;
}
inline const ::PTP::Common::GroupMember& GroupGetMembersListRes::group_members(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListRes.group_members)
  return group_members_.Get(index);
}
inline ::PTP::Common::GroupMember* GroupGetMembersListRes::add_group_members() {
  // @@protoc_insertion_point(field_add:PTP.Group.GroupGetMembersListRes.group_members)
  return group_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PTP::Common::GroupMember >&
GroupGetMembersListRes::group_members() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupGetMembersListRes.group_members)
  return group_members_;
}

// required .PTP.Common.ERR error = 5;
inline bool GroupGetMembersListRes::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupGetMembersListRes::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupGetMembersListRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupGetMembersListRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR GroupGetMembersListRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void GroupGetMembersListRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListRes.error)
}

// optional bytes attach_data = 20;
inline bool GroupGetMembersListRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupGetMembersListRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupGetMembersListRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupGetMembersListRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupGetMembersListRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupGetMembersListRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListRes.attach_data)
}
#if LANG_CXX11
inline void GroupGetMembersListRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupGetMembersListRes.attach_data)
}
#endif
inline void GroupGetMembersListRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupGetMembersListRes.attach_data)
}
inline void GroupGetMembersListRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupGetMembersListRes.attach_data)
}
inline ::std::string* GroupGetMembersListRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupGetMembersListRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupGetMembersListRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupGetMembersListRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupGetMembersListRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupGetMembersListRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupGetMembersListRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupGetMembersListRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupGetMembersListRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupGetMembersListRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupGetMembersListRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupGetMembersListRes.auth_uid)
  return auth_uid_;
}
inline void GroupGetMembersListRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupGetMembersListRes.auth_uid)
}

// -------------------------------------------------------------------

// GroupUnreadMsgReq

// optional bytes attach_data = 20;
inline bool GroupUnreadMsgReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupUnreadMsgReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupUnreadMsgReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupUnreadMsgReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupUnreadMsgReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupUnreadMsgReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupUnreadMsgReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupUnreadMsgReq.attach_data)
}
#if LANG_CXX11
inline void GroupUnreadMsgReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupUnreadMsgReq.attach_data)
}
#endif
inline void GroupUnreadMsgReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupUnreadMsgReq.attach_data)
}
inline void GroupUnreadMsgReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupUnreadMsgReq.attach_data)
}
inline ::std::string* GroupUnreadMsgReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupUnreadMsgReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupUnreadMsgReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupUnreadMsgReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupUnreadMsgReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupUnreadMsgReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupUnreadMsgReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupUnreadMsgReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupUnreadMsgReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupUnreadMsgReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupUnreadMsgReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupUnreadMsgReq.auth_uid)
  return auth_uid_;
}
inline void GroupUnreadMsgReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupUnreadMsgReq.auth_uid)
}

// -------------------------------------------------------------------

// GroupUnreadMsgRes

// repeated .PTP.Common.MsgInfo unread_list = 1;
inline int GroupUnreadMsgRes::unread_list_size() const {
  return unread_list_.size();
}
inline ::PTP::Common::MsgInfo* GroupUnreadMsgRes::mutable_unread_list(int index) {
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupUnreadMsgRes.unread_list)
  return unread_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo >*
GroupUnreadMsgRes::mutable_unread_list() {
  // @@protoc_insertion_point(field_mutable_list:PTP.Group.GroupUnreadMsgRes.unread_list)
  return &unread_list_;
}
inline const ::PTP::Common::MsgInfo& GroupUnreadMsgRes::unread_list(int index) const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupUnreadMsgRes.unread_list)
  return unread_list_.Get(index);
}
inline ::PTP::Common::MsgInfo* GroupUnreadMsgRes::add_unread_list() {
  // @@protoc_insertion_point(field_add:PTP.Group.GroupUnreadMsgRes.unread_list)
  return unread_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PTP::Common::MsgInfo >&
GroupUnreadMsgRes::unread_list() const {
  // @@protoc_insertion_point(field_list:PTP.Group.GroupUnreadMsgRes.unread_list)
  return unread_list_;
}

// required uint32 unread_cnt = 3;
inline bool GroupUnreadMsgRes::has_unread_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupUnreadMsgRes::set_has_unread_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupUnreadMsgRes::clear_has_unread_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupUnreadMsgRes::clear_unread_cnt() {
  unread_cnt_ = 0u;
  clear_has_unread_cnt();
}
inline ::google::protobuf::uint32 GroupUnreadMsgRes::unread_cnt() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupUnreadMsgRes.unread_cnt)
  return unread_cnt_;
}
inline void GroupUnreadMsgRes::set_unread_cnt(::google::protobuf::uint32 value) {
  set_has_unread_cnt();
  unread_cnt_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupUnreadMsgRes.unread_cnt)
}

// required .PTP.Common.ERR error = 4;
inline bool GroupUnreadMsgRes::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupUnreadMsgRes::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupUnreadMsgRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupUnreadMsgRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR GroupUnreadMsgRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupUnreadMsgRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void GroupUnreadMsgRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupUnreadMsgRes.error)
}

// optional bytes attach_data = 20;
inline bool GroupUnreadMsgRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupUnreadMsgRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupUnreadMsgRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupUnreadMsgRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupUnreadMsgRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupUnreadMsgRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupUnreadMsgRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupUnreadMsgRes.attach_data)
}
#if LANG_CXX11
inline void GroupUnreadMsgRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupUnreadMsgRes.attach_data)
}
#endif
inline void GroupUnreadMsgRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupUnreadMsgRes.attach_data)
}
inline void GroupUnreadMsgRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupUnreadMsgRes.attach_data)
}
inline ::std::string* GroupUnreadMsgRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupUnreadMsgRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupUnreadMsgRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupUnreadMsgRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupUnreadMsgRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupUnreadMsgRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupUnreadMsgRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupUnreadMsgRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupUnreadMsgRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupUnreadMsgRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupUnreadMsgRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupUnreadMsgRes.auth_uid)
  return auth_uid_;
}
inline void GroupUnreadMsgRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupUnreadMsgRes.auth_uid)
}

// -------------------------------------------------------------------

// GroupRemoveSessionReq

// required uint32 group_id = 2;
inline bool GroupRemoveSessionReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupRemoveSessionReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupRemoveSessionReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupRemoveSessionReq::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupRemoveSessionReq::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionReq.group_id)
  return group_id_;
}
inline void GroupRemoveSessionReq::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionReq.group_id)
}

// optional bytes attach_data = 20;
inline bool GroupRemoveSessionReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupRemoveSessionReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupRemoveSessionReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupRemoveSessionReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupRemoveSessionReq::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupRemoveSessionReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionReq.attach_data)
}
#if LANG_CXX11
inline void GroupRemoveSessionReq::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupRemoveSessionReq.attach_data)
}
#endif
inline void GroupRemoveSessionReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupRemoveSessionReq.attach_data)
}
inline void GroupRemoveSessionReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupRemoveSessionReq.attach_data)
}
inline ::std::string* GroupRemoveSessionReq::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupRemoveSessionReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupRemoveSessionReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupRemoveSessionReq.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupRemoveSessionReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupRemoveSessionReq.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupRemoveSessionReq::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupRemoveSessionReq::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupRemoveSessionReq::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupRemoveSessionReq::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupRemoveSessionReq::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionReq.auth_uid)
  return auth_uid_;
}
inline void GroupRemoveSessionReq::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionReq.auth_uid)
}

// -------------------------------------------------------------------

// GroupRemoveSessionRes

// required .PTP.Common.ERR error = 1;
inline bool GroupRemoveSessionRes::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupRemoveSessionRes::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupRemoveSessionRes::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupRemoveSessionRes::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::PTP::Common::ERR GroupRemoveSessionRes::error() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionRes.error)
  return static_cast< ::PTP::Common::ERR >(error_);
}
inline void GroupRemoveSessionRes::set_error(::PTP::Common::ERR value) {
  assert(::PTP::Common::ERR_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionRes.error)
}

// required uint32 group_id = 2;
inline bool GroupRemoveSessionRes::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupRemoveSessionRes::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupRemoveSessionRes::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupRemoveSessionRes::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupRemoveSessionRes::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionRes.group_id)
  return group_id_;
}
inline void GroupRemoveSessionRes::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionRes.group_id)
}

// optional bytes attach_data = 20;
inline bool GroupRemoveSessionRes::has_attach_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupRemoveSessionRes::set_has_attach_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupRemoveSessionRes::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupRemoveSessionRes::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attach_data();
}
inline const ::std::string& GroupRemoveSessionRes::attach_data() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionRes.attach_data)
  return attach_data_.GetNoArena();
}
inline void GroupRemoveSessionRes::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionRes.attach_data)
}
#if LANG_CXX11
inline void GroupRemoveSessionRes::set_attach_data(::std::string&& value) {
  set_has_attach_data();
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PTP.Group.GroupRemoveSessionRes.attach_data)
}
#endif
inline void GroupRemoveSessionRes::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PTP.Group.GroupRemoveSessionRes.attach_data)
}
inline void GroupRemoveSessionRes::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PTP.Group.GroupRemoveSessionRes.attach_data)
}
inline ::std::string* GroupRemoveSessionRes::mutable_attach_data() {
  set_has_attach_data();
  // @@protoc_insertion_point(field_mutable:PTP.Group.GroupRemoveSessionRes.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupRemoveSessionRes::release_attach_data() {
  // @@protoc_insertion_point(field_release:PTP.Group.GroupRemoveSessionRes.attach_data)
  if (!has_attach_data()) {
    return NULL;
  }
  clear_has_attach_data();
  return attach_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupRemoveSessionRes::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    set_has_attach_data();
  } else {
    clear_has_attach_data();
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:PTP.Group.GroupRemoveSessionRes.attach_data)
}

// optional uint32 auth_uid = 21;
inline bool GroupRemoveSessionRes::has_auth_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupRemoveSessionRes::set_has_auth_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupRemoveSessionRes::clear_has_auth_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupRemoveSessionRes::clear_auth_uid() {
  auth_uid_ = 0u;
  clear_has_auth_uid();
}
inline ::google::protobuf::uint32 GroupRemoveSessionRes::auth_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionRes.auth_uid)
  return auth_uid_;
}
inline void GroupRemoveSessionRes::set_auth_uid(::google::protobuf::uint32 value) {
  set_has_auth_uid();
  auth_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionRes.auth_uid)
}

// -------------------------------------------------------------------

// GroupRemoveSessionNotify

// required uint32 group_id = 1;
inline bool GroupRemoveSessionNotify::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupRemoveSessionNotify::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupRemoveSessionNotify::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupRemoveSessionNotify::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupRemoveSessionNotify::group_id() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionNotify.group_id)
  return group_id_;
}
inline void GroupRemoveSessionNotify::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionNotify.group_id)
}

// required uint32 from_uid = 3;
inline bool GroupRemoveSessionNotify::has_from_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupRemoveSessionNotify::set_has_from_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupRemoveSessionNotify::clear_has_from_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupRemoveSessionNotify::clear_from_uid() {
  from_uid_ = 0u;
  clear_has_from_uid();
}
inline ::google::protobuf::uint32 GroupRemoveSessionNotify::from_uid() const {
  // @@protoc_insertion_point(field_get:PTP.Group.GroupRemoveSessionNotify.from_uid)
  return from_uid_;
}
inline void GroupRemoveSessionNotify::set_from_uid(::google::protobuf::uint32 value) {
  set_has_from_uid();
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:PTP.Group.GroupRemoveSessionNotify.from_uid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Group
}  // namespace PTP

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_PTP_2eGroup_2eproto
